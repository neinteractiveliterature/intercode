#import "../queries.graphql"
#import "../../Models/commonFormFragments.graphql"

fragment MySignupFields on Signup {
  id
  state
  waitlist_position
}

fragment MySignupRequestFields on SignupRequest {
  id
  state
  target_run {
    id
  }
  requested_bucket_key
  replace_signup {
    id
  }
}

fragment EventPageRunFields on Run {
  id
  title_suffix
  starts_at
  current_ability_can_signup_summary_run
  signup_count_by_state_and_bucket_key_and_counted

  rooms {
    id
    name
  }

  my_signups {
    id
    ...MySignupFields
  }

  my_signup_requests {
    id
    ...MySignupRequestFields
  }
}

fragment RunCardRegistrationPolicyFields on RegistrationPolicy {
  slots_limited
  prevent_no_preference_signups
  total_slots_including_not_counted

  buckets {
    key
    name
    description
    not_counted
    slots_limited
    anything
    minimum_slots
    total_slots
  }
}

query EventPageQuery($eventId: ID!) {
  # eslint-disable-next-line @graphql-eslint/naming-convention
  __typename

  currentAbility {
    can_read_schedule
    can_update_event(eventId: $eventId)
    can_read_event_signups(eventId: $eventId)
  }

  convention: conventionByRequestHost {
    id
    ...CommonConventionData

    my_profile {
      id
    }

    event(id: $eventId) {
      id
      title
      length_seconds
      private_signup_list
      my_rating
      can_play_concurrently
      form_response_attrs_json_with_rendered_markdown

      event_category {
        id
        team_member_name
      }

      form {
        id
        ...CommonFormFields

        form_sections {
          id
          ...CommonFormSectionFields

          form_items {
            id
            public_description
            ...CommonFormItemFields
          }
        }
      }

      team_members {
        id
        email
        display_team_member
        user_con_profile {
          id
          name_without_nickname
          gravatar_enabled
          gravatar_url
        }
      }

      registration_policy {
        ...RunCardRegistrationPolicyFields
      }

      runs {
        id
        ...EventPageRunFields
      }
    }
  }
}

query CreateModeratedSignupModalQuery {
  convention: conventionByRequestHost {
    id

    my_profile {
      id

      signups {
        id
        state

        run {
          id
          starts_at

          event {
            id
            title
            length_seconds
            can_play_concurrently
          }
        }
      }
    }
  }
}
