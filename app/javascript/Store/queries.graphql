#import "./orderFields.graphql"
#import "./adminProductFields.graphql"
#import "./pricingStructureFields.graphql"

query AdminOrdersQuery($page: Int, $perPage: Int, $filters: OrderFiltersInput, $sort: [SortInput!]) {
  currentAbility {
    can_create_orders
    can_update_orders
  }

  convention: conventionByRequestHost {
    id
    timezone_name

    orders_paginated(page: $page, per_page: $perPage, filters: $filters, sort: $sort) {
      current_page
      per_page
      total_pages

      entries {
        id
        ...AdminOrderFieldsFragment
      }
    }
  }
}

query AdminProductsQuery {
  convention: conventionByRequestHost {
    id
    products {
      id
      ...AdminProductFields
    }
    ticket_types {
      id
      description
    }
  }

  currentAbility {
    can_update_products
  }
}

query AdminStoreAbilityQuery {
  currentAbility {
    can_update_products
    can_update_orders
  }

  convention: conventionByRequestHost {
    id
    timezone_name
  }
}

query CartQuery {
  convention: conventionByRequestHost {
    id
    name

    my_profile {
      id
      name_without_nickname

      current_pending_order {
        id
        ...CartOrderFields
      }
    }
  }
}

query OrderHistoryQuery {
  convention: conventionByRequestHost {
    id
    name
    timezone_name

    staff_positions {
      id
      name
      email
    }

    my_profile {
      id
      name_without_nickname

      orders {
        id
        status
        submitted_at

        total_price {
          fractional
          currency_code
        }

        payment_amount {
          fractional
          currency_code
        }

        coupon_applications {
          id
          ...CouponApplicationFields
        }

        order_entries {
          id
          quantity

          product {
            id
            name
            image_url
            payment_options
          }

          product_variant {
            id
            name
            image_url
          }

          price_per_item {
            fractional
            currency_code
          }

          price {
            fractional
            currency_code
          }
        }
      }
    }
  }
}

query OrderSummaryQuery {
  convention: conventionByRequestHost {
    id
    products {
      id
      name

      order_quantities_by_status {
        status
        quantity
      }

      product_variants {
        id
        name

        order_quantities_by_status {
          status
          quantity
        }
      }
    }
  }
}

query OrderFormProductQuery($productId: ID!) {
  currentUser {
    id
  }

  convention: conventionByRequestHost {
    id
    product(id: $productId) {
      id
      image_url
      name
      pricing_structure {
        ...PricingStructureFields
      }
      description_html
      provides_ticket_type {
        id
      }

      product_variants {
        id
        name
        position
        override_pricing_structure {
          ...PricingStructureFields
        }
      }
    }
  }
}

query CurrentPendingOrderPaymentIntentClientSecretQuery {
  convention: conventionByRequestHost {
    id
    my_profile {
      id
      current_pending_order {
        id
        payment_intent_client_secret
      }
    }
  }
}
