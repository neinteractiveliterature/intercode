#import "./orderFields.graphql"
#import "./adminProductFields.graphql"

mutation MarkOrderPaid($orderId: ID!) {
  markOrderPaid(input: { id: $orderId }) {
    order {
      id
      ...AdminOrderFieldsFragment
    }
  }
}

mutation CancelOrder($orderId: ID!, $skipRefund: Boolean) {
  cancelOrder(input: { id: $orderId, skip_refund: $skipRefund }) {
    order {
      id
      ...AdminOrderFieldsFragment
    }
  }
}

mutation CreateOrder(
  $userConProfileId: ID!
  $order: OrderInput!
  $status: OrderStatus!
  $orderEntries: [OrderEntryInput!]
) {
  createOrder(
    input: { userConProfileId: $userConProfileId, order: $order, status: $status, order_entries: $orderEntries }
  ) {
    order {
      id
      ...AdminOrderFieldsFragment
    }
  }
}

mutation AdminUpdateOrder($id: ID!, $order: OrderInput!) {
  updateOrder(input: { id: $id, order: $order }) {
    order {
      id
      ...AdminOrderFieldsFragment
    }
  }
}

mutation CreateProduct($product: ProductInput!) {
  createProduct(input: { product: $product }) {
    product {
      id
      ...AdminProductFields
    }
  }
}

mutation UpdateProduct($id: ID!, $product: ProductInput!) {
  updateProduct(input: { id: $id, product: $product }) {
    product {
      id
      ...AdminProductFields
    }
  }
}

mutation DeleteProduct($id: ID!) {
  deleteProduct(input: { id: $id }) {
    product {
      id
      ...AdminProductFields
    }
  }
}

mutation AdminCreateOrderEntry($input: CreateOrderEntryInput!) {
  createOrderEntry(input: $input) {
    order_entry {
      id
      ...OrderEntryFields

      order {
        id
        ...AdminOrderFieldsFragment
      }
    }
  }
}

mutation AdminUpdateOrderEntry($input: UpdateOrderEntryInput!) {
  updateOrderEntry(input: $input) {
    order_entry {
      id
      ...OrderEntryFields

      order {
        id
        ...AdminOrderFieldsFragment
      }
    }
  }
}

mutation UpdateOrderEntry($input: UpdateOrderEntryInput!) {
  updateOrderEntry(input: $input) {
    order_entry {
      id
      ...OrderEntryFields
    }
  }
}

mutation DeleteOrderEntry($input: DeleteOrderEntryInput!) {
  deleteOrderEntry(input: $input) {
    order_entry {
      id
    }
  }
}

mutation AdminDeleteOrderEntry($input: DeleteOrderEntryInput!) {
  deleteOrderEntry(input: $input) {
    order_entry {
      id

      order {
        id
        ...AdminOrderFieldsFragment
      }
    }
  }
}

mutation SubmitOrder($input: SubmitOrderInput!) {
  submitOrder(input: $input) {
    order {
      id
      status
    }
  }
}

mutation AddOrderEntryToCurrentPendingOrder(
  $productId: ID!
  $productVariantId: ID
  $quantity: Int!
  $payWhatYouWantAmount: MoneyInput
) {
  addOrderEntryToCurrentPendingOrder(
    input: {
      order_entry: { productId: $productId, productVariantId: $productVariantId, quantity: $quantity }
      pay_what_you_want_amount: $payWhatYouWantAmount
    }
  ) {
    order_entry {
      id
    }
  }
}

mutation CreateCouponApplication($orderId: ID!, $couponCode: String!) {
  createCouponApplication(input: { orderId: $orderId, coupon_code: $couponCode }) {
    coupon_application {
      id
      order {
        id
        ...CartOrderFields
      }
    }
  }
}

mutation DeleteCouponApplication($id: ID!) {
  deleteCouponApplication(input: { id: $id }) {
    coupon_application {
      id
      order {
        id
        ...CartOrderFields
      }
    }
  }
}
