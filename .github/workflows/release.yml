name: Release

on:
  release:
    types: [published]

jobs:
  docker-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DockerHubUsername }}
        password: ${{ secrets.DockerHubPassword }}
    - name: Pull built image
      run: docker pull neinteractiveliterature/intercode:${{ github.sha }}
    - name: Tag image as latest
      run: docker tag neinteractiveliterature/intercode:${{ github.sha }} neinteractiveliterature/intercode:latest
    - name: Push to Docker Hub
      run: docker push neinteractiveliterature/intercode:latest
  heroku-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Heroku CLI
      run: curl https://cli-assets.heroku.com/install.sh | sh
    - name: Log into Heroku CLI
      run: |
        echo "machine: api.heroku.com" >> ~/.netrc
        echo "  login ${{ secrets.HerokuApiEmail }}" >> ~/.netrc
        echo "  password ${{ secrets.HerokuApiToken }}" >> ~/.netrc
    - name: Pull built image
      run: docker pull neinteractiveliterature/intercode:${{ github.sha }}
    - name: Log into Heroku Container Registry
      env:
        HEROKU_API_TOKEN: ${{ secrets.HerokuApiToken }}
      run: echo "$HEROKU_API_TOKEN" | docker login --username=_ --password-stdin registry.heroku.com
    - name: Tag production image as "web"
      run: docker tag neinteractiveliterature/intercode:${{ github.sha }} registry.heroku.com/intercode/web
    - name: Push "web" image to Heroku Container Registry
      run: docker push registry.heroku.com/intercode/web
    - name: Build "release" image
      run: docker buildx build -t registry.heroku.com/intercode/release
        --build-arg INTERCODE_TAG=${{ github.sha }}
        --build-arg REVISION=${{ github.sha }}
        -f Dockerfile.release
        --push
        .
    - name: Build and push "shoryuken" image
      run: docker buildx build -t registry.heroku.com/intercode/shoryuken
        --build-arg INTERCODE_TAG=${{ github.sha }}
        -f Dockerfile.shoryuken
        --push
        .
    - name: Release app to Heroku
      run: heroku container:release web release shoryuken
  doc-site-build:
    uses: ./.github/workflows/build-doc-site.yml
  doc-site-release:
    runs-on: ubuntu-latest
    needs:
      - doc-site-build
    steps:
    - name: Download built doc site
      uses: actions/download-artifact@v3
      with:
        name: doc-site
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./doc-site/build
        cname: intercode.interactiveliterature.org
  notify-slack:
    runs-on: ubuntu-latest
    needs:
      - heroku-release
    steps:
    - name: Post about release to Slack
      id: slack
      uses: slackapi/slack-github-action@v1.16.0
      with:
        channel-id: ${{ secrets.SlackReleaseNotificationChannelID }}
        slack-message: |
          Just released Intercode ${{ github.event.release.name }} to production!  Release notes:

          ${{ github.event.release.body }}
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SlackToken }}
