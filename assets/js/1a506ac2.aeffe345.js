"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[5710],{52229:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>n,toc:()=>s});const n=JSON.parse('{"id":"liquid/drops/scheduled-value-drop","title":"ScheduledValueDrop","description":"A ScheduledValue represents a value that changes over time.  For example, the convention\'s","source":"@site/docs/liquid/drops/scheduled-value-drop.mdx","sourceDirName":"liquid/drops","slug":"/liquid/drops/scheduled-value-drop","permalink":"/docs/liquid/drops/scheduled-value-drop","draft":false,"unlisted":false,"editUrl":"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/liquid/drops/scheduled-value-drop.mdx","tags":[],"version":"current","frontMatter":{"id":"scheduled-value-drop","title":"ScheduledValueDrop"},"sidebar":"sidebar","previous":{"title":"RunsCreatedSinceDrop","permalink":"/docs/liquid/drops/runs-created-since-drop"},"next":{"title":"ScheduledValue::TimespanDrop","permalink":"/docs/liquid/drops/scheduled-value-timespan-drop"}}');var d=i(58040),o=i(5365);const c={id:"scheduled-value-drop",title:"ScheduledValueDrop"},l=void 0,r={},s=[{value:"Fields",id:"fields",level:3},{value:"<code>covers_all_time</code> (<code>Boolean</code>)",id:"covers_all_time-boolean",level:4},{value:"<code>current_value</code>",id:"current_value",level:4},{value:"<code>current_value_change</code> (<code>ActiveSupport::TimeWithZone</code>)",id:"current_value_change-activesupporttimewithzone",level:4},{value:"<code>next_value</code>",id:"next_value",level:4},{value:"<code>next_value_change</code> (<code>ActiveSupport::TimeWithZone</code>)",id:"next_value_change-activesupporttimewithzone",level:4},{value:"<code>now</code> (<code>ActiveSupport::TimeWithZone</code>)",id:"now-activesupporttimewithzone",level:4},{value:"<code>timespans</code> (<code>Array&lt;<a>TimespanWithValueDrop</a>&gt;</code>)",id:"timespans-arraytimespanwithvaluedrop",level:4},{value:"<code>timezone</code> (<code>ActiveSupport::TimeZone</code>)",id:"timezone-activesupporttimezone",level:4}];function a(e){const t={code:"code",h3:"h3",h4:"h4",p:"p",...(0,o.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.p,{children:"A ScheduledValue represents a value that changes over time.  For example, the convention's\nmaximum allowed signups and the price of ticket types are ScheduledValues."}),"\n",(0,d.jsx)(t.h3,{id:"fields",children:"Fields"}),"\n",(0,d.jsxs)(t.h4,{id:"covers_all_time-boolean",children:[(0,d.jsx)(t.code,{children:"covers_all_time"})," (",(0,d.jsx)("code",{children:"Boolean"}),")"]}),"\n",(0,d.jsx)(t.p,{children:"Whether or not this ScheduledValue covers all possible times"}),"\n",(0,d.jsx)(t.h4,{id:"current_value",children:(0,d.jsx)(t.code,{children:"current_value"})}),"\n",(0,d.jsx)(t.p,{children:"The current value of this ScheduledValue (type may vary)"}),"\n",(0,d.jsxs)(t.h4,{id:"current_value_change-activesupporttimewithzone",children:[(0,d.jsx)(t.code,{children:"current_value_change"})," (",(0,d.jsx)("code",{children:"ActiveSupport::TimeWithZone"}),")"]}),"\n",(0,d.jsx)(t.p,{children:"When the current value came into effect"}),"\n",(0,d.jsx)(t.h4,{id:"next_value",children:(0,d.jsx)(t.code,{children:"next_value"})}),"\n",(0,d.jsx)(t.p,{children:"What the value will be after it next changes (type may vary)"}),"\n",(0,d.jsxs)(t.h4,{id:"next_value_change-activesupporttimewithzone",children:[(0,d.jsx)(t.code,{children:"next_value_change"})," (",(0,d.jsx)("code",{children:"ActiveSupport::TimeWithZone"}),")"]}),"\n",(0,d.jsx)(t.p,{children:"When the value will next change"}),"\n",(0,d.jsxs)(t.h4,{id:"now-activesupporttimewithzone",children:[(0,d.jsx)(t.code,{children:"now"})," (",(0,d.jsx)("code",{children:"ActiveSupport::TimeWithZone"}),")"]}),"\n",(0,d.jsx)(t.p,{children:"The current time, as used for calculating the value of\nthis ScheduledValue"}),"\n",(0,d.jsxs)(t.h4,{id:"timespans-arraytimespanwithvaluedrop",children:[(0,d.jsx)(t.code,{children:"timespans"})," (",(0,d.jsxs)("code",{children:["Array<",(0,d.jsx)("a",{href:"/docs/liquid/drops/timespan-with-value-drop",children:"TimespanWithValueDrop"}),">"]}),")"]}),"\n",(0,d.jsx)(t.p,{children:"The timespans covered by this ScheduledValue, along with\nthe value for that range of time"}),"\n",(0,d.jsxs)(t.h4,{id:"timezone-activesupporttimezone",children:[(0,d.jsx)(t.code,{children:"timezone"})," (",(0,d.jsx)("code",{children:"ActiveSupport::TimeZone"}),")"]}),"\n",(0,d.jsx)(t.p,{children:"The time zone used for calculating the value of this\nScheduledValue"})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}},5365:(e,t,i)=>{i.d(t,{R:()=>c,x:()=>l});var n=i(62340);const d={},o=n.createContext(d);function c(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:c(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);