"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[90444],{50277:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>d,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"graphql/operations/queries/users","title":"users","description":"Finds up to 25 users by ID. If any of the IDs don\'t match an existing user, errors out.","source":"@site/docs/graphql/operations/queries/users.md","sourceDirName":"graphql/operations/queries","slug":"/graphql/operations/queries/users","permalink":"/docs/graphql/operations/queries/users","draft":false,"unlisted":false,"editUrl":"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/graphql/operations/queries/users.md","tags":[],"version":"current","frontMatter":{"id":"users","title":"users"},"sidebar":"sidebar","previous":{"title":"users_paginated","permalink":"/docs/graphql/operations/queries/users-paginated"},"next":{"title":"deprecated","permalink":"/docs/graphql/types/directives/deprecated"}}');var r=n(41652),a=n(45640);const d={id:"users",title:"users"},i=void 0,l={},c=[{value:"Arguments",id:"arguments",level:3},{value:'<span class="gqlmd-mdx-entity"><code class="gqlmd-mdx-entity-parent">users</code>.<code class="gqlmd-mdx-entity-name">ids</code></span><span class="gqlmd-mdx-bullet">\u25cf</span><span class="gqlmd-mdx-entity"><code class="gqlmd-mdx-entity-name">[ID!]</code></span> <mark class="gqlmd-mdx-badge">list</mark> <mark class="gqlmd-mdx-badge">scalar</mark>',id:"usersidsid-list-scalar",level:4},{value:"Type",id:"type",level:3},{value:'<span class="gqlmd-mdx-entity"><code class="gqlmd-mdx-entity-name">User</code></span> <mark class="gqlmd-mdx-badge">object</mark>',id:"user-object",level:4}];function o(e){const s={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.p,{children:"Finds up to 25 users by ID. If any of the IDs don't match an existing user, errors out."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-graphql",children:"users(\n  ids: [ID!]\n): [User!]!\n"})}),"\n",(0,r.jsx)(s.h3,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(s.h4,{id:"usersidsid-list-scalar",children:[(0,r.jsx)(s.a,{href:"#",children:(0,r.jsxs)("span",{class:"gqlmd-mdx-entity",children:[(0,r.jsx)("code",{class:"gqlmd-mdx-entity-parent",children:"users"}),".",(0,r.jsx)("code",{class:"gqlmd-mdx-entity-name",children:"ids"})]})}),(0,r.jsx)("span",{class:"gqlmd-mdx-bullet",children:"\xa0\u25cf\xa0"}),(0,r.jsx)(s.a,{href:"/docs/graphql/types/scalars/id",children:(0,r.jsx)("span",{class:"gqlmd-mdx-entity",children:(0,r.jsx)("code",{class:"gqlmd-mdx-entity-name",children:"[ID!]"})})})," ",(0,r.jsx)("mark",{class:"gqlmd-mdx-badge",children:"list"})," ",(0,r.jsx)("mark",{class:"gqlmd-mdx-badge",children:"scalar"})]}),"\n",(0,r.jsx)(s.p,{children:"The IDs of the users to find."}),"\n",(0,r.jsx)(s.h3,{id:"type",children:"Type"}),"\n",(0,r.jsxs)(s.h4,{id:"user-object",children:[(0,r.jsx)(s.a,{href:"/docs/graphql/types/objects/user",children:(0,r.jsx)("span",{class:"gqlmd-mdx-entity",children:(0,r.jsx)("code",{class:"gqlmd-mdx-entity-name",children:"User"})})})," ",(0,r.jsx)("mark",{class:"gqlmd-mdx-badge",children:"object"})]}),"\n",(0,r.jsx)(s.p,{children:"A user on this instance of Intercode.  Users exist across all conventions.  For each convention a user has logged\ninto, they will have an attached UserConProfile."})]})}function m(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},45640:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>i});var t=n(29064);const r={},a=t.createContext(r);function d(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);