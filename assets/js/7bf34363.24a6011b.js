"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[67971],{27510:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>r});const i=JSON.parse('{"id":"graphql/types/enums/notification-condition-type","title":"NotificationConditionType","description":"The type of a notification condition. This is used to determine what kind of condition it is and how to evaluate it.","source":"@site/docs/graphql/types/enums/notification-condition-type.md","sourceDirName":"graphql/types/enums","slug":"/graphql/types/enums/notification-condition-type","permalink":"/docs/graphql/types/enums/notification-condition-type","draft":false,"unlisted":false,"editUrl":"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/graphql/types/enums/notification-condition-type.md","tags":[],"version":"current","frontMatter":{"id":"notification-condition-type","title":"NotificationConditionType"},"sidebar":"sidebar","previous":{"title":"FormType","permalink":"/docs/graphql/types/enums/form-type"},"next":{"title":"NotificationDynamicDestination","permalink":"/docs/graphql/types/enums/notification-dynamic-destination"}}');var o=n(41652),s=n(45640);const c={id:"notification-condition-type",title:"NotificationConditionType"},d=void 0,a={},r=[{value:"Values",id:"values",level:3},{value:'<span class="gqlmd-mdx-entity"><code class="gqlmd-mdx-entity-parent">NotificationConditionType</code>.<code class="gqlmd-mdx-entity-name">EVENT_CATEGORY</code></span>',id:"notificationconditiontypeevent_category",level:4},{value:"Member Of",id:"member-of",level:3}];function l(e){const t={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"The type of a notification condition. This is used to determine what kind of condition it is and how to evaluate it."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-graphql",children:"enum NotificationConditionType {\n  EVENT_CATEGORY\n}\n"})}),"\n",(0,o.jsx)(t.h3,{id:"values",children:"Values"}),"\n",(0,o.jsx)(t.h4,{id:"notificationconditiontypeevent_category",children:(0,o.jsx)(t.a,{href:"#",children:(0,o.jsxs)("span",{class:"gqlmd-mdx-entity",children:[(0,o.jsx)("code",{class:"gqlmd-mdx-entity-parent",children:"NotificationConditionType"}),".",(0,o.jsx)("code",{class:"gqlmd-mdx-entity-name",children:"EVENT_CATEGORY"})]})})}),"\n",(0,o.jsx)(t.h3,{id:"member-of",children:"Member Of"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"/docs/graphql/types/objects/notification-condition",children:(0,o.jsx)(t.code,{children:"NotificationCondition"})}),"  ",(0,o.jsx)("mark",{class:"gqlmd-mdx-badge",children:"object"}),(0,o.jsx)("span",{class:"gqlmd-mdx-bullet",children:"\xa0\u25cf\xa0"}),(0,o.jsx)(t.a,{href:"/docs/graphql/types/inputs/notification-condition-input",children:(0,o.jsx)(t.code,{children:"NotificationConditionInput"})}),"  ",(0,o.jsx)("mark",{class:"gqlmd-mdx-badge",children:"input"}),(0,o.jsx)("span",{class:"gqlmd-mdx-bullet",children:"\xa0\u25cf\xa0"}),(0,o.jsx)(t.a,{href:"/docs/graphql/types/objects/notification-event",children:(0,o.jsx)(t.code,{children:"NotificationEvent"})}),"  ",(0,o.jsx)("mark",{class:"gqlmd-mdx-badge",children:"object"})]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},45640:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>d});var i=n(29064);const o={},s=i.createContext(o);function c(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);