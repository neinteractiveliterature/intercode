"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[2760],{8368:(e,t,r)=>{r.r(t),r.d(t,{Badge:()=>u,Bullet:()=>h,SpecifiedBy:()=>d,assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var n=r(36544),s=r(54332);const a={id:"oauth-pre-auth",title:"oauthPreAuth",hide_table_of_contents:!1},o=void 0,i={id:"graphql/queries/oauth-pre-auth",title:"oauthPreAuth",description:"Given a set of valid OAuth query parameters for the /oauth/authorize endpoint, returns a",source:"@site/docs/graphql/queries/oauth-pre-auth.mdx",sourceDirName:"graphql/queries",slug:"/graphql/queries/oauth-pre-auth",permalink:"/docs/graphql/queries/oauth-pre-auth",draft:!1,unlisted:!1,editUrl:"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/graphql/queries/oauth-pre-auth.mdx",tags:[],version:"current",frontMatter:{id:"oauth-pre-auth",title:"oauthPreAuth",hide_table_of_contents:!1},sidebar:"sidebar",previous:{title:"myAuthorizedApplications",permalink:"/docs/graphql/queries/my-authorized-applications"},next:{title:"organizations",permalink:"/docs/graphql/queries/organizations"}},c={},l=[{value:"Arguments",id:"arguments",level:3},{value:'<code>oauthPreAuth.<b>queryParams</b></code><Bullet></Bullet><code>Json!</code> <Badge class="secondary"></Badge> <Badge class="secondary"></Badge>',id:"oauthpreauthqueryparamsjson--",level:4},{value:"Type",id:"type",level:3},{value:'<code>Json</code> <Badge class="secondary"></Badge>',id:"json-",level:4}],h=()=>{const e={span:"span",...(0,s.M)()};return(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(e.span,{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25cf\xa0"})})},d=e=>{const t={a:"a",...(0,s.M)()};return(0,n.jsxs)(n.Fragment,{children:["Specification",(0,n.jsx)(t.a,{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]})},u=e=>{const t={span:"span",...(0,s.M)()};return(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(t.span,{class:"badge badge--"+e.class,children:e.text})})};function p(e){const t={a:"a",blockquote:"blockquote",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,s.M)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["Given a set of valid OAuth query parameters for the ",(0,n.jsx)(t.code,{children:"/oauth/authorize"})," endpoint, returns a\nJSON object containing the necessary data for rendering the pre-authorization screen that\nchecks if you want to allow an application to access Intercode on your behalf."]}),"\n",(0,n.jsxs)(t.p,{children:["This essentially emulates the JSON behavior of\n",(0,n.jsx)(t.a,{href:"https://github.com/doorkeeper-gem/doorkeeper",children:"Doorkeeper"}),"'s API-only mode if you go to\n",(0,n.jsx)(t.code,{children:"/oauth/authorize"})," with query parameters. The only reason this query exists, rather than\nsimply having clients actually call ",(0,n.jsx)(t.code,{children:"/oauth/authorize"}),", is that we're running Doorkeeper\nin regular mode so that we can get the server-rendered HTML admin views."]}),"\n",(0,n.jsxs)(t.p,{children:["When we've implemented our own admin screens for OAuth\n(see ",(0,n.jsx)(t.a,{href:"https://github.com/neinteractiveliterature/intercode/issues/2740",children:"this Github issue"}),"),\nthis query will be deprecated."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-graphql",children:"oauthPreAuth(\n  queryParams: Json!\n): Json!\n"})}),"\n",(0,n.jsx)(t.h3,{id:"arguments",children:"Arguments"}),"\n",(0,n.jsxs)(t.h4,{id:"oauthpreauthqueryparamsjson--",children:[(0,n.jsx)(t.a,{href:"#",children:(0,n.jsxs)("code",{style:{fontWeight:"normal"},children:["oauthPreAuth.",(0,n.jsx)("b",{children:"queryParams"})]})}),(0,n.jsx)(h,{}),(0,n.jsx)(t.a,{href:"/docs/graphql/scalars/json",children:(0,n.jsx)(t.code,{children:"Json!"})})," ",(0,n.jsx)(u,{class:"secondary",text:"non-null"})," ",(0,n.jsx)(u,{class:"secondary",text:"scalar"})]}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["A set of HTTP query parameters for ",(0,n.jsx)(t.code,{children:"/oauth/authorize"}),", parsed out and\nrepresented as a JSON object."]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"type",children:"Type"}),"\n",(0,n.jsxs)(t.h4,{id:"json-",children:[(0,n.jsx)(t.a,{href:"/docs/graphql/scalars/json",children:(0,n.jsx)(t.code,{children:"Json"})})," ",(0,n.jsx)(u,{class:"secondary",text:"scalar"})]}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsx)(t.p,{children:"An arbitrary object, serialized as JSON"}),"\n"]})]})}function m(e={}){const{wrapper:t}={...(0,s.M)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},54332:(e,t,r)=>{r.d(t,{I:()=>i,M:()=>o});var n=r(79020);const s={},a=n.createContext(s);function o(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);