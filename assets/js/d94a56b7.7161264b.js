"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[74695],{52602:(e,n,t)=>{t.r(n),t.d(n,{Badge:()=>g,Bullet:()=>l,Details:()=>h,SpecifiedBy:()=>p,assets:()=>c,contentTitle:()=>d,default:()=>f,frontMatter:()=>r,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"graphql/api/queries/conventions-paginated","title":"conventions_paginated","description":"Returns a paginated list of conventions. See PaginationInterface for details on how to use","source":"@site/docs/graphql/api/queries/conventions-paginated.mdx","sourceDirName":"graphql/api/queries","slug":"/graphql/api/queries/conventions-paginated","permalink":"/docs/graphql/api/queries/conventions-paginated","draft":false,"unlisted":false,"editUrl":"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/graphql/api/queries/conventions-paginated.mdx","tags":[],"version":"current","frontMatter":{"id":"conventions-paginated","title":"conventions_paginated"},"sidebar":"sidebar","previous":{"title":"conventionByRequestHost","permalink":"/docs/graphql/api/queries/convention-by-request-host"},"next":{"title":"currentAbility","permalink":"/docs/graphql/api/queries/current-ability"}}');var a=t(58040),i=t(5365),o=t(62340);const r={id:"conventions-paginated",title:"conventions_paginated"},d=void 0,c={},l=()=>{const e={span:"span",...(0,i.R)()};return(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(e.span,{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25cf\xa0"})})},p=e=>{const n={a:"a",...(0,i.R)()};return(0,a.jsxs)(a.Fragment,{children:["Specification",(0,a.jsx)(n.a,{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]})},g=e=>{const n={span:"span",...(0,i.R)()};return(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(n.span,{className:e.class,children:e.text})})},h=({dataOpen:e,dataClose:n,children:t,startOpen:s=!1})=>{const r={details:"details",summary:"summary",...(0,i.R)()},[d,c]=(0,o.useState)(s);return(0,a.jsxs)(r.details,{...d?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,a.jsx)(r.summary,{onClick:e=>{e.preventDefault(),c((e=>!e))},style:{listStyle:"none"},children:d?e:n}),d&&t]})},u=[{value:"Arguments",id:"arguments",level:3},{value:'<code>conventions_paginated.<b>filters</b></code><Bullet></Bullet><code>ConventionFiltersInput</code> <Badge class="badge badge--secondary"></Badge>',id:"conventions_paginatedfiltersconventionfiltersinput-",level:4},{value:'<code>conventions_paginated.<b>page</b></code><Bullet></Bullet><code>Int</code> <Badge class="badge badge--secondary"></Badge>',id:"conventions_paginatedpageint-",level:4},{value:'<code>conventions_paginated.<b>per_page</b></code><Bullet></Bullet><code>Int</code> <Badge class="badge badge--secondary"></Badge>',id:"conventions_paginatedper_pageint-",level:4},{value:'<code>conventions_paginated.<b>sort</b></code><Bullet></Bullet><code>[SortInput!]</code> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"conventions_paginatedsortsortinput--",level:4},{value:"Type",id:"type",level:3},{value:'<code>ConventionsPagination</code> <Badge class="badge badge--secondary"></Badge>',id:"conventionspagination-",level:4}];function x(e){const n={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Returns a paginated list of conventions. See PaginationInterface for details on how to use\npaginated lists, and ConventionFiltersInput for filters you can use here."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-graphql",children:"conventions_paginated(\n  filters: ConventionFiltersInput\n  page: Int\n  per_page: Int\n  sort: [SortInput!]\n): ConventionsPagination!\n"})}),"\n",(0,a.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,a.jsxs)(n.h4,{id:"conventions_paginatedfiltersconventionfiltersinput-",children:[(0,a.jsx)(n.a,{href:"#",children:(0,a.jsxs)("code",{style:{fontWeight:"normal"},children:["conventions_paginated.",(0,a.jsx)("b",{children:"filters"})]})}),(0,a.jsx)(l,{}),(0,a.jsx)(n.a,{href:"/docs/graphql/types/inputs/convention-filters-input",children:(0,a.jsx)(n.code,{children:"ConventionFiltersInput"})})," ",(0,a.jsx)(g,{class:"badge badge--secondary",text:"input"})]}),"\n",(0,a.jsx)(n.p,{children:"Filters to restrict what items will appear in the result set."}),"\n",(0,a.jsxs)(n.h4,{id:"conventions_paginatedpageint-",children:[(0,a.jsx)(n.a,{href:"#",children:(0,a.jsxs)("code",{style:{fontWeight:"normal"},children:["conventions_paginated.",(0,a.jsx)("b",{children:"page"})]})}),(0,a.jsx)(l,{}),(0,a.jsx)(n.a,{href:"/docs/graphql/types/scalars/int",children:(0,a.jsx)(n.code,{children:"Int"})})," ",(0,a.jsx)(g,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,a.jsx)(n.p,{children:"The page number to return from the result set.  Page numbers start with 1."}),"\n",(0,a.jsxs)(n.h4,{id:"conventions_paginatedper_pageint-",children:[(0,a.jsx)(n.a,{href:"#",children:(0,a.jsxs)("code",{style:{fontWeight:"normal"},children:["conventions_paginated.",(0,a.jsx)("b",{children:"per_page"})]})}),(0,a.jsx)(l,{}),(0,a.jsx)(n.a,{href:"/docs/graphql/types/scalars/int",children:(0,a.jsx)(n.code,{children:"Int"})})," ",(0,a.jsx)(g,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,a.jsx)(n.p,{children:"The number of items to return per page.  Defaults to 20, can go up to 200."}),"\n",(0,a.jsxs)(n.h4,{id:"conventions_paginatedsortsortinput--",children:[(0,a.jsx)(n.a,{href:"#",children:(0,a.jsxs)("code",{style:{fontWeight:"normal"},children:["conventions_paginated.",(0,a.jsx)("b",{children:"sort"})]})}),(0,a.jsx)(l,{}),(0,a.jsx)(n.a,{href:"/docs/graphql/types/inputs/sort-input",children:(0,a.jsx)(n.code,{children:"[SortInput!]"})})," ",(0,a.jsx)(g,{class:"badge badge--secondary",text:"list"})," ",(0,a.jsx)(g,{class:"badge badge--secondary",text:"input"})]}),"\n",(0,a.jsx)(n.p,{children:"A set of fields to use for ordering the result set. The second field is used as a\ntiebreaker for the first, the third field is used as a tiebreaker for the first two,\nand so on. If the sort argument is missing or empty, the order of items will be left\nup to the database (and may be unpredictable)."}),"\n",(0,a.jsx)(n.h3,{id:"type",children:"Type"}),"\n",(0,a.jsxs)(n.h4,{id:"conventionspagination-",children:[(0,a.jsx)(n.a,{href:"/docs/graphql/types/objects/conventions-pagination",children:(0,a.jsx)(n.code,{children:"ConventionsPagination"})})," ",(0,a.jsx)(g,{class:"badge badge--secondary",text:"object"})]})]})}function f(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(x,{...e})}):x(e)}},5365:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var s=t(62340);const a={},i=s.createContext(a);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);