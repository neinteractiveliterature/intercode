"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[624],{85287:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>t,metadata:()=>d,toc:()=>c});const d=JSON.parse('{"id":"graphql/types/inputs/merge-users-input","title":"MergeUsersInput","description":"Autogenerated input type of MergeUsers","source":"@site/docs/graphql/types/inputs/merge-users-input.md","sourceDirName":"graphql/types/inputs","slug":"/graphql/types/inputs/merge-users-input","permalink":"/docs/graphql/types/inputs/merge-users-input","draft":false,"unlisted":false,"editUrl":"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/graphql/types/inputs/merge-users-input.md","tags":[],"version":"current","frontMatter":{"id":"merge-users-input","title":"MergeUsersInput"},"sidebar":"sidebar","previous":{"title":"MarkOrderPaidInput","permalink":"/docs/graphql/types/inputs/mark-order-paid-input"},"next":{"title":"MoneyInput","permalink":"/docs/graphql/types/inputs/money-input"}}');var l=n(41652),r=n(45640);const t={id:"merge-users-input",title:"MergeUsersInput"},i=void 0,a={},c=[{value:"Fields",id:"fields",level:3},{value:'<span class="gqlmd-mdx-entity"><code class="gqlmd-mdx-entity-parent">MergeUsersInput</code>.<code class="gqlmd-mdx-entity-name">clientMutationId</code></span><span class="gqlmd-mdx-bullet">\u25cf</span><span class="gqlmd-mdx-entity"><code class="gqlmd-mdx-entity-name">String</code></span> <mark class="gqlmd-mdx-badge">scalar</mark>',id:"mergeusersinputclientmutationidstring-scalar",level:4},{value:'<span class="gqlmd-mdx-entity"><code class="gqlmd-mdx-entity-parent">MergeUsersInput</code>.<code class="gqlmd-mdx-entity-name">userIds</code></span><span class="gqlmd-mdx-bullet">\u25cf</span><span class="gqlmd-mdx-entity"><code class="gqlmd-mdx-entity-name">[ID!]</code></span> <mark class="gqlmd-mdx-badge">list</mark> <mark class="gqlmd-mdx-badge">scalar</mark>',id:"mergeusersinputuseridsid-list-scalar",level:4},{value:'<span class="gqlmd-mdx-entity"><code class="gqlmd-mdx-entity-parent">MergeUsersInput</code>.<code class="gqlmd-mdx-entity-name">winningUserConProfiles</code></span><span class="gqlmd-mdx-bullet">\u25cf</span><span class="gqlmd-mdx-entity"><code class="gqlmd-mdx-entity-name">[WinningUserConProfileInput!]!</code></span> <mark class="gqlmd-mdx-badge">non-null</mark> <mark class="gqlmd-mdx-badge">input</mark>',id:"mergeusersinputwinninguserconprofileswinninguserconprofileinput-non-null-input",level:4},{value:'<span class="gqlmd-mdx-entity"><code class="gqlmd-mdx-entity-parent">MergeUsersInput</code>.<code class="gqlmd-mdx-entity-name">winningUserId</code></span><span class="gqlmd-mdx-bullet">\u25cf</span><span class="gqlmd-mdx-entity"><code class="gqlmd-mdx-entity-name">ID</code></span> <mark class="gqlmd-mdx-badge">scalar</mark>',id:"mergeusersinputwinninguseridid-scalar",level:4},{value:"Member Of",id:"member-of",level:3}];function m(e){const s={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.p,{children:"Autogenerated input type of MergeUsers"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-graphql",children:"input MergeUsersInput {\n  clientMutationId: String\n  userIds: [ID!]\n  winningUserConProfiles: [WinningUserConProfileInput!]!\n  winningUserId: ID\n}\n"})}),"\n",(0,l.jsx)(s.h3,{id:"fields",children:"Fields"}),"\n",(0,l.jsxs)(s.h4,{id:"mergeusersinputclientmutationidstring-scalar",children:[(0,l.jsx)(s.a,{href:"#",children:(0,l.jsxs)("span",{class:"gqlmd-mdx-entity",children:[(0,l.jsx)("code",{class:"gqlmd-mdx-entity-parent",children:"MergeUsersInput"}),".",(0,l.jsx)("code",{class:"gqlmd-mdx-entity-name",children:"clientMutationId"})]})}),(0,l.jsx)("span",{class:"gqlmd-mdx-bullet",children:"\xa0\u25cf\xa0"}),(0,l.jsx)(s.a,{href:"/docs/graphql/types/scalars/string",children:(0,l.jsx)("span",{class:"gqlmd-mdx-entity",children:(0,l.jsx)("code",{class:"gqlmd-mdx-entity-name",children:"String"})})})," ",(0,l.jsx)("mark",{class:"gqlmd-mdx-badge",children:"scalar"})]}),"\n",(0,l.jsx)(s.p,{children:"A unique identifier for the client performing the mutation."}),"\n",(0,l.jsxs)(s.h4,{id:"mergeusersinputuseridsid-list-scalar",children:[(0,l.jsx)(s.a,{href:"#",children:(0,l.jsxs)("span",{class:"gqlmd-mdx-entity",children:[(0,l.jsx)("code",{class:"gqlmd-mdx-entity-parent",children:"MergeUsersInput"}),".",(0,l.jsx)("code",{class:"gqlmd-mdx-entity-name",children:"userIds"})]})}),(0,l.jsx)("span",{class:"gqlmd-mdx-bullet",children:"\xa0\u25cf\xa0"}),(0,l.jsx)(s.a,{href:"/docs/graphql/types/scalars/id",children:(0,l.jsx)("span",{class:"gqlmd-mdx-entity",children:(0,l.jsx)("code",{class:"gqlmd-mdx-entity-name",children:"[ID!]"})})})," ",(0,l.jsx)("mark",{class:"gqlmd-mdx-badge",children:"list"})," ",(0,l.jsx)("mark",{class:"gqlmd-mdx-badge",children:"scalar"})]}),"\n",(0,l.jsx)(s.p,{children:"The user IDs to merge."}),"\n",(0,l.jsxs)(s.h4,{id:"mergeusersinputwinninguserconprofileswinninguserconprofileinput-non-null-input",children:[(0,l.jsx)(s.a,{href:"#",children:(0,l.jsxs)("span",{class:"gqlmd-mdx-entity",children:[(0,l.jsx)("code",{class:"gqlmd-mdx-entity-parent",children:"MergeUsersInput"}),".",(0,l.jsx)("code",{class:"gqlmd-mdx-entity-name",children:"winningUserConProfiles"})]})}),(0,l.jsx)("span",{class:"gqlmd-mdx-bullet",children:"\xa0\u25cf\xa0"}),(0,l.jsx)(s.a,{href:"/docs/graphql/types/inputs/winning-user-con-profile-input",children:(0,l.jsx)("span",{class:"gqlmd-mdx-entity",children:(0,l.jsx)("code",{class:"gqlmd-mdx-entity-name",children:"[WinningUserConProfileInput!]!"})})})," ",(0,l.jsx)("mark",{class:"gqlmd-mdx-badge",children:"non-null"})," ",(0,l.jsx)("mark",{class:"gqlmd-mdx-badge",children:"input"})]}),"\n",(0,l.jsxs)(s.h4,{id:"mergeusersinputwinninguseridid-scalar",children:[(0,l.jsx)(s.a,{href:"#",children:(0,l.jsxs)("span",{class:"gqlmd-mdx-entity",children:[(0,l.jsx)("code",{class:"gqlmd-mdx-entity-parent",children:"MergeUsersInput"}),".",(0,l.jsx)("code",{class:"gqlmd-mdx-entity-name",children:"winningUserId"})]})}),(0,l.jsx)("span",{class:"gqlmd-mdx-bullet",children:"\xa0\u25cf\xa0"}),(0,l.jsx)(s.a,{href:"/docs/graphql/types/scalars/id",children:(0,l.jsx)("span",{class:"gqlmd-mdx-entity",children:(0,l.jsx)("code",{class:"gqlmd-mdx-entity-name",children:"ID"})})})," ",(0,l.jsx)("mark",{class:"gqlmd-mdx-badge",children:"scalar"})]}),"\n",(0,l.jsx)(s.h3,{id:"member-of",children:"Member Of"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.a,{href:"/docs/graphql/operations/mutations/merge-users",children:(0,l.jsx)(s.code,{children:"mergeUsers"})}),"  ",(0,l.jsx)("mark",{class:"gqlmd-mdx-badge",children:"mutation"})]})]})}function p(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(m,{...e})}):m(e)}},45640:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>i});var d=n(29064);const l={},r=d.createContext(l);function t(e){const s=d.useContext(r);return d.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),d.createElement(r.Provider,{value:s},e.children)}}}]);