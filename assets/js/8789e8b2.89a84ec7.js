"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[45395],{37341:(e,n,t)=>{t.r(n),t.d(n,{Badge:()=>h,Bullet:()=>l,SpecifiedBy:()=>u,assets:()=>d,contentTitle:()=>s,default:()=>v,frontMatter:()=>c,metadata:()=>r,toc:()=>a});var o=t(52877),i=t(76553);const c={id:"convention-by-id",title:"conventionById",hide_table_of_contents:!1},s=void 0,r={id:"graphql/queries/convention-by-id",title:"conventionById",description:"Finds a convention by ID. If a matching one can't be found, the request will error out.",source:"@site/docs/graphql/queries/convention-by-id.mdx",sourceDirName:"graphql/queries",slug:"/graphql/queries/convention-by-id",permalink:"/docs/graphql/queries/convention-by-id",draft:!1,unlisted:!1,editUrl:"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/graphql/queries/convention-by-id.mdx",tags:[],version:"current",frontMatter:{id:"convention-by-id",title:"conventionById",hide_table_of_contents:!1},sidebar:"sidebar",previous:{title:"conventionByDomain",permalink:"/docs/graphql/queries/convention-by-domain"},next:{title:"conventionByRequestHostIfPresent",permalink:"/docs/graphql/queries/convention-by-request-host-if-present"}},d={},a=[{value:"Arguments",id:"arguments",level:3},{value:'<code>conventionById.<b>id</b></code><Bullet></Bullet><code>ID</code> <Badge class="secondary"></Badge>',id:"conventionbyididid-",level:4},{value:"Type",id:"type",level:3},{value:'<code>Convention</code> <Badge class="secondary"></Badge>',id:"convention-",level:4}],l=()=>{const e={span:"span",...(0,i.a)()};return(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(e.span,{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25cf\xa0"})})},u=e=>{const n={a:"a",...(0,i.a)()};return(0,o.jsxs)(o.Fragment,{children:["Specification",(0,o.jsx)(n.a,{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]})},h=e=>{const n={span:"span",...(0,i.a)()};return(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(n.span,{class:"badge badge--"+e.class,children:e.text})})};function p(e){const n={a:"a",blockquote:"blockquote",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Finds a convention by ID. If a matching one can't be found, the request will error out."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"conventionById(\n  id: ID\n): Convention!\n"})}),"\n",(0,o.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,o.jsxs)(n.h4,{id:"conventionbyididid-",children:[(0,o.jsx)(n.a,{href:"#",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["conventionById.",(0,o.jsx)("b",{children:"id"})]})}),(0,o.jsx)(l,{}),(0,o.jsx)(n.a,{href:"/docs/graphql/scalars/id",children:(0,o.jsx)(n.code,{children:"ID"})})," ",(0,o.jsx)(h,{class:"secondary",text:"scalar"})]}),"\n",(0,o.jsx)(n.blockquote,{children:"\n"}),"\n",(0,o.jsx)(n.h3,{id:"type",children:"Type"}),"\n",(0,o.jsxs)(n.h4,{id:"convention-",children:[(0,o.jsx)(n.a,{href:"/docs/graphql/objects/convention",children:(0,o.jsx)(n.code,{children:"Convention"})})," ",(0,o.jsx)(h,{class:"secondary",text:"object"})]}),"\n",(0,o.jsx)(n.blockquote,{children:"\n"})]})}function v(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},76553:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>s});var o=t(16589);const i={},c=o.createContext(i);function s(e){const n=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(c.Provider,{value:n},e.children)}}}]);