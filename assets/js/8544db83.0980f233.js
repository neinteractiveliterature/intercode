"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[44839],{52514:(e,s,n)=>{n.r(s),n.d(s,{Badge:()=>p,Bullet:()=>c,Details:()=>h,SpecifiedBy:()=>g,assets:()=>l,contentTitle:()=>d,default:()=>x,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var a=n(58040),t=n(1422),r=n(62340);const i={id:"users-pagination",title:"UsersPagination"},d=void 0,o={id:"graphql/types/objects/users-pagination",title:"UsersPagination",description:"No description",source:"@site/docs/graphql/types/objects/users-pagination.mdx",sourceDirName:"graphql/types/objects",slug:"/graphql/types/objects/users-pagination",permalink:"/docs/graphql/types/objects/users-pagination",draft:!1,unlisted:!1,editUrl:"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/graphql/types/objects/users-pagination.mdx",tags:[],version:"current",frontMatter:{id:"users-pagination",title:"UsersPagination"},sidebar:"sidebar",previous:{title:"User",permalink:"/docs/graphql/types/objects/user"},next:{title:"WithdrawAllUserConProfileSignupsPayload",permalink:"/docs/graphql/types/objects/withdraw-all-user-con-profile-signups-payload"}},l={},c=()=>{const e={span:"span",...(0,t.R)()};return(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(e.span,{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25cf\xa0"})})},g=e=>{const s={a:"a",...(0,t.R)()};return(0,a.jsxs)(a.Fragment,{children:["Specification",(0,a.jsx)(s.a,{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]})},p=e=>{const s={span:"span",...(0,t.R)()};return(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(s.span,{className:e.class,children:e.text})})},h=({dataOpen:e,dataClose:s,children:n,startOpen:i=!1})=>{const d={details:"details",summary:"summary",...(0,t.R)()},[o,l]=(0,r.useState)(i);return(0,a.jsxs)(d.details,{...o?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,a.jsx)(d.summary,{onClick:e=>{e.preventDefault(),l((e=>!e))},style:{listStyle:"none"},children:o?e:s}),o&&n]})},u=[{value:"Fields",id:"fields",level:3},{value:'<code>UsersPagination.<b>current_page</b></code><Bullet></Bullet><code>Int!</code> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"userspaginationcurrent_pageint--",level:4},{value:'<code>UsersPagination.<b>entries</b></code><Bullet></Bullet><code>[User!]!</code> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"userspaginationentriesuser--",level:4},{value:'<code>UsersPagination.<b>per_page</b></code><Bullet></Bullet><code>Int!</code> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"userspaginationper_pageint--",level:4},{value:'<code>UsersPagination.<b>total_entries</b></code><Bullet></Bullet><code>Int!</code> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"userspaginationtotal_entriesint--",level:4},{value:'<code>UsersPagination.<b>total_pages</b></code><Bullet></Bullet><code>Int!</code> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"userspaginationtotal_pagesint--",level:4},{value:"Interfaces",id:"interfaces",level:3},{value:'<code>PaginationInterface</code> <Badge class="badge badge--secondary"></Badge>',id:"paginationinterface-",level:4},{value:"Returned By",id:"returned-by",level:3}];function b(e){const s={a:"a",blockquote:"blockquote",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.p,{children:"No description"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-graphql",children:"type UsersPagination implements PaginationInterface {\n  current_page: Int!\n  entries: [User!]!\n  per_page: Int!\n  total_entries: Int!\n  total_pages: Int!\n}\n"})}),"\n",(0,a.jsx)(s.h3,{id:"fields",children:"Fields"}),"\n",(0,a.jsxs)(s.h4,{id:"userspaginationcurrent_pageint--",children:[(0,a.jsx)(s.a,{href:"#",children:(0,a.jsxs)("code",{style:{fontWeight:"normal"},children:["UsersPagination.",(0,a.jsx)("b",{children:"current_page"})]})}),(0,a.jsx)(c,{}),(0,a.jsx)(s.a,{href:"/docs/graphql/types/scalars/int",children:(0,a.jsx)(s.code,{children:"Int!"})})," ",(0,a.jsx)(p,{class:"badge badge--secondary",text:"non-null"})," ",(0,a.jsx)(p,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsx)(s.p,{children:"The number of the page currently being returned in this query"}),"\n"]}),"\n",(0,a.jsxs)(s.h4,{id:"userspaginationentriesuser--",children:[(0,a.jsx)(s.a,{href:"#",children:(0,a.jsxs)("code",{style:{fontWeight:"normal"},children:["UsersPagination.",(0,a.jsx)("b",{children:"entries"})]})}),(0,a.jsx)(c,{}),(0,a.jsx)(s.a,{href:"/docs/graphql/types/objects/user",children:(0,a.jsx)(s.code,{children:"[User!]!"})})," ",(0,a.jsx)(p,{class:"badge badge--secondary",text:"non-null"})," ",(0,a.jsx)(p,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,a.jsx)(s.blockquote,{children:"\n"}),"\n",(0,a.jsxs)(s.h4,{id:"userspaginationper_pageint--",children:[(0,a.jsx)(s.a,{href:"#",children:(0,a.jsxs)("code",{style:{fontWeight:"normal"},children:["UsersPagination.",(0,a.jsx)("b",{children:"per_page"})]})}),(0,a.jsx)(c,{}),(0,a.jsx)(s.a,{href:"/docs/graphql/types/scalars/int",children:(0,a.jsx)(s.code,{children:"Int!"})})," ",(0,a.jsx)(p,{class:"badge badge--secondary",text:"non-null"})," ",(0,a.jsx)(p,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsx)(s.p,{children:"The number of items per page currently being returned in this query"}),"\n"]}),"\n",(0,a.jsxs)(s.h4,{id:"userspaginationtotal_entriesint--",children:[(0,a.jsx)(s.a,{href:"#",children:(0,a.jsxs)("code",{style:{fontWeight:"normal"},children:["UsersPagination.",(0,a.jsx)("b",{children:"total_entries"})]})}),(0,a.jsx)(c,{}),(0,a.jsx)(s.a,{href:"/docs/graphql/types/scalars/int",children:(0,a.jsx)(s.code,{children:"Int!"})})," ",(0,a.jsx)(p,{class:"badge badge--secondary",text:"non-null"})," ",(0,a.jsx)(p,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsx)(s.p,{children:"The total number of items in the paginated list (across all pages)"}),"\n"]}),"\n",(0,a.jsxs)(s.h4,{id:"userspaginationtotal_pagesint--",children:[(0,a.jsx)(s.a,{href:"#",children:(0,a.jsxs)("code",{style:{fontWeight:"normal"},children:["UsersPagination.",(0,a.jsx)("b",{children:"total_pages"})]})}),(0,a.jsx)(c,{}),(0,a.jsx)(s.a,{href:"/docs/graphql/types/scalars/int",children:(0,a.jsx)(s.code,{children:"Int!"})})," ",(0,a.jsx)(p,{class:"badge badge--secondary",text:"non-null"})," ",(0,a.jsx)(p,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsx)(s.p,{children:"The total number of pages in the paginated list"}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"interfaces",children:"Interfaces"}),"\n",(0,a.jsxs)(s.h4,{id:"paginationinterface-",children:[(0,a.jsx)(s.a,{href:"/docs/graphql/types/interfaces/pagination-interface",children:(0,a.jsx)(s.code,{children:"PaginationInterface"})})," ",(0,a.jsx)(p,{class:"badge badge--secondary",text:"interface"})]}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsx)(s.p,{children:"PaginationInterface provides a way to use offset-based pagination on a list of objects. This\nis useful for UIs such as Intercode's table views, which provide a way to jump between numbered\npages."}),"\n",(0,a.jsx)(s.p,{children:"Page numbers in PaginationInterface are 1-based (so, the first page is page 1, then page 2,\netc.) The number of items per page can be controlled via the per_page argument on paginated\nfields. It defaults to 20, and can go up to 200."}),"\n",(0,a.jsxs)(s.p,{children:["Offset-based pagination is different from\n",(0,a.jsx)(s.a,{href:"https://relay.dev/graphql/connections.htm",children:"Relay's cursor-based pagination"})," that is more\ncommonly used in GraphQL APIs. We chose to go with an offset-based approach due to our UI\nneeds, but if a cursor-based approach is desirable in the future, we may also implement Relay\nconnections alongside our existing pagination fields."]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"returned-by",children:"Returned By"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.a,{href:"/docs/graphql/api/queries/users-paginated",children:(0,a.jsx)(s.code,{children:"users_paginated"})}),"  ",(0,a.jsx)(p,{class:"badge badge--secondary",text:"query"})]})]})}function x(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(b,{...e})}):b(e)}},1422:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>d});var a=n(62340);const t={},r=a.createContext(t);function i(e){const s=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(r.Provider,{value:s},e.children)}}}]);