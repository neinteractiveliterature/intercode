"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[24802],{74462:(e,s,t)=>{t.r(s),t.d(s,{Badge:()=>h,Bullet:()=>d,Details:()=>u,SpecifiedBy:()=>g,assets:()=>a,contentTitle:()=>r,default:()=>x,frontMatter:()=>c,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"graphql/types/objects/registration-policy","title":"RegistrationPolicy","description":"A registration policy describes how signups for an event will work.  A registration policy consists of a set of","source":"@site/docs/graphql/types/objects/registration-policy.mdx","sourceDirName":"graphql/types/objects","slug":"/graphql/types/objects/registration-policy","permalink":"/docs/graphql/types/objects/registration-policy","draft":false,"unlisted":false,"editUrl":"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/graphql/types/objects/registration-policy.mdx","tags":[],"version":"current","frontMatter":{"id":"registration-policy","title":"RegistrationPolicy"},"sidebar":"sidebar","previous":{"title":"RegistrationPolicyBucket","permalink":"/docs/graphql/types/objects/registration-policy-bucket"},"next":{"title":"RejectSignupRequestPayload","permalink":"/docs/graphql/types/objects/reject-signup-request-payload"}}');var o=t(58040),i=t(5365),l=t(62340);const c={id:"registration-policy",title:"RegistrationPolicy"},r=void 0,a={},d=()=>{const e={span:"span",...(0,i.R)()};return(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(e.span,{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25cf\xa0"})})},g=e=>{const s={a:"a",...(0,i.R)()};return(0,o.jsxs)(o.Fragment,{children:["Specification",(0,o.jsx)(s.a,{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]})},h=e=>{const s={span:"span",...(0,i.R)()};return(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(s.span,{className:e.class,children:e.text})})},u=({dataOpen:e,dataClose:s,children:t,startOpen:n=!1})=>{const c={details:"details",summary:"summary",...(0,i.R)()},[r,a]=(0,l.useState)(n);return(0,o.jsxs)(c.details,{...r?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,o.jsx)(c.summary,{onClick:e=>{e.preventDefault(),a((e=>!e))},style:{listStyle:"none"},children:r?e:s}),r&&t]})},p=[{value:"Fields",id:"fields",level:3},{value:'<code>RegistrationPolicy.<b>buckets</b></code><Bullet></Bullet><code>[RegistrationPolicyBucket!]!</code> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"registrationpolicybucketsregistrationpolicybucket--",level:4},{value:'<code>RegistrationPolicy.<b>freeze_no_preference_buckets</b></code><Bullet></Bullet><code>Boolean!</code> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"registrationpolicyfreeze_no_preference_bucketsboolean--",level:4},{value:'<code>RegistrationPolicy.<b>minimum_slots</b></code><Bullet></Bullet><code>Int</code> <Badge class="badge badge--secondary"></Badge>',id:"registrationpolicyminimum_slotsint-",level:4},{value:'<code>RegistrationPolicy.<b>minimum_slots_including_not_counted</b></code><Bullet></Bullet><code>Int</code> <Badge class="badge badge--secondary"></Badge>',id:"registrationpolicyminimum_slots_including_not_countedint-",level:4},{value:'<code>RegistrationPolicy.<b>only_uncounted</b></code><Bullet></Bullet><code>Boolean</code> <Badge class="badge badge--secondary"></Badge>',id:"registrationpolicyonly_uncountedboolean-",level:4},{value:'<code>RegistrationPolicy.<b>preferred_slots</b></code><Bullet></Bullet><code>Int</code> <Badge class="badge badge--secondary"></Badge>',id:"registrationpolicypreferred_slotsint-",level:4},{value:'<code>RegistrationPolicy.<b>preferred_slots_including_not_counted</b></code><Bullet></Bullet><code>Int</code> <Badge class="badge badge--secondary"></Badge>',id:"registrationpolicypreferred_slots_including_not_countedint-",level:4},{value:'<code>RegistrationPolicy.<b>prevent_no_preference_signups</b></code><Bullet></Bullet><code>Boolean!</code> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"registrationpolicyprevent_no_preference_signupsboolean--",level:4},{value:'<code>RegistrationPolicy.<b>slots_limited</b></code><Bullet></Bullet><code>Boolean</code> <Badge class="badge badge--secondary"></Badge>',id:"registrationpolicyslots_limitedboolean-",level:4},{value:'<code>RegistrationPolicy.<b>total_slots</b></code><Bullet></Bullet><code>Int</code> <Badge class="badge badge--secondary"></Badge>',id:"registrationpolicytotal_slotsint-",level:4},{value:'<code>RegistrationPolicy.<b>total_slots_including_not_counted</b></code><Bullet></Bullet><code>Int</code> <Badge class="badge badge--secondary"></Badge>',id:"registrationpolicytotal_slots_including_not_countedint-",level:4},{value:"Member Of",id:"member-of",level:3}];function b(e){const s={a:"a",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.p,{children:"A registration policy describes how signups for an event will work.  A registration policy consists of a set of\nbuckets, each of which holds space for signups.  Additionally, the registration policy contains a few other options\nthat can be set that affect the behavior of signups as a whole for this event."}),"\n",(0,o.jsxs)(s.p,{children:["For more on registration policies, ",(0,o.jsx)(s.a,{href:"https://intercode.interactiveliterature.org/docs/concepts/signups",children:"see the signups documentation"}),"."]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-graphql",children:"type RegistrationPolicy {\n  buckets: [RegistrationPolicyBucket!]!\n  freeze_no_preference_buckets: Boolean!\n  minimum_slots: Int\n  minimum_slots_including_not_counted: Int\n  only_uncounted: Boolean\n  preferred_slots: Int\n  preferred_slots_including_not_counted: Int\n  prevent_no_preference_signups: Boolean!\n  slots_limited: Boolean\n  total_slots: Int\n  total_slots_including_not_counted: Int\n}\n"})}),"\n",(0,o.jsx)(s.h3,{id:"fields",children:"Fields"}),"\n",(0,o.jsxs)(s.h4,{id:"registrationpolicybucketsregistrationpolicybucket--",children:[(0,o.jsx)(s.a,{href:"#",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["RegistrationPolicy.",(0,o.jsx)("b",{children:"buckets"})]})}),(0,o.jsx)(d,{}),(0,o.jsx)(s.a,{href:"/docs/graphql/types/objects/registration-policy-bucket",children:(0,o.jsx)(s.code,{children:"[RegistrationPolicyBucket!]!"})})," ",(0,o.jsx)(h,{class:"badge badge--secondary",text:"non-null"})," ",(0,o.jsx)(h,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,o.jsx)(s.p,{children:"The buckets in this registration policy."}),"\n",(0,o.jsxs)(s.h4,{id:"registrationpolicyfreeze_no_preference_bucketsboolean--",children:[(0,o.jsx)(s.a,{href:"#",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["RegistrationPolicy.",(0,o.jsx)("b",{children:"freeze_no_preference_buckets"})]})}),(0,o.jsx)(d,{}),(0,o.jsx)(s.a,{href:"/docs/graphql/types/scalars/boolean",children:(0,o.jsx)(s.code,{children:"Boolean!"})})," ",(0,o.jsx)(h,{class:"badge badge--secondary",text:"non-null"})," ",(0,o.jsx)(h,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,o.jsx)(s.p,{children:"If true, no-preference signups in this event cannot be moved once their bucket has been assigned."}),"\n",(0,o.jsxs)(s.h4,{id:"registrationpolicyminimum_slotsint-",children:[(0,o.jsx)(s.a,{href:"#",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["RegistrationPolicy.",(0,o.jsx)("b",{children:"minimum_slots"})]})}),(0,o.jsx)(d,{}),(0,o.jsx)(s.a,{href:"/docs/graphql/types/scalars/int",children:(0,o.jsx)(s.code,{children:"Int"})})," ",(0,o.jsx)(h,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,o.jsx)(s.p,{children:"The sum of minimum slots across all counted buckets."}),"\n",(0,o.jsxs)(s.h4,{id:"registrationpolicyminimum_slots_including_not_countedint-",children:[(0,o.jsx)(s.a,{href:"#",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["RegistrationPolicy.",(0,o.jsx)("b",{children:"minimum_slots_including_not_counted"})]})}),(0,o.jsx)(d,{}),(0,o.jsx)(s.a,{href:"/docs/graphql/types/scalars/int",children:(0,o.jsx)(s.code,{children:"Int"})})," ",(0,o.jsx)(h,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,o.jsx)(s.p,{children:"The sum of minimum slots across all buckets, including not-counted buckets."}),"\n",(0,o.jsxs)(s.h4,{id:"registrationpolicyonly_uncountedboolean-",children:[(0,o.jsx)(s.a,{href:"#",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["RegistrationPolicy.",(0,o.jsx)("b",{children:"only_uncounted"})]})}),(0,o.jsx)(d,{}),(0,o.jsx)(s.a,{href:"/docs/graphql/types/scalars/boolean",children:(0,o.jsx)(s.code,{children:"Boolean"})})," ",(0,o.jsx)(h,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,o.jsx)(s.p,{children:"Does this registration policy include only not-counted buckets?"}),"\n",(0,o.jsxs)(s.h4,{id:"registrationpolicypreferred_slotsint-",children:[(0,o.jsx)(s.a,{href:"#",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["RegistrationPolicy.",(0,o.jsx)("b",{children:"preferred_slots"})]})}),(0,o.jsx)(d,{}),(0,o.jsx)(s.a,{href:"/docs/graphql/types/scalars/int",children:(0,o.jsx)(s.code,{children:"Int"})})," ",(0,o.jsx)(h,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,o.jsx)(s.p,{children:"The sum of preferred slots across all counted buckets."}),"\n",(0,o.jsxs)(s.h4,{id:"registrationpolicypreferred_slots_including_not_countedint-",children:[(0,o.jsx)(s.a,{href:"#",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["RegistrationPolicy.",(0,o.jsx)("b",{children:"preferred_slots_including_not_counted"})]})}),(0,o.jsx)(d,{}),(0,o.jsx)(s.a,{href:"/docs/graphql/types/scalars/int",children:(0,o.jsx)(s.code,{children:"Int"})})," ",(0,o.jsx)(h,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,o.jsx)(s.p,{children:"The sum of preferred slots across all buckets, including not-counted buckets."}),"\n",(0,o.jsxs)(s.h4,{id:"registrationpolicyprevent_no_preference_signupsboolean--",children:[(0,o.jsx)(s.a,{href:"#",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["RegistrationPolicy.",(0,o.jsx)("b",{children:"prevent_no_preference_signups"})]})}),(0,o.jsx)(d,{}),(0,o.jsx)(s.a,{href:"/docs/graphql/types/scalars/boolean",children:(0,o.jsx)(s.code,{children:"Boolean!"})})," ",(0,o.jsx)(h,{class:"badge badge--secondary",text:"non-null"})," ",(0,o.jsx)(h,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,o.jsx)(s.p,{children:"If true, no-preference signups will not be allowed for this event."}),"\n",(0,o.jsxs)(s.h4,{id:"registrationpolicyslots_limitedboolean-",children:[(0,o.jsx)(s.a,{href:"#",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["RegistrationPolicy.",(0,o.jsx)("b",{children:"slots_limited"})]})}),(0,o.jsx)(d,{}),(0,o.jsx)(s.a,{href:"/docs/graphql/types/scalars/boolean",children:(0,o.jsx)(s.code,{children:"Boolean"})})," ",(0,o.jsx)(h,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,o.jsx)(s.p,{children:"Does this event have an effectively-limited number of slots?"}),"\n",(0,o.jsx)(s.p,{children:"The logic for this is more complex than it might first appear.  An event's slots are effectively unlimited if it\neither:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:"Has a counted + unlimited bucket"}),"\n",(0,o.jsx)(s.li,{children:"Has a not-counted + unlimited bucket, and no counted buckets"}),"\n"]}),"\n",(0,o.jsx)(s.p,{children:"Therefore, this will be true if both of the above conditions are false."}),"\n",(0,o.jsxs)(s.h4,{id:"registrationpolicytotal_slotsint-",children:[(0,o.jsx)(s.a,{href:"#",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["RegistrationPolicy.",(0,o.jsx)("b",{children:"total_slots"})]})}),(0,o.jsx)(d,{}),(0,o.jsx)(s.a,{href:"/docs/graphql/types/scalars/int",children:(0,o.jsx)(s.code,{children:"Int"})})," ",(0,o.jsx)(h,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,o.jsx)(s.p,{children:"The sum of total slots across all counted buckets."}),"\n",(0,o.jsxs)(s.h4,{id:"registrationpolicytotal_slots_including_not_countedint-",children:[(0,o.jsx)(s.a,{href:"#",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["RegistrationPolicy.",(0,o.jsx)("b",{children:"total_slots_including_not_counted"})]})}),(0,o.jsx)(d,{}),(0,o.jsx)(s.a,{href:"/docs/graphql/types/scalars/int",children:(0,o.jsx)(s.code,{children:"Int"})})," ",(0,o.jsx)(h,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,o.jsx)(s.p,{children:"The sum of total slots across all buckets, including not-counted buckets."}),"\n",(0,o.jsx)(s.h3,{id:"member-of",children:"Member Of"}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.a,{href:"/docs/graphql/types/objects/event",children:(0,o.jsx)(s.code,{children:"Event"})}),"  ",(0,o.jsx)(h,{class:"badge badge--secondary",text:"object"}),(0,o.jsx)(d,{}),(0,o.jsx)(s.a,{href:"/docs/graphql/types/objects/event-proposal",children:(0,o.jsx)(s.code,{children:"EventProposal"})}),"  ",(0,o.jsx)(h,{class:"badge badge--secondary",text:"object"})]})]})}function x(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(b,{...e})}):b(e)}},5365:(e,s,t)=>{t.d(s,{R:()=>l,x:()=>c});var n=t(62340);const o={},i=n.createContext(o);function l(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);