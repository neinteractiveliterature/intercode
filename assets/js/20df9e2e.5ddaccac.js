"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[51686],{63408:(n,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>d,metadata:()=>e,toc:()=>l});const e=JSON.parse('{"id":"graphql/types/inputs/notification-condition-input","title":"NotificationConditionInput","description":"An input type for creating or updating conditions that must be met for a notification to be sent to a destination.","source":"@site/docs/graphql/types/inputs/notification-condition-input.md","sourceDirName":"graphql/types/inputs","slug":"/graphql/types/inputs/notification-condition-input","permalink":"/docs/graphql/types/inputs/notification-condition-input","draft":false,"unlisted":false,"editUrl":"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/graphql/types/inputs/notification-condition-input.md","tags":[],"version":"current","frontMatter":{"id":"notification-condition-input","title":"NotificationConditionInput"},"sidebar":"sidebar","previous":{"title":"MoveFormSectionInput","permalink":"/docs/graphql/types/inputs/move-form-section-input"},"next":{"title":"NotificationDestinationInput","permalink":"/docs/graphql/types/inputs/notification-destination-input"}}');var o=t(41652),s=t(45640);const d={id:"notification-condition-input",title:"NotificationConditionInput"},a=void 0,c={},l=[{value:"Fields",id:"fields",level:3},{value:'<span class="gqlmd-mdx-entity"><code class="gqlmd-mdx-entity-parent">NotificationConditionInput</code>.<code class="gqlmd-mdx-entity-name">conditionType</code></span><span class="gqlmd-mdx-bullet">\u25cf</span><span class="gqlmd-mdx-entity"><code class="gqlmd-mdx-entity-name">NotificationConditionType!</code></span> <mark class="gqlmd-mdx-badge">non-null</mark> <mark class="gqlmd-mdx-badge">enum</mark>',id:"notificationconditioninputconditiontypenotificationconditiontype-non-null-enum",level:4},{value:'<span class="gqlmd-mdx-entity"><code class="gqlmd-mdx-entity-parent">NotificationConditionInput</code>.<code class="gqlmd-mdx-entity-name">value</code></span><span class="gqlmd-mdx-bullet">\u25cf</span><span class="gqlmd-mdx-entity"><code class="gqlmd-mdx-entity-name">Json</code></span> <mark class="gqlmd-mdx-badge">scalar</mark>',id:"notificationconditioninputvaluejson-scalar",level:4},{value:"Member Of",id:"member-of",level:3}];function r(n){const i={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.p,{children:"An input type for creating or updating conditions that must be met for a notification to be sent to a destination."}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-graphql",children:"input NotificationConditionInput {\n  conditionType: NotificationConditionType!\n  value: Json\n}\n"})}),"\n",(0,o.jsx)(i.h3,{id:"fields",children:"Fields"}),"\n",(0,o.jsxs)(i.h4,{id:"notificationconditioninputconditiontypenotificationconditiontype-non-null-enum",children:[(0,o.jsx)(i.a,{href:"#",children:(0,o.jsxs)("span",{class:"gqlmd-mdx-entity",children:[(0,o.jsx)("code",{class:"gqlmd-mdx-entity-parent",children:"NotificationConditionInput"}),".",(0,o.jsx)("code",{class:"gqlmd-mdx-entity-name",children:"conditionType"})]})}),(0,o.jsx)("span",{class:"gqlmd-mdx-bullet",children:"\xa0\u25cf\xa0"}),(0,o.jsx)(i.a,{href:"/docs/graphql/types/enums/notification-condition-type",children:(0,o.jsx)("span",{class:"gqlmd-mdx-entity",children:(0,o.jsx)("code",{class:"gqlmd-mdx-entity-name",children:"NotificationConditionType!"})})})," ",(0,o.jsx)("mark",{class:"gqlmd-mdx-badge",children:"non-null"})," ",(0,o.jsx)("mark",{class:"gqlmd-mdx-badge",children:"enum"})]}),"\n",(0,o.jsx)(i.p,{children:"The type of condition."}),"\n",(0,o.jsxs)(i.h4,{id:"notificationconditioninputvaluejson-scalar",children:[(0,o.jsx)(i.a,{href:"#",children:(0,o.jsxs)("span",{class:"gqlmd-mdx-entity",children:[(0,o.jsx)("code",{class:"gqlmd-mdx-entity-parent",children:"NotificationConditionInput"}),".",(0,o.jsx)("code",{class:"gqlmd-mdx-entity-name",children:"value"})]})}),(0,o.jsx)("span",{class:"gqlmd-mdx-bullet",children:"\xa0\u25cf\xa0"}),(0,o.jsx)(i.a,{href:"/docs/graphql/types/scalars/json",children:(0,o.jsx)("span",{class:"gqlmd-mdx-entity",children:(0,o.jsx)("code",{class:"gqlmd-mdx-entity-name",children:"Json"})})})," ",(0,o.jsx)("mark",{class:"gqlmd-mdx-badge",children:"scalar"})]}),"\n",(0,o.jsx)(i.p,{children:"The value of the condition.  This will vary depending on the condition type."}),"\n",(0,o.jsx)(i.h3,{id:"member-of",children:"Member Of"}),"\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.a,{href:"/docs/graphql/types/inputs/notification-destination-input",children:(0,o.jsx)(i.code,{children:"NotificationDestinationInput"})}),"  ",(0,o.jsx)("mark",{class:"gqlmd-mdx-badge",children:"input"})]})]})}function p(n={}){const{wrapper:i}={...(0,s.R)(),...n.components};return i?(0,o.jsx)(i,{...n,children:(0,o.jsx)(r,{...n})}):r(n)}},45640:(n,i,t)=>{t.d(i,{R:()=>d,x:()=>a});var e=t(29064);const o={},s=e.createContext(o);function d(n){const i=e.useContext(s);return e.useMemo((function(){return"function"==typeof n?n(i):{...i,...n}}),[i,n])}function a(n){let i;return i=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:d(n.components),e.createElement(s.Provider,{value:i},n.children)}}}]);