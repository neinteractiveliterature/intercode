"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[29259],{3526:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>u,Bullet:()=>l,Details:()=>p,SpecifiedBy:()=>h,assets:()=>c,contentTitle:()=>i,default:()=>x,frontMatter:()=>o,metadata:()=>d,toc:()=>m});var r=a(58040),s=a(1422),n=a(62340);const o={id:"oauth-pre-auth",title:"oauthPreAuth"},i=void 0,d={id:"graphql/api/queries/oauth-pre-auth",title:"oauthPreAuth",description:"Given a set of valid OAuth query parameters for the /oauth/authorize endpoint, returns a",source:"@site/docs/graphql/api/queries/oauth-pre-auth.mdx",sourceDirName:"graphql/api/queries",slug:"/graphql/api/queries/oauth-pre-auth",permalink:"/docs/graphql/api/queries/oauth-pre-auth",draft:!1,unlisted:!1,editUrl:"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/graphql/api/queries/oauth-pre-auth.mdx",tags:[],version:"current",frontMatter:{id:"oauth-pre-auth",title:"oauthPreAuth"},sidebar:"sidebar",previous:{title:"myAuthorizedApplications",permalink:"/docs/graphql/api/queries/my-authorized-applications"},next:{title:"organizations",permalink:"/docs/graphql/api/queries/organizations"}},c={},l=()=>{const e={span:"span",...(0,s.R)()};return(0,r.jsx)(r.Fragment,{children:(0,r.jsx)(e.span,{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25cf\xa0"})})},h=e=>{const t={a:"a",...(0,s.R)()};return(0,r.jsxs)(r.Fragment,{children:["Specification",(0,r.jsx)(t.a,{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]})},u=e=>{const t={span:"span",...(0,s.R)()};return(0,r.jsx)(r.Fragment,{children:(0,r.jsx)(t.span,{className:e.class,children:e.text})})},p=({dataOpen:e,dataClose:t,children:a,startOpen:o=!1})=>{const i={details:"details",summary:"summary",...(0,s.R)()},[d,c]=(0,n.useState)(o);return(0,r.jsxs)(i.details,{...d?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,r.jsx)(i.summary,{onClick:e=>{e.preventDefault(),c((e=>!e))},style:{listStyle:"none"},children:d?e:t}),d&&a]})},m=[{value:"Arguments",id:"arguments",level:3},{value:'<code>oauthPreAuth.<b>queryParams</b></code><Bullet></Bullet><code>Json!</code> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"oauthpreauthqueryparamsjson--",level:4},{value:"Type",id:"type",level:3},{value:'<code>Json</code> <Badge class="badge badge--secondary"></Badge>',id:"json-",level:4}];function g(e){const t={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Given a set of valid OAuth query parameters for the ",(0,r.jsx)(t.code,{children:"/oauth/authorize"})," endpoint, returns a\nJSON object containing the necessary data for rendering the pre-authorization screen that\nchecks if you want to allow an application to access Intercode on your behalf."]}),"\n",(0,r.jsxs)(t.p,{children:["This essentially emulates the JSON behavior of\n",(0,r.jsx)(t.a,{href:"https://github.com/doorkeeper-gem/doorkeeper",children:"Doorkeeper"}),"'s API-only mode if you go to\n",(0,r.jsx)(t.code,{children:"/oauth/authorize"})," with query parameters. The only reason this query exists, rather than\nsimply having clients actually call ",(0,r.jsx)(t.code,{children:"/oauth/authorize"}),", is that we're running Doorkeeper\nin regular mode so that we can get the server-rendered HTML admin views."]}),"\n",(0,r.jsxs)(t.p,{children:["When we've implemented our own admin screens for OAuth\n(see ",(0,r.jsx)(t.a,{href:"https://github.com/neinteractiveliterature/intercode/issues/2740",children:"this Github issue"}),"),\nthis query will be deprecated."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-graphql",children:"oauthPreAuth(\n  queryParams: Json!\n): Json!\n"})}),"\n",(0,r.jsx)(t.h3,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(t.h4,{id:"oauthpreauthqueryparamsjson--",children:[(0,r.jsx)(t.a,{href:"#",children:(0,r.jsxs)("code",{style:{fontWeight:"normal"},children:["oauthPreAuth.",(0,r.jsx)("b",{children:"queryParams"})]})}),(0,r.jsx)(l,{}),(0,r.jsx)(t.a,{href:"/docs/graphql/types/scalars/json",children:(0,r.jsx)(t.code,{children:"Json!"})})," ",(0,r.jsx)(u,{class:"badge badge--secondary",text:"non-null"})," ",(0,r.jsx)(u,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,r.jsxs)(t.p,{children:["A set of HTTP query parameters for ",(0,r.jsx)(t.code,{children:"/oauth/authorize"}),", parsed out and\nrepresented as a JSON object."]}),"\n",(0,r.jsx)(t.h3,{id:"type",children:"Type"}),"\n",(0,r.jsxs)(t.h4,{id:"json-",children:[(0,r.jsx)(t.a,{href:"/docs/graphql/types/scalars/json",children:(0,r.jsx)(t.code,{children:"Json"})})," ",(0,r.jsx)(u,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,r.jsx)(t.p,{children:"An arbitrary object, serialized as JSON"})]})}function x(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}},1422:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>i});var r=a(62340);const s={},n=r.createContext(s);function o(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);