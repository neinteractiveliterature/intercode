type Ability {
  can_become_user_con_profile(user_con_profile_id: Int!): Boolean!
  can_create_cms_content_groups: Boolean!
  can_create_cms_files: Boolean!
  can_create_cms_graphql_queries: Boolean!
  can_create_cms_layouts: Boolean!
  can_create_cms_navigation_items: Boolean!
  can_create_cms_partials: Boolean!
  can_create_cms_variables: Boolean!
  can_create_orders: Boolean!
  can_create_pages: Boolean!
  can_create_tickets: Boolean!
  can_create_user_con_profiles: Boolean!
  can_delete_event(event_id: Int!): Boolean!
  can_delete_event_proposal(event_proposal_id: Int!): Boolean!
  can_delete_ticket(ticket_id: Int!): Boolean!
  can_delete_user_con_profile(user_con_profile_id: Int!): Boolean!
  can_force_confirm_signup(signup_id: Int!): Boolean!
  can_list_events: Boolean!
  can_manage_any_cms_content: Boolean!
  can_manage_conventions: Boolean!
  can_manage_email_routes: Boolean!
  can_manage_forms: Boolean!
  can_manage_oauth_applications: Boolean!
  can_manage_rooms: Boolean!
  can_manage_runs: Boolean!
  can_manage_signups: Boolean!
  can_manage_staff_positions: Boolean!
  can_manage_ticket_types: Boolean!
  can_override_maximum_event_provided_tickets: Boolean!
  can_read_admin_notes_on_event_proposal(event_proposal_id: Int!): Boolean!
  can_read_any_mailing_list: Boolean!
  can_read_event_proposals: Boolean!
  can_read_event_signups(event_id: Int!): Boolean!
  can_read_orders: Boolean!
  can_read_organizations: Boolean!
  can_read_reports: Boolean!
  can_read_schedule: Boolean!
  can_read_schedule_with_counts: Boolean!
  can_read_signups: Boolean!
  can_read_user_activity_alerts: Boolean!
  can_read_user_con_profiles: Boolean!
  can_read_users: Boolean!
  can_update_admin_notes_on_event_proposal(event_proposal_id: Int!): Boolean!
  can_update_bucket_signup(signup_id: Int!): Boolean!
  can_update_convention: Boolean!
  can_update_counted_signup(signup_id: Int!): Boolean!
  can_update_departments: Boolean!
  can_update_event(event_id: Int!): Boolean!
  can_update_event_categories: Boolean!
  can_update_event_proposal(event_proposal_id: Int!): Boolean!
  can_update_notification_templates: Boolean!
  can_update_orders: Boolean!
  can_update_privileges_user_con_profile(user_con_profile_id: Int!): Boolean! @deprecated(reason: "Privileges have been removed in favor of permissions.  This will always return false.")
  can_update_products: Boolean!
  can_update_signup(signup_id: Int!): Boolean!
  can_update_signups: Boolean!
  can_update_ticket(ticket_id: Int!): Boolean!
  can_update_user_con_profile(user_con_profile_id: Int!): Boolean!
  can_withdraw_all_user_con_profile_signups(user_con_profile_id: Int!): Boolean!
}

"""
Autogenerated input type of AcceptClickwrapAgreement
"""
input AcceptClickwrapAgreementInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of AcceptClickwrapAgreement
"""
type AcceptClickwrapAgreementPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  my_profile: UserConProfile!
}

"""
Autogenerated input type of AcceptSignupRequest
"""
input AcceptSignupRequestInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of AcceptSignupRequest
"""
type AcceptSignupRequestPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup: Signup!
  signup_request: SignupRequest!
}

"""
Autogenerated input type of AddOrderEntryToCurrentPendingOrder
"""
input AddOrderEntryToCurrentPendingOrderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order_entry: OrderEntryInput!
}

"""
Autogenerated return type of AddOrderEntryToCurrentPendingOrder
"""
type AddOrderEntryToCurrentPendingOrderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order_entry: OrderEntry!
}

type AuthorizedApplication {
  name: String!
  scopes: [String!]!
  uid: ID!
}

scalar BigDecimal

"""
Autogenerated input type of CancelOrder
"""
input CancelOrderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  skip_refund: Boolean
}

"""
Autogenerated return type of CancelOrder
"""
type CancelOrderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order: Order!
}

type ChoiceCount {
  choice: Int!
  count: Int!
  state: SignupState!
}

union CmsContent = CmsLayout | CmsPartial | Page

type CmsContentGroup {
  contents: [CmsContent!]!
  current_ability_can_delete: Boolean!
  current_ability_can_update: Boolean!
  id: Int!
  name: String!
  permissions: [Permission!]!
}

input CmsContentGroupInput {
  contents: [CmsContentInput!]
  name: String
}

input CmsContentInput {
  content_type: CmsContentTypeIndicator!
  id: Int!
}

enum CmsContentTypeIndicator {
  CmsLayout
  CmsPartial
  Page
}

type CmsFile {
  content_type: String!
  current_ability_can_delete: Boolean!
  filename: String!
  id: Int!
  size: Int!
  url: String!
}

type CmsGraphqlQuery {
  admin_notes: String
  current_ability_can_delete: Boolean!
  current_ability_can_update: Boolean!
  id: Int!
  identifier: String!
  query: String!
}

input CmsGraphqlQueryInput {
  admin_notes: String
  identifier: String
  query: String
}

type CmsLayout {
  admin_notes: String
  content: String
  content_html(path: String): String
  current_ability_can_delete: Boolean!
  current_ability_can_update: Boolean!
  id: Int!
  name: String
  navbar_classes: String
}

input CmsLayoutInput {
  admin_notes: String
  content: String
  name: String
  navbar_classes: String
}

type CmsNavigationItem {
  id: Int!
  navigation_items: [CmsNavigationItem]
  navigation_section: CmsNavigationItem
  page: Page
  position: Int
  title: String
}

input CmsNavigationItemInput {
  navigation_section_id: Int
  page_id: Int
  position: Int
  title: String
}

union CmsParent = Convention | RootSite

type CmsPartial {
  admin_notes: String
  content: String
  current_ability_can_delete: Boolean!
  current_ability_can_update: Boolean!
  id: Int!
  name: String
}

input CmsPartialInput {
  admin_notes: String
  content: String
  name: String
}

type CmsVariable {
  current_ability_can_delete: Boolean!
  current_ability_can_update: Boolean!
  id: Int!
  key: String!
  value_json: String!
}

input CmsVariableInput {
  key: String!
  value_json: String!
}

type ContactEmail {
  email: String!
  formatted_address: String!
  metadata_json: Json!
  name: String
}

type Convention {
  accepting_proposals: Boolean
  bio_eligible_user_con_profiles: [UserConProfile!]!
  canceled: Boolean!
  catch_all_staff_position: StaffPosition
  clickwrap_agreement: String
  clickwrap_agreement_html: String
  cms_content_groups: [CmsContentGroup!]!
  cms_layouts: [CmsLayout!]!
  cms_navigation_items: [CmsNavigationItem!]!
  coupons_paginated(filters: CouponFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): CouponsPagination!
  created_at: Date
  default_layout: CmsLayout
  departments: [Department!]!
  domain: String
  email_from: String!
  email_mode: EmailMode!
  ends_at: Date
  event_categories(current_ability_can_read_event_proposals: Boolean): [EventCategory!]!
  event_mailing_list_domain: String
  event_proposals_paginated(filters: EventProposalFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): EventProposalsPagination!
  events_paginated(filters: EventFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): EventsPagination!
  forms: [Form!]!
  hidden: Boolean!
  id: Int!
  language: String!
  location: Json
  mail_privilege_names: [String!]! @deprecated(reason: "Mail privileges have gone away in favor of permissions")
  mailing_lists: MailingLists!
  maximum_event_signups: ScheduledValue
  maximum_tickets: Int
  name: String!
  notification_templates: [NotificationTemplate!]!
  orders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): OrdersConnection
  orders_paginated(filters: OrderFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): OrdersPagination!
  organization: Organization
  pages: [Page!]!
  pre_schedule_content_html: String
  privilege_names: [String!]! @deprecated(reason: "Privileges have gone away in favor of permissions")
  products(only_available: Boolean, only_ticket_providing: Boolean): [Product!]!
  reports: ConventionReports!
  rooms: [Room!]!
  root_page: Page
  show_event_list: ShowSchedule
  show_schedule: ShowSchedule
  signup_changes_paginated(filters: SignupChangeFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): SignupChangesPagination!
  signup_counts_by_state: [SignupCountByState!]!
  signup_mode: SignupMode!
  signup_requests_open: Boolean!
  signup_requests_paginated(filters: SignupRequestFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): SignupRequestsPagination!
  signup_spy_paginated(filters: SignupFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): SignupsPagination! @deprecated(reason: "Use signup_changes_paginated instead")
  site_mode: SiteMode!
  staff_positions: [StaffPosition!]!
  starts_at: Date
  stripe_account: StripeAccount
  stripe_account_ready_to_charge: Boolean!
  ticket_mode: TicketMode!
  ticket_name: String!
  ticket_types: [TicketType!]!
  tickets_available_for_purchase: Boolean!
  timezone_mode: TimezoneMode!
  timezone_name: String
  updated_at: Date
  user_activity_alert(id: Int!): UserActivityAlert!
  user_activity_alerts: [UserActivityAlert!]!
  user_con_profile_form: Form!
  user_con_profiles_paginated(filters: UserConProfileFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): UserConProfilesPagination!
}

input ConventionFiltersInput {
  name: String
  organization_name: String
}

input ConventionInput {
  accepting_proposals: Boolean
  catch_all_staff_position_id: Int
  clickwrap_agreement: String
  default_layout_id: Int
  domain: String
  email_from: String
  email_mode: EmailMode
  ends_at: Date
  event_mailing_list_domain: String
  hidden: Boolean
  language: String
  location: Json
  maximum_event_signups: ScheduledValueInput
  maximum_tickets: Int
  name: String
  root_page_id: Int
  show_event_list: ShowSchedule
  show_schedule: ShowSchedule
  signup_mode: SignupMode
  signup_requests_open: Boolean
  site_mode: SiteMode
  starts_at: Date
  ticket_mode: TicketMode
  ticket_name: String
  timezone_mode: TimezoneMode
  timezone_name: String
}

type ConventionReports {
  event_provided_tickets: [EventProvidedTicketList!]!
  events_by_choice: [EventWithChoiceCounts!]!
  ticket_count_by_type_and_payment_amount: [TicketCountByTypeAndPaymentAmount!]!
  total_revenue: Money!
}

type ConventionsPagination implements PaginationInterface {
  current_page: Int!
  entries: [Convention!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

"""
Autogenerated input type of ConvertTicketToEventProvided
"""
input ConvertTicketToEventProvidedInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_id: Int!
  ticket_type_id: Int!
  user_con_profile_id: Int!
}

"""
Autogenerated return type of ConvertTicketToEventProvided
"""
type ConvertTicketToEventProvidedPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  The ticket we deleted in order to provide a new ticket
  """
  deleted_ticket: Ticket!
  refund_status: RefundStatus!

  """
  The new ticket we just provided
  """
  ticket: Ticket!
}

type Coupon {
  code: String!
  convention: Convention!
  expires_at: Date
  fixed_amount: Money
  id: Int!
  percent_discount: BigDecimal
  provides_product: Product
  usage_limit: Int
}

type CouponApplication {
  coupon: Coupon!
  discount: Money!
  id: Int!
  order: Order!
}

input CouponFiltersInput {
  code: String
}

input CouponInput {
  code: String
  expires_at: Date
  fixed_amount: MoneyInput
  percent_discount: BigDecimal
  provides_product_id: Int
  usage_limit: Int
}

type CouponsPagination implements PaginationInterface {
  current_page: Int!
  entries: [Coupon!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

"""
Autogenerated input type of CreateCmsContentGroup
"""
input CreateCmsContentGroupInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_content_group: CmsContentGroupInput!
  permissions: [PermissionInput!]
}

"""
Autogenerated return type of CreateCmsContentGroup
"""
type CreateCmsContentGroupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_content_group: CmsContentGroup!
}

"""
Autogenerated input type of CreateCmsFile
"""
input CreateCmsFileInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  file: Upload!
}

"""
Autogenerated return type of CreateCmsFile
"""
type CreateCmsFilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_file: CmsFile!
}

"""
Autogenerated input type of CreateCmsGraphqlQuery
"""
input CreateCmsGraphqlQueryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  query: CmsGraphqlQueryInput!
}

"""
Autogenerated return type of CreateCmsGraphqlQuery
"""
type CreateCmsGraphqlQueryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  query: CmsGraphqlQuery!
}

"""
Autogenerated input type of CreateCmsLayout
"""
input CreateCmsLayoutInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_layout: CmsLayoutInput!
}

"""
Autogenerated return type of CreateCmsLayout
"""
type CreateCmsLayoutPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_layout: CmsLayout!
}

"""
Autogenerated input type of CreateCmsNavigationItem
"""
input CreateCmsNavigationItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_navigation_item: CmsNavigationItemInput!
}

"""
Autogenerated return type of CreateCmsNavigationItem
"""
type CreateCmsNavigationItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_navigation_item: CmsNavigationItem!
}

"""
Autogenerated input type of CreateCmsPartial
"""
input CreateCmsPartialInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_partial: CmsPartialInput!
}

"""
Autogenerated return type of CreateCmsPartial
"""
type CreateCmsPartialPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_partial: CmsPartial!
}

"""
Autogenerated input type of CreateConvention
"""
input CreateConventionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  clone_convention_id: Int
  cms_content_set_name: String
  convention: ConventionInput!
  organization_id: Int
}

"""
Autogenerated return type of CreateConvention
"""
type CreateConventionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  convention: Convention!
}

"""
Autogenerated input type of CreateConventionStripeAccount
"""
input CreateConventionStripeAccountInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateConventionStripeAccount
"""
type CreateConventionStripeAccountPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  stripe_account: StripeAccount!
}

"""
Autogenerated input type of CreateCouponApplication
"""
input CreateCouponApplicationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  coupon_code: String!
  order_id: Int!
}

"""
Autogenerated return type of CreateCouponApplication
"""
type CreateCouponApplicationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  coupon_application: CouponApplication!
}

"""
Autogenerated input type of CreateCoupon
"""
input CreateCouponInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  coupon: CouponInput!
}

"""
Autogenerated return type of CreateCoupon
"""
type CreateCouponPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  coupon: Coupon!
}

"""
Autogenerated input type of CreateDepartment
"""
input CreateDepartmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  department: DepartmentInput!
}

"""
Autogenerated return type of CreateDepartment
"""
type CreateDepartmentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  department: Department!
}

"""
Autogenerated input type of CreateEmailRoute
"""
input CreateEmailRouteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email_route: EmailRouteInput!
}

"""
Autogenerated return type of CreateEmailRoute
"""
type CreateEmailRoutePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email_route: EmailRoute!
}

"""
Autogenerated input type of CreateEventCategory
"""
input CreateEventCategoryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_category: EventCategoryInput!
}

"""
Autogenerated return type of CreateEventCategory
"""
type CreateEventCategoryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_category: EventCategory!
}

"""
Autogenerated input type of CreateEvent
"""
input CreateEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: EventInput!
}

"""
Autogenerated return type of CreateEvent
"""
type CreateEventPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: Event!
}

"""
Autogenerated input type of CreateEventProposal
"""
input CreateEventProposalInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  clone_event_proposal_id: Int
  event_category_id: Int!
}

"""
Autogenerated return type of CreateEventProposal
"""
type CreateEventProposalPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_proposal: EventProposal!
}

"""
Autogenerated input type of CreateFillerEvent
"""
input CreateFillerEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: EventInput!
  run: RunInput
}

"""
Autogenerated return type of CreateFillerEvent
"""
type CreateFillerEventPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: Event!
}

"""
Autogenerated input type of CreateForm
"""
input CreateFormInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form: FormInput!
  form_type: FormType!
}

"""
Autogenerated input type of CreateFormItem
"""
input CreateFormItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_item: FormItemInput!
  form_section_id: Int
}

"""
Autogenerated return type of CreateFormItem
"""
type CreateFormItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_item: FormItem!
}

"""
Autogenerated return type of CreateForm
"""
type CreateFormPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form: Form!
}

"""
Autogenerated input type of CreateFormSection
"""
input CreateFormSectionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_id: Int
  form_section: FormSectionInput!
}

"""
Autogenerated return type of CreateFormSection
"""
type CreateFormSectionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_section: FormSection!
}

"""
Autogenerated input type of CreateFormWithJSON
"""
input CreateFormWithJSONInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_json: String!
  form_type: FormType!
}

"""
Autogenerated return type of CreateFormWithJSON
"""
type CreateFormWithJSONPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form: Form!
}

"""
Autogenerated input type of CreateMaximumEventProvidedTicketsOverride
"""
input CreateMaximumEventProvidedTicketsOverrideInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_id: Int!
  override_value: Int!
  ticket_type_id: Int!
}

"""
Autogenerated return type of CreateMaximumEventProvidedTicketsOverride
"""
type CreateMaximumEventProvidedTicketsOverridePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  maximum_event_provided_tickets_override: MaximumEventProvidedTicketsOverride!
}

"""
Autogenerated input type of CreateMultipleRuns
"""
input CreateMultipleRunsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_id: Int!
  runs: [RunInput!]!
}

"""
Autogenerated return type of CreateMultipleRuns
"""
type CreateMultipleRunsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  runs: [Run!]!
}

"""
Autogenerated input type of CreateMySignup
"""
input CreateMySignupInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  no_requested_bucket: Boolean
  requested_bucket_key: String
  run_id: Int!
}

"""
Autogenerated return type of CreateMySignup
"""
type CreateMySignupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup: Signup!
}

"""
Autogenerated input type of CreateOrderEntry
"""
input CreateOrderEntryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order_entry: OrderEntryInput!
  order_id: Int!
}

"""
Autogenerated return type of CreateOrderEntry
"""
type CreateOrderEntryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order_entry: OrderEntry!
}

"""
Autogenerated input type of CreateOrder
"""
input CreateOrderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order: OrderInput!
  order_entries: [OrderEntryInput!]
  status: OrderStatus!
  user_con_profile_id: Int!
}

"""
Autogenerated return type of CreateOrder
"""
type CreateOrderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order: Order!
}

"""
Autogenerated input type of CreateOrganizationRole
"""
input CreateOrganizationRoleInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  organization_id: Int!
  organization_role: OrganizationRoleInput!
  permissions: [PermissionInput!]!
  user_ids: [Int!]!
}

"""
Autogenerated return type of CreateOrganizationRole
"""
type CreateOrganizationRolePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  organization_role: OrganizationRole!
}

"""
Autogenerated input type of CreatePage
"""
input CreatePageInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  page: PageInput!
}

"""
Autogenerated return type of CreatePage
"""
type CreatePagePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  page: Page!
}

"""
Autogenerated input type of CreateProduct
"""
input CreateProductInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  product: ProductInput!
}

"""
Autogenerated return type of CreateProduct
"""
type CreateProductPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  product: Product!
}

"""
Autogenerated input type of CreateRoom
"""
input CreateRoomInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  room: RoomInput!
}

"""
Autogenerated return type of CreateRoom
"""
type CreateRoomPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  room: Room!
}

"""
Autogenerated input type of CreateRun
"""
input CreateRunInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_id: Int!
  run: RunInput!
}

"""
Autogenerated return type of CreateRun
"""
type CreateRunPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  run: Run!
}

"""
Autogenerated input type of CreateSignupRequest
"""
input CreateSignupRequestInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  replace_signup_id: Int
  requested_bucket_key: String
  target_run_id: Int!
}

"""
Autogenerated return type of CreateSignupRequest
"""
type CreateSignupRequestPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup_request: SignupRequest!
}

"""
Autogenerated input type of CreateStaffPosition
"""
input CreateStaffPositionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  staff_position: StaffPositionInput!
}

"""
Autogenerated return type of CreateStaffPosition
"""
type CreateStaffPositionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  staff_position: StaffPosition!
}

"""
Autogenerated input type of CreateTeamMember
"""
input CreateTeamMemberInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_id: Int!
  provide_ticket_type_id: Int
  team_member: TeamMemberInput!
  user_con_profile_id: Int!
}

"""
Autogenerated return type of CreateTeamMember
"""
type CreateTeamMemberPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  converted_signups: [Signup!]!
  move_results: [SignupMoveResult!]!
  team_member: TeamMember!
  ticket: Ticket
}

"""
Autogenerated input type of CreateTicket
"""
input CreateTicketInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticket: TicketInput!
  user_con_profile_id: Int!
}

"""
Autogenerated return type of CreateTicket
"""
type CreateTicketPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticket: Ticket!
}

"""
Autogenerated input type of CreateTicketType
"""
input CreateTicketTypeInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticket_type: TicketTypeInput!
}

"""
Autogenerated return type of CreateTicketType
"""
type CreateTicketTypePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticket_type: TicketType!
}

"""
Autogenerated input type of CreateUserActivityAlert
"""
input CreateUserActivityAlertInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  notification_destinations: [NotificationDestinationInput!]!
  user_activity_alert: UserActivityAlertInput!
}

"""
Autogenerated return type of CreateUserActivityAlert
"""
type CreateUserActivityAlertPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user_activity_alert: UserActivityAlert!
}

"""
Autogenerated input type of CreateUserConProfile
"""
input CreateUserConProfileInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user_con_profile: UserConProfileInput!
  user_id: Int!
}

"""
Autogenerated return type of CreateUserConProfile
"""
type CreateUserConProfilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user_con_profile: UserConProfile!
}

"""
Autogenerated input type of CreateUserSignup
"""
input CreateUserSignupInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  no_requested_bucket: Boolean
  requested_bucket_key: String
  run_id: Int!
  suppress_notifications: Boolean
  user_con_profile_id: Int!
}

"""
Autogenerated return type of CreateUserSignup
"""
type CreateUserSignupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup: Signup!
}

"""
Date in ISO8601 format
"""
scalar Date

"""
Autogenerated input type of DeleteCmsContentGroup
"""
input DeleteCmsContentGroupInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteCmsContentGroup
"""
type DeleteCmsContentGroupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_content_group: CmsContentGroup!
}

"""
Autogenerated input type of DeleteCmsFile
"""
input DeleteCmsFileInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteCmsFile
"""
type DeleteCmsFilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_file: CmsFile!
}

"""
Autogenerated input type of DeleteCmsGraphqlQuery
"""
input DeleteCmsGraphqlQueryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteCmsGraphqlQuery
"""
type DeleteCmsGraphqlQueryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  query: CmsGraphqlQuery!
}

"""
Autogenerated input type of DeleteCmsLayout
"""
input DeleteCmsLayoutInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteCmsLayout
"""
type DeleteCmsLayoutPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_layout: CmsLayout!
}

"""
Autogenerated input type of DeleteCmsNavigationItem
"""
input DeleteCmsNavigationItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteCmsNavigationItem
"""
type DeleteCmsNavigationItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_navigation_item: CmsNavigationItem!
}

"""
Autogenerated input type of DeleteCmsPartial
"""
input DeleteCmsPartialInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteCmsPartial
"""
type DeleteCmsPartialPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_partial: CmsPartial!
}

"""
Autogenerated input type of DeleteCmsVariable
"""
input DeleteCmsVariableInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  key: String!
}

"""
Autogenerated return type of DeleteCmsVariable
"""
type DeleteCmsVariablePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_variable: CmsVariable!
}

"""
Autogenerated input type of DeleteCouponApplication
"""
input DeleteCouponApplicationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteCouponApplication
"""
type DeleteCouponApplicationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  coupon_application: CouponApplication!
}

"""
Autogenerated input type of DeleteCoupon
"""
input DeleteCouponInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteCoupon
"""
type DeleteCouponPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  coupon: Coupon!
}

"""
Autogenerated input type of DeleteDepartment
"""
input DeleteDepartmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteDepartment
"""
type DeleteDepartmentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  department: Department!
}

"""
Autogenerated input type of DeleteEmailRoute
"""
input DeleteEmailRouteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteEmailRoute
"""
type DeleteEmailRoutePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email_route: EmailRoute!
}

"""
Autogenerated input type of DeleteEventCategory
"""
input DeleteEventCategoryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteEventCategory
"""
type DeleteEventCategoryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_category: EventCategory!
}

"""
Autogenerated input type of DeleteEventProposal
"""
input DeleteEventProposalInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteEventProposal
"""
type DeleteEventProposalPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_proposal: EventProposal!
}

"""
Autogenerated input type of DeleteForm
"""
input DeleteFormInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated input type of DeleteFormItem
"""
input DeleteFormItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteFormItem
"""
type DeleteFormItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DeleteForm
"""
type DeleteFormPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form: Form!
}

"""
Autogenerated input type of DeleteFormSection
"""
input DeleteFormSectionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteFormSection
"""
type DeleteFormSectionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of DeleteMaximumEventProvidedTicketsOverride
"""
input DeleteMaximumEventProvidedTicketsOverrideInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteMaximumEventProvidedTicketsOverride
"""
type DeleteMaximumEventProvidedTicketsOverridePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  maximum_event_provided_tickets_override: MaximumEventProvidedTicketsOverride!
}

"""
Autogenerated input type of DeleteOrderEntry
"""
input DeleteOrderEntryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteOrderEntry
"""
type DeleteOrderEntryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order_entry: OrderEntry!
}

"""
Autogenerated input type of DeleteOrganizationRole
"""
input DeleteOrganizationRoleInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteOrganizationRole
"""
type DeleteOrganizationRolePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of DeletePage
"""
input DeletePageInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeletePage
"""
type DeletePagePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  page: Page!
}

"""
Autogenerated input type of DeleteProduct
"""
input DeleteProductInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteProduct
"""
type DeleteProductPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  product: Product!
}

"""
Autogenerated input type of DeleteRoom
"""
input DeleteRoomInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteRoom
"""
type DeleteRoomPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  room: Room!
}

"""
Autogenerated input type of DeleteRun
"""
input DeleteRunInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteRun
"""
type DeleteRunPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  run: Run!
}

"""
Autogenerated input type of DeleteStaffPosition
"""
input DeleteStaffPositionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteStaffPosition
"""
type DeleteStaffPositionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  staff_position: StaffPosition!
}

"""
Autogenerated input type of DeleteTeamMember
"""
input DeleteTeamMemberInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteTeamMember
"""
type DeleteTeamMemberPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  team_member: TeamMember!
}

"""
Autogenerated input type of DeleteTicket
"""
input DeleteTicketInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  refund: Boolean
}

"""
Autogenerated return type of DeleteTicket
"""
type DeleteTicketPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticket: Ticket!
}

"""
Autogenerated input type of DeleteTicketType
"""
input DeleteTicketTypeInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteTicketType
"""
type DeleteTicketTypePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticket_type: TicketType!
}

"""
Autogenerated input type of DeleteUserActivityAlert
"""
input DeleteUserActivityAlertInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteUserActivityAlert
"""
type DeleteUserActivityAlertPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user_activity_alert: UserActivityAlert!
}

"""
Autogenerated input type of DeleteUserConProfile
"""
input DeleteUserConProfileInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteUserConProfile
"""
type DeleteUserConProfilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user_con_profile: UserConProfile!
}

type Department {
  event_categories: [EventCategory!]!
  id: Int!
  name: String!
  proposal_description: String
}

input DepartmentInput {
  name: String
  proposal_description: String
}

"""
Autogenerated input type of DropEvent
"""
input DropEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DropEvent
"""
type DropEventPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: Event!
}

enum EmailMode {
  """
  Forward received emails to staff positions as configured
  """
  forward

  """
  Forward all received staff emails to catch-all staff position
  """
  staff_emails_to_catch_all
}

type EmailRoute {
  forward_addresses: [String!]
  id: Int!
  receiver_address: String!
}

input EmailRouteFiltersInput {
  forward_addresses: String
  receiver_address: String
}

input EmailRouteInput {
  forward_addresses: [String!]
  receiver_address: String
}

type EmailRoutesPagination implements PaginationInterface {
  current_page: Int!
  entries: [EmailRoute!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

type Event {
  admin_notes: String
  age_restrictions: String
  author: String
  can_play_concurrently: Boolean!
  can_provide_tickets: Boolean! @deprecated(reason: "Please use event_category.can_provide_tickets instead")
  category: String! @deprecated(reason: "Please use event_category instead")
  con_mail_destination: String
  content_warnings: String
  created_at: Date
  current_user_form_item_viewer_role: FormItemRole!
  current_user_form_item_writer_role: FormItemRole!
  description: String
  description_html: String
  email: String
  event_category: EventCategory!
  form: Form
  form_response_attrs_json: Json
  form_response_attrs_json_with_rendered_markdown: Json
  form_response_changes: [FormResponseChange!]!
  id: Int!
  length_seconds: Int!
  maximum_event_provided_tickets_overrides: [MaximumEventProvidedTicketsOverride!]!
  my_rating: Int
  organization: String
  participant_communications: String
  private_signup_list: Boolean
  provided_tickets: [Ticket!]!
  registration_policy: RegistrationPolicy
  run(id: Int!): Run!
  runs(excludeConflicts: Boolean, finish: Date, start: Date): [Run!]!
  short_blurb: String
  short_blurb_html: String
  slots_limited: Boolean
  status: String
  team_member_name: String! @deprecated(reason: "Please use event_category.team_member_name instead")
  team_members: [TeamMember!]!
  title: String
  total_slots: Int
  url: String
}

type EventCategory {
  can_provide_tickets: Boolean!
  convention: Convention!
  default_color: String
  department: Department
  event_form: Form!
  event_proposal_form: Form
  events_paginated(filters: EventFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): EventsPagination!
  full_color: String
  id: Int!
  name: String!
  proposable: Boolean!
  proposal_description: String
  scheduling_ui: SchedulingUi!
  signed_up_color: String
  team_member_name: String!
}

input EventCategoryInput {
  can_provide_tickets: Boolean
  default_color: String
  department_id: Int
  event_form_id: Int
  event_proposal_form_id: Int
  full_color: String
  name: String
  proposal_description: String
  scheduling_ui: SchedulingUi
  signed_up_color: String
  team_member_name: String
}

input EventFiltersInput {
  category: [Int]
  my_rating: [Int!]
  title: String
  title_prefix: String
}

input EventInput {
  event_category_id: Int
  form_response_attrs_json: String
}

type EventProposal {
  admin_notes: String
  convention: Convention!
  created_at: Date!
  current_user_form_item_viewer_role: FormItemRole!
  current_user_form_item_writer_role: FormItemRole!
  event: Event
  event_category: EventCategory!
  form: Form
  form_response_attrs_json: Json
  form_response_attrs_json_with_rendered_markdown: Json
  form_response_changes: [FormResponseChange!]!
  id: Int!
  length_seconds: Int
  owner: UserConProfile!
  registration_policy: RegistrationPolicy
  status: String!
  submitted_at: Date!
  title: String
  updated_at: Date!
}

input EventProposalFiltersInput {
  event_category: [Int]
  owner: String
  status: [String]
  title: String
}

input EventProposalInput {
  form_response_attrs_json: String
}

type EventProposalsPagination implements PaginationInterface {
  current_page: Int!
  entries: [EventProposal!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

type EventProvidedTicketList {
  provided_by_event: Event!
  tickets: [Ticket!]!
}

type EventWithChoiceCounts {
  choice_counts: [ChoiceCount!]!
  event: Event!
}

type EventsPagination implements PaginationInterface {
  current_page: Int!
  entries: [Event!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

"""
Autogenerated input type of ForceConfirmSignup
"""
input ForceConfirmSignupInput {
  bucket_key: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of ForceConfirmSignup
"""
type ForceConfirmSignupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup: Signup!
}

type Form {
  event_categories: [EventCategory!]!
  export_json: Json!
  form_api_json: Json! @deprecated(reason: "The old form API export is deprecated; please use the \"form\" field and its subfields instead")
  form_sections: [FormSection!]!
  form_type: FormType!
  id: Int!
  proposal_event_categories: [EventCategory!]!
  title: String!
  user_con_profile_conventions: [Convention!]!
}

input FormInput {
  title: String
}

type FormItem {
  admin_description: String
  default_value: Json
  form_section: FormSection!
  id: Int!
  identifier: String
  item_type: String!
  position: Int
  properties: Json
  public_description: String
  rendered_properties: Json
  visibility: FormItemRole!
  writeability: FormItemRole!
}

input FormItemInput {
  admin_description: String
  default_value: Json
  identifier: String
  item_type: String
  properties: Json
  public_description: String
  visibility: FormItemRole
  writeability: FormItemRole
}

enum FormItemRole {
  admin
  all_profiles_basic_access
  confirmed_attendee
  normal
  team_member
}

type FormResponseChange {
  compacted: Boolean!
  created_at: Date!
  field_identifier: String!
  new_value: Json
  notified_at: Date
  previous_value: Json
  updated_at: Date!
  user_con_profile: UserConProfile!
}

type FormSection {
  form: Form!
  form_items: [FormItem!]!
  id: Int!
  position: Int
  title: String
}

input FormSectionInput {
  title: String
}

enum FormType {
  """
  Event form
  """
  event

  """
  Event proposal form
  """
  event_proposal

  """
  User profile form
  """
  user_con_profile
}

"""
An arbitrary object, serialized as JSON
"""
scalar Json

type LiquidAssign {
  cms_variable_value_json: String
  drop_class_name: String!
  name: String!
}

type MailingLists {
  event_proposers: MailingListsResult!
  team_members: MailingListsResult!
  ticketed_attendees: MailingListsResult!
  users_with_pending_bio: MailingListsResult!
  waitlists: [MailingListsWaitlistsResult!]!
  whos_free(finish: Date!, start: Date!): MailingListsResult!
}

type MailingListsResult {
  emails: [ContactEmail!]!
  metadata_fields: [String!]!
}

type MailingListsWaitlistsResult {
  emails: [ContactEmail!]!
  metadata_fields: [String!]!
  run: Run!
}

"""
Autogenerated input type of MarkOrderPaid
"""
input MarkOrderPaidInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of MarkOrderPaid
"""
type MarkOrderPaidPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order: Order!
}

type MaximumEventProvidedTicketsOverride {
  event: Event!
  id: Int!
  override_value: Int!
  ticket_type: TicketType!
}

"""
Autogenerated input type of MergeUsers
"""
input MergeUsersInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  userIds: [Int!]!
  winningUserConProfiles: [WinningUserConProfileInput!]!
  winningUserId: Int!
}

"""
Autogenerated return type of MergeUsers
"""
type MergeUsersPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}

type Money {
  currency_code: String!
  fractional: Int!
}

input MoneyInput {
  currency_code: String!
  fractional: Int!
}

"""
Autogenerated input type of MoveFormItem
"""
input MoveFormItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  destination_index: Int
  form_section_id: Int!
  id: Int!
}

"""
Autogenerated return type of MoveFormItem
"""
type MoveFormItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_item: FormItem!
  form_section: FormSection!
}

"""
Autogenerated input type of MoveFormSection
"""
input MoveFormSectionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  destination_index: Int!
  id: Int!
}

"""
Autogenerated return type of MoveFormSection
"""
type MoveFormSectionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form: Form!
  form_section: FormSection!
}

type Mutation {
  acceptClickwrapAgreement(
    """
    Parameters for AcceptClickwrapAgreement
    """
    input: AcceptClickwrapAgreementInput!
  ): AcceptClickwrapAgreementPayload
  acceptSignupRequest(
    """
    Parameters for AcceptSignupRequest
    """
    input: AcceptSignupRequestInput!
  ): AcceptSignupRequestPayload
  addOrderEntryToCurrentPendingOrder(
    """
    Parameters for AddOrderEntryToCurrentPendingOrder
    """
    input: AddOrderEntryToCurrentPendingOrderInput!
  ): AddOrderEntryToCurrentPendingOrderPayload
  cancelOrder(
    """
    Parameters for CancelOrder
    """
    input: CancelOrderInput!
  ): CancelOrderPayload
  convertTicketToEventProvided(
    """
    Parameters for ConvertTicketToEventProvided
    """
    input: ConvertTicketToEventProvidedInput!
  ): ConvertTicketToEventProvidedPayload
  createCmsContentGroup(
    """
    Parameters for CreateCmsContentGroup
    """
    input: CreateCmsContentGroupInput!
  ): CreateCmsContentGroupPayload
  createCmsFile(
    """
    Parameters for CreateCmsFile
    """
    input: CreateCmsFileInput!
  ): CreateCmsFilePayload
  createCmsGraphqlQuery(
    """
    Parameters for CreateCmsGraphqlQuery
    """
    input: CreateCmsGraphqlQueryInput!
  ): CreateCmsGraphqlQueryPayload
  createCmsLayout(
    """
    Parameters for CreateCmsLayout
    """
    input: CreateCmsLayoutInput!
  ): CreateCmsLayoutPayload
  createCmsNavigationItem(
    """
    Parameters for CreateCmsNavigationItem
    """
    input: CreateCmsNavigationItemInput!
  ): CreateCmsNavigationItemPayload
  createCmsPartial(
    """
    Parameters for CreateCmsPartial
    """
    input: CreateCmsPartialInput!
  ): CreateCmsPartialPayload
  createConvention(
    """
    Parameters for CreateConvention
    """
    input: CreateConventionInput!
  ): CreateConventionPayload
  createConventionStripeAccount(
    """
    Parameters for CreateConventionStripeAccount
    """
    input: CreateConventionStripeAccountInput!
  ): CreateConventionStripeAccountPayload
  createCoupon(
    """
    Parameters for CreateCoupon
    """
    input: CreateCouponInput!
  ): CreateCouponPayload
  createCouponApplication(
    """
    Parameters for CreateCouponApplication
    """
    input: CreateCouponApplicationInput!
  ): CreateCouponApplicationPayload
  createDepartment(
    """
    Parameters for CreateDepartment
    """
    input: CreateDepartmentInput!
  ): CreateDepartmentPayload
  createEmailRoute(
    """
    Parameters for CreateEmailRoute
    """
    input: CreateEmailRouteInput!
  ): CreateEmailRoutePayload
  createEvent(
    """
    Parameters for CreateEvent
    """
    input: CreateEventInput!
  ): CreateEventPayload
  createEventCategory(
    """
    Parameters for CreateEventCategory
    """
    input: CreateEventCategoryInput!
  ): CreateEventCategoryPayload
  createEventProposal(
    """
    Parameters for CreateEventProposal
    """
    input: CreateEventProposalInput!
  ): CreateEventProposalPayload
  createFillerEvent(
    """
    Parameters for CreateFillerEvent
    """
    input: CreateFillerEventInput!
  ): CreateFillerEventPayload
  createForm(
    """
    Parameters for CreateForm
    """
    input: CreateFormInput!
  ): CreateFormPayload
  createFormItem(
    """
    Parameters for CreateFormItem
    """
    input: CreateFormItemInput!
  ): CreateFormItemPayload
  createFormSection(
    """
    Parameters for CreateFormSection
    """
    input: CreateFormSectionInput!
  ): CreateFormSectionPayload
  createFormWithJSON(
    """
    Parameters for CreateFormWithJSON
    """
    input: CreateFormWithJSONInput!
  ): CreateFormWithJSONPayload
  createMaximumEventProvidedTicketsOverride(
    """
    Parameters for CreateMaximumEventProvidedTicketsOverride
    """
    input: CreateMaximumEventProvidedTicketsOverrideInput!
  ): CreateMaximumEventProvidedTicketsOverridePayload
  createMultipleRuns(
    """
    Parameters for CreateMultipleRuns
    """
    input: CreateMultipleRunsInput!
  ): CreateMultipleRunsPayload
  createMySignup(
    """
    Parameters for CreateMySignup
    """
    input: CreateMySignupInput!
  ): CreateMySignupPayload
  createOrder(
    """
    Parameters for CreateOrder
    """
    input: CreateOrderInput!
  ): CreateOrderPayload
  createOrderEntry(
    """
    Parameters for CreateOrderEntry
    """
    input: CreateOrderEntryInput!
  ): CreateOrderEntryPayload
  createOrganizationRole(
    """
    Parameters for CreateOrganizationRole
    """
    input: CreateOrganizationRoleInput!
  ): CreateOrganizationRolePayload
  createPage(
    """
    Parameters for CreatePage
    """
    input: CreatePageInput!
  ): CreatePagePayload
  createProduct(
    """
    Parameters for CreateProduct
    """
    input: CreateProductInput!
  ): CreateProductPayload
  createRoom(
    """
    Parameters for CreateRoom
    """
    input: CreateRoomInput!
  ): CreateRoomPayload
  createRun(
    """
    Parameters for CreateRun
    """
    input: CreateRunInput!
  ): CreateRunPayload
  createSignupRequest(
    """
    Parameters for CreateSignupRequest
    """
    input: CreateSignupRequestInput!
  ): CreateSignupRequestPayload
  createStaffPosition(
    """
    Parameters for CreateStaffPosition
    """
    input: CreateStaffPositionInput!
  ): CreateStaffPositionPayload
  createTeamMember(
    """
    Parameters for CreateTeamMember
    """
    input: CreateTeamMemberInput!
  ): CreateTeamMemberPayload
  createTicket(
    """
    Parameters for CreateTicket
    """
    input: CreateTicketInput!
  ): CreateTicketPayload
  createTicketType(
    """
    Parameters for CreateTicketType
    """
    input: CreateTicketTypeInput!
  ): CreateTicketTypePayload
  createUserActivityAlert(
    """
    Parameters for CreateUserActivityAlert
    """
    input: CreateUserActivityAlertInput!
  ): CreateUserActivityAlertPayload
  createUserConProfile(
    """
    Parameters for CreateUserConProfile
    """
    input: CreateUserConProfileInput!
  ): CreateUserConProfilePayload
  createUserSignup(
    """
    Parameters for CreateUserSignup
    """
    input: CreateUserSignupInput!
  ): CreateUserSignupPayload
  deleteCmsContentGroup(
    """
    Parameters for DeleteCmsContentGroup
    """
    input: DeleteCmsContentGroupInput!
  ): DeleteCmsContentGroupPayload
  deleteCmsFile(
    """
    Parameters for DeleteCmsFile
    """
    input: DeleteCmsFileInput!
  ): DeleteCmsFilePayload
  deleteCmsGraphqlQuery(
    """
    Parameters for DeleteCmsGraphqlQuery
    """
    input: DeleteCmsGraphqlQueryInput!
  ): DeleteCmsGraphqlQueryPayload
  deleteCmsLayout(
    """
    Parameters for DeleteCmsLayout
    """
    input: DeleteCmsLayoutInput!
  ): DeleteCmsLayoutPayload
  deleteCmsNavigationItem(
    """
    Parameters for DeleteCmsNavigationItem
    """
    input: DeleteCmsNavigationItemInput!
  ): DeleteCmsNavigationItemPayload
  deleteCmsPartial(
    """
    Parameters for DeleteCmsPartial
    """
    input: DeleteCmsPartialInput!
  ): DeleteCmsPartialPayload
  deleteCmsVariable(
    """
    Parameters for DeleteCmsVariable
    """
    input: DeleteCmsVariableInput!
  ): DeleteCmsVariablePayload
  deleteCoupon(
    """
    Parameters for DeleteCoupon
    """
    input: DeleteCouponInput!
  ): DeleteCouponPayload
  deleteCouponApplication(
    """
    Parameters for DeleteCouponApplication
    """
    input: DeleteCouponApplicationInput!
  ): DeleteCouponApplicationPayload
  deleteDepartment(
    """
    Parameters for DeleteDepartment
    """
    input: DeleteDepartmentInput!
  ): DeleteDepartmentPayload
  deleteEmailRoute(
    """
    Parameters for DeleteEmailRoute
    """
    input: DeleteEmailRouteInput!
  ): DeleteEmailRoutePayload
  deleteEventCategory(
    """
    Parameters for DeleteEventCategory
    """
    input: DeleteEventCategoryInput!
  ): DeleteEventCategoryPayload
  deleteEventProposal(
    """
    Parameters for DeleteEventProposal
    """
    input: DeleteEventProposalInput!
  ): DeleteEventProposalPayload
  deleteForm(
    """
    Parameters for DeleteForm
    """
    input: DeleteFormInput!
  ): DeleteFormPayload
  deleteFormItem(
    """
    Parameters for DeleteFormItem
    """
    input: DeleteFormItemInput!
  ): DeleteFormItemPayload
  deleteFormSection(
    """
    Parameters for DeleteFormSection
    """
    input: DeleteFormSectionInput!
  ): DeleteFormSectionPayload
  deleteMaximumEventProvidedTicketsOverride(
    """
    Parameters for DeleteMaximumEventProvidedTicketsOverride
    """
    input: DeleteMaximumEventProvidedTicketsOverrideInput!
  ): DeleteMaximumEventProvidedTicketsOverridePayload
  deleteOrderEntry(
    """
    Parameters for DeleteOrderEntry
    """
    input: DeleteOrderEntryInput!
  ): DeleteOrderEntryPayload
  deleteOrganizationRole(
    """
    Parameters for DeleteOrganizationRole
    """
    input: DeleteOrganizationRoleInput!
  ): DeleteOrganizationRolePayload
  deletePage(
    """
    Parameters for DeletePage
    """
    input: DeletePageInput!
  ): DeletePagePayload
  deleteProduct(
    """
    Parameters for DeleteProduct
    """
    input: DeleteProductInput!
  ): DeleteProductPayload
  deleteRoom(
    """
    Parameters for DeleteRoom
    """
    input: DeleteRoomInput!
  ): DeleteRoomPayload
  deleteRun(
    """
    Parameters for DeleteRun
    """
    input: DeleteRunInput!
  ): DeleteRunPayload
  deleteStaffPosition(
    """
    Parameters for DeleteStaffPosition
    """
    input: DeleteStaffPositionInput!
  ): DeleteStaffPositionPayload
  deleteTeamMember(
    """
    Parameters for DeleteTeamMember
    """
    input: DeleteTeamMemberInput!
  ): DeleteTeamMemberPayload
  deleteTicket(
    """
    Parameters for DeleteTicket
    """
    input: DeleteTicketInput!
  ): DeleteTicketPayload
  deleteTicketType(
    """
    Parameters for DeleteTicketType
    """
    input: DeleteTicketTypeInput!
  ): DeleteTicketTypePayload
  deleteUserActivityAlert(
    """
    Parameters for DeleteUserActivityAlert
    """
    input: DeleteUserActivityAlertInput!
  ): DeleteUserActivityAlertPayload
  deleteUserConProfile(
    """
    Parameters for DeleteUserConProfile
    """
    input: DeleteUserConProfileInput!
  ): DeleteUserConProfilePayload
  dropEvent(
    """
    Parameters for DropEvent
    """
    input: DropEventInput!
  ): DropEventPayload
  forceConfirmSignup(
    """
    Parameters for ForceConfirmSignup
    """
    input: ForceConfirmSignupInput!
  ): ForceConfirmSignupPayload
  markOrderPaid(
    """
    Parameters for MarkOrderPaid
    """
    input: MarkOrderPaidInput!
  ): MarkOrderPaidPayload
  mergeUsers(
    """
    Parameters for MergeUsers
    """
    input: MergeUsersInput!
  ): MergeUsersPayload
  moveFormItem(
    """
    Parameters for MoveFormItem
    """
    input: MoveFormItemInput!
  ): MoveFormItemPayload
  moveFormSection(
    """
    Parameters for MoveFormSection
    """
    input: MoveFormSectionInput!
  ): MoveFormSectionPayload
  provideEventTicket(
    """
    Parameters for ProvideEventTicket
    """
    input: ProvideEventTicketInput!
  ): ProvideEventTicketPayload
  rateEvent(
    """
    Parameters for RateEvent
    """
    input: RateEventInput!
  ): RateEventPayload
  rejectSignupRequest(
    """
    Parameters for RejectSignupRequest
    """
    input: RejectSignupRequestInput!
  ): RejectSignupRequestPayload
  renameCmsFile(
    """
    Parameters for RenameCmsFile
    """
    input: RenameCmsFileInput!
  ): RenameCmsFilePayload
  restoreDroppedEvent(
    """
    Parameters for RestoreDroppedEvent
    """
    input: RestoreDroppedEventInput!
  ): RestoreDroppedEventPayload
  revokeAuthorizedApplication(
    """
    Parameters for RevokeAuthorizedApplication
    """
    input: RevokeAuthorizedApplicationInput!
  ): RevokeAuthorizedApplicationPayload
  setCmsVariable(
    """
    Parameters for SetCmsVariable
    """
    input: SetCmsVariableInput!
  ): SetCmsVariablePayload
  setConventionCanceled(
    """
    Parameters for SetConventionCanceled
    """
    input: SetConventionCanceledInput!
  ): SetConventionCanceledPayload
  sortCmsNavigationItems(
    """
    Parameters for SortCmsNavigationItems
    """
    input: SortCmsNavigationItemsInput!
  ): SortCmsNavigationItemsPayload
  submitEventProposal(
    """
    Parameters for SubmitEventProposal
    """
    input: SubmitEventProposalInput!
  ): SubmitEventProposalPayload
  submitOrder(
    """
    Parameters for SubmitOrder
    """
    input: SubmitOrderInput!
  ): SubmitOrderPayload
  transitionEventProposal(
    """
    Parameters for TransitionEventProposal
    """
    input: TransitionEventProposalInput!
  ): TransitionEventProposalPayload
  updateCmsContentGroup(
    """
    Parameters for UpdateCmsContentGroup
    """
    input: UpdateCmsContentGroupInput!
  ): UpdateCmsContentGroupPayload
  updateCmsGraphqlQuery(
    """
    Parameters for UpdateCmsGraphqlQuery
    """
    input: UpdateCmsGraphqlQueryInput!
  ): UpdateCmsGraphqlQueryPayload
  updateCmsLayout(
    """
    Parameters for UpdateCmsLayout
    """
    input: UpdateCmsLayoutInput!
  ): UpdateCmsLayoutPayload
  updateCmsNavigationItem(
    """
    Parameters for UpdateCmsNavigationItem
    """
    input: UpdateCmsNavigationItemInput!
  ): UpdateCmsNavigationItemPayload
  updateCmsPartial(
    """
    Parameters for UpdateCmsPartial
    """
    input: UpdateCmsPartialInput!
  ): UpdateCmsPartialPayload
  updateConvention(
    """
    Parameters for UpdateConvention
    """
    input: UpdateConventionInput!
  ): UpdateConventionPayload
  updateCoupon(
    """
    Parameters for UpdateCoupon
    """
    input: UpdateCouponInput!
  ): UpdateCouponPayload
  updateDepartment(
    """
    Parameters for UpdateDepartment
    """
    input: UpdateDepartmentInput!
  ): UpdateDepartmentPayload
  updateEmailRoute(
    """
    Parameters for UpdateEmailRoute
    """
    input: UpdateEmailRouteInput!
  ): UpdateEmailRoutePayload
  updateEvent(
    """
    Parameters for UpdateEvent
    """
    input: UpdateEventInput!
  ): UpdateEventPayload
  updateEventAdminNotes(
    """
    Parameters for UpdateEventAdminNotes
    """
    input: UpdateEventAdminNotesInput!
  ): UpdateEventAdminNotesPayload
  updateEventCategory(
    """
    Parameters for UpdateEventCategory
    """
    input: UpdateEventCategoryInput!
  ): UpdateEventCategoryPayload
  updateEventProposal(
    """
    Parameters for UpdateEventProposal
    """
    input: UpdateEventProposalInput!
  ): UpdateEventProposalPayload
  updateEventProposalAdminNotes(
    """
    Parameters for UpdateEventProposalAdminNotes
    """
    input: UpdateEventProposalAdminNotesInput!
  ): UpdateEventProposalAdminNotesPayload
  updateForm(
    """
    Parameters for UpdateForm
    """
    input: UpdateFormInput!
  ): UpdateFormPayload
  updateFormItem(
    """
    Parameters for UpdateFormItem
    """
    input: UpdateFormItemInput!
  ): UpdateFormItemPayload
  updateFormSection(
    """
    Parameters for UpdateFormSection
    """
    input: UpdateFormSectionInput!
  ): UpdateFormSectionPayload
  updateFormWithJSON(
    """
    Parameters for UpdateFormWithJSON
    """
    input: UpdateFormWithJSONInput!
  ): UpdateFormWithJSONPayload
  updateMaximumEventProvidedTicketsOverride(
    """
    Parameters for UpdateMaximumEventProvidedTicketsOverride
    """
    input: UpdateMaximumEventProvidedTicketsOverrideInput!
  ): UpdateMaximumEventProvidedTicketsOverridePayload
  updateNotificationTemplate(
    """
    Parameters for UpdateNotificationTemplate
    """
    input: UpdateNotificationTemplateInput!
  ): UpdateNotificationTemplatePayload
  updateOrder(
    """
    Parameters for UpdateOrder
    """
    input: UpdateOrderInput!
  ): UpdateOrderPayload
  updateOrderEntry(
    """
    Parameters for UpdateOrderEntry
    """
    input: UpdateOrderEntryInput!
  ): UpdateOrderEntryPayload
  updateOrganizationRole(
    """
    Parameters for UpdateOrganizationRole
    """
    input: UpdateOrganizationRoleInput!
  ): UpdateOrganizationRolePayload
  updatePage(
    """
    Parameters for UpdatePage
    """
    input: UpdatePageInput!
  ): UpdatePagePayload
  updateProduct(
    """
    Parameters for UpdateProduct
    """
    input: UpdateProductInput!
  ): UpdateProductPayload
  updateRoom(
    """
    Parameters for UpdateRoom
    """
    input: UpdateRoomInput!
  ): UpdateRoomPayload
  updateRootSite(
    """
    Parameters for UpdateRootSite
    """
    input: UpdateRootSiteInput!
  ): UpdateRootSitePayload
  updateRun(
    """
    Parameters for UpdateRun
    """
    input: UpdateRunInput!
  ): UpdateRunPayload
  updateSignupBucket(
    """
    Parameters for UpdateSignupBucket
    """
    input: UpdateSignupBucketInput!
  ): UpdateSignupBucketPayload
  updateSignupCounted(
    """
    Parameters for UpdateSignupCounted
    """
    input: UpdateSignupCountedInput!
  ): UpdateSignupCountedPayload
  updateStaffPosition(
    """
    Parameters for UpdateStaffPosition
    """
    input: UpdateStaffPositionInput!
  ): UpdateStaffPositionPayload
  updateStaffPositionPermissions(
    """
    Parameters for UpdateStaffPositionPermissions
    """
    input: UpdateStaffPositionPermissionsInput!
  ): UpdateStaffPositionPermissionsPayload
  updateTeamMember(
    """
    Parameters for UpdateTeamMember
    """
    input: UpdateTeamMemberInput!
  ): UpdateTeamMemberPayload
  updateTicket(
    """
    Parameters for UpdateTicket
    """
    input: UpdateTicketInput!
  ): UpdateTicketPayload
  updateTicketType(
    """
    Parameters for UpdateTicketType
    """
    input: UpdateTicketTypeInput!
  ): UpdateTicketTypePayload
  updateUserActivityAlert(
    """
    Parameters for UpdateUserActivityAlert
    """
    input: UpdateUserActivityAlertInput!
  ): UpdateUserActivityAlertPayload
  updateUserConProfile(
    """
    Parameters for UpdateUserConProfile
    """
    input: UpdateUserConProfileInput!
  ): UpdateUserConProfilePayload
  withdrawAllUserConProfileSignups(
    """
    Parameters for WithdrawAllUserConProfileSignups
    """
    input: WithdrawAllUserConProfileSignupsInput!
  ): WithdrawAllUserConProfileSignupsPayload
  withdrawMySignup(
    """
    Parameters for WithdrawMySignup
    """
    input: WithdrawMySignupInput!
  ): WithdrawMySignupPayload
  withdrawSignupRequest(
    """
    Parameters for WithdrawSignupRequest
    """
    input: WithdrawSignupRequestInput!
  ): WithdrawSignupRequestPayload
  withdrawUserSignup(
    """
    Parameters for WithdrawUserSignup
    """
    input: WithdrawUserSignupInput!
  ): WithdrawUserSignupPayload
}

type NotificationDestination {
  id: Int!
  source: NotificationSource!
  staff_position: StaffPosition
  user_con_profile: UserConProfile
}

input NotificationDestinationInput {
  staff_position_id: Int
  user_con_profile_id: Int
}

union NotificationSource = UserActivityAlert

type NotificationTemplate {
  body_html: String
  body_sms: String
  body_text: String
  event_key: String!
  id: Int!
  subject: String
}

input NotificationTemplateInput {
  body_html: String
  body_sms: String
  body_text: String
  subject: String
}

type Order {
  charge_id: String
  coupon_applications: [CouponApplication!]!
  id: Int!
  order_entries: [OrderEntry!]!
  paid_at: Date
  payment_amount: Money
  payment_note: String
  status: OrderStatus!
  submitted_at: Date
  total_price: Money!
  total_price_before_discounts: Money!
  user_con_profile: UserConProfile!
}

"""
An edge in a connection.
"""
type OrderEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Order
}

type OrderEntry {
  describe_products: String!
  id: Int!
  order: Order!
  price: Money!
  price_per_item: Money!
  product: Product!
  product_variant: ProductVariant
  quantity: Int!
}

input OrderEntryInput {
  price_per_item: MoneyInput
  product_id: Int
  product_variant_id: Int
  quantity: Int
  ticket_id: Int
}

input OrderFiltersInput {
  id: String
  status: [String!]
  user_name: String
}

input OrderInput {
  payment_amount: MoneyInput
  payment_note: String
}

type OrderQuantityByStatus {
  quantity: Int!
  status: String!
}

enum OrderStatus {
  """
  Order has been cancelled
  """
  cancelled

  """
  Order has been submitted and paid
  """
  paid

  """
  Order has not yet been submitted
  """
  pending

  """
  Order is submitted but not yet paid
  """
  unpaid
}

"""
The connection type for Order.
"""
type OrdersConnection {
  """
  A list of edges.
  """
  edges: [OrderEdge]

  """
  A list of nodes.
  """
  nodes: [Order]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrdersPagination implements PaginationInterface {
  current_page: Int!
  entries: [Order!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

type Organization {
  conventions: [Convention!]!
  current_ability_can_manage_access: Boolean!
  id: Int!
  name: String!
  organization_roles: [OrganizationRole!]!
}

type OrganizationRole {
  id: Int!
  name: String!
  organization: Organization!
  permissions: [Permission!]!
  users: [User!]!
}

input OrganizationRoleInput {
  name: String
}

type Page {
  admin_notes: String
  cms_layout: CmsLayout
  content: String
  content_html: String!
  current_ability_can_delete: Boolean!
  current_ability_can_update: Boolean!
  hidden_from_search: Boolean!
  id: Int!
  name: String
  referenced_partials: [CmsPartial!]!
  skip_clickwrap_agreement: Boolean
  slug: String
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

input PageInput {
  admin_notes: String
  cms_layout_id: Int
  content: String
  hidden_from_search: Boolean
  name: String
  skip_clickwrap_agreement: Boolean
  slug: String
}

interface PaginationInterface {
  current_page: Int!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

enum PaymentMode {
  free
  later
  now
  payment_intent
}

type Permission {
  id: Int!
  model: PermissionedModel!
  permission: String!
  role: PermissionedRole!
}

input PermissionInput {
  model_id: Int
  model_type: PermissionedModelTypeIndicator
  permission: String!
  role_id: Int
  role_type: PermissionedRoleTypeIndicator
}

union PermissionedModel = CmsContentGroup | Convention | EventCategory

enum PermissionedModelTypeIndicator {
  CmsContentGroup
  Convention
  EventCategory
}

union PermissionedRole = OrganizationRole | StaffPosition

enum PermissionedRoleTypeIndicator {
  OrganizationRole
  StaffPosition
}

enum PricingStrategy {
  """
  Fixed price
  """
  fixed

  """
  Price that changes over time
  """
  scheduled_value
}

type PricingStructure {
  price(time: Date): Money
  pricing_strategy: PricingStrategy!
  value: PricingStructureValue!
}

input PricingStructureInput {
  fixed_value: MoneyInput
  pricing_strategy: PricingStrategy!
  scheduled_value: ScheduledMoneyValueInput
}

union PricingStructureValue = Money | ScheduledMoneyValue

type Product {
  available: Boolean!
  description: String
  description_html: String
  id: Int!
  image_url: String
  name: String!
  order_quantities_by_status: [OrderQuantityByStatus!]!
  payment_options: [String!]!
  price: Money! @deprecated(reason: "Use pricing_structure instead")
  pricing_structure: PricingStructure!
  product_variants: [ProductVariant!]!
  provides_ticket_type: TicketType
}

input ProductInput {
  available: Boolean
  delete_variant_ids: [Int!]
  description: String
  image: Upload
  name: String
  payment_options: [String!]
  pricing_structure: PricingStructureInput
  product_variants: [ProductVariantInput!]
  provides_ticket_type_id: Int
}

type ProductVariant {
  description: String
  description_html: String
  id: Int!
  image_url: String
  name: String!
  order_quantities_by_status: [OrderQuantityByStatus!]!
  override_price: Money @deprecated(reason: "Use override_pricing_structure instead")
  override_pricing_structure: PricingStructure
  position: Int
  product: Product!
}

input ProductVariantInput {
  description: String
  id: Int
  image: Upload
  name: String
  override_pricing_structure: PricingStructureInput
}

"""
Autogenerated input type of ProvideEventTicket
"""
input ProvideEventTicketInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_id: Int!
  ticket_type_id: Int!
  user_con_profile_id: Int!
}

"""
Autogenerated return type of ProvideEventTicket
"""
type ProvideEventTicketPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticket: Ticket!
}

type Query {
  accountFormContentHtml: String

  """
  Returns the convention associated with the domain name of this request.  If one is not \
  present, the request will error out.
  """
  assertConvention: Convention!
  assumedIdentityFromProfile: UserConProfile
  cmsContentGroup(id: Int!): CmsContentGroup!
  cmsContentGroups: [CmsContentGroup!]!
  cmsFiles: [CmsFile!]!
  cmsGraphqlQueries: [CmsGraphqlQuery!]!
  cmsLayouts: [CmsLayout!]!
  cmsNavigationItems: [CmsNavigationItem!]!
  cmsPage(id: Int, rootPage: Boolean, slug: String): Page!
  cmsPages: [Page!]!
  cmsParent: CmsParent!
  cmsPartials: [CmsPartial!]!
  cmsVariables: [CmsVariable!]!

  """
  Returns the convention associated with the domain name of this request, or null if there \
  is none.
  """
  convention: Convention
  conventionById(id: Int!): Convention!
  conventions: [Convention!]!
  conventions_paginated(filters: ConventionFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): ConventionsPagination!
  currentAbility: Ability!
  currentPendingOrder: Order
  currentPendingOrderPaymentIntentClientSecret: String!
  currentUser: User
  effectiveCmsLayout(path: String!): CmsLayout!
  email_routes_paginated(filters: EmailRouteFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): EmailRoutesPagination!
  event(id: Int!): Event!
  eventProposal(id: Int!): EventProposal!
  events(extendedCounts: Boolean, finish: Date, includeDropped: Boolean, start: Date): [Event!]!
  form(id: Int!): Form!
  liquidAssigns: [LiquidAssign!]!
  myAuthorizedApplications: [AuthorizedApplication!]!
  myProfile: UserConProfile
  my_signups: [Signup!]!
  notifierLiquidAssigns(eventKey: String!): [LiquidAssign!]!
  oauthPreAuth(queryParams: Json!): Json!
  organizations: [Organization!]!
  previewFormItem(formItem: FormItemInput!, formSectionId: Int!): FormItem!
  previewLiquid(content: String!): String!
  previewMarkdown(markdown: String!): String!
  previewNotifierLiquid(content: String!, eventKey: String!): String!
  product(id: Int!): Product!
  rootSite: RootSite!
  run(id: Int!): Run!
  runs: [Run!]!
  searchCmsContent(name: String): [CmsContent!]!
  signup(id: Int!): Signup!
  siteSearch(query: String!): SearchResult!
  staffPosition(id: Int!): StaffPosition!
  user(id: Int!): User!
  userConProfile(id: Int!): UserConProfile!
  users(ids: [Int!]!): [User!]!
  users_paginated(filters: UserFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): UsersPagination!
}

"""
Autogenerated input type of RateEvent
"""
input RateEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_id: Int!
  rating: Int!
}

"""
Autogenerated return type of RateEvent
"""
type RateEventPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: Event!
}

enum ReceiveSignupEmail {
  """
  Receive email for all signup activity
  """
  ALL_SIGNUPS

  """
  Do not receive signup email
  """
  NO

  """
  Receive email for signup activity affecting confirmed signups
  """
  NON_WAITLIST_SIGNUPS
}

enum RefundStatus {
  """
  A refund was requested, but the charge had already been refunded
  """
  ALREADY_REFUNDED

  """
  No refund was attempted
  """
  NOT_REFUNDED

  """
  A refund was successfully provided
  """
  REFUNDED
}

type RegistrationPolicy {
  buckets: [RegistrationPolicyBucket!]!
  minimum_slots: Int
  minimum_slots_including_not_counted: Int
  only_uncounted: Boolean
  preferred_slots: Int
  preferred_slots_including_not_counted: Int
  prevent_no_preference_signups: Boolean!
  slots_limited: Boolean
  total_slots: Int
  total_slots_including_not_counted: Int
}

type RegistrationPolicyBucket {
  anything: Boolean!
  description: String
  expose_attendees: Boolean!
  key: String!
  minimum_slots: Int
  name: String
  not_counted: Boolean!
  preferred_slots: Int
  slots_limited: Boolean!
  total_slots: Int
}

"""
Autogenerated input type of RejectSignupRequest
"""
input RejectSignupRequestInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of RejectSignupRequest
"""
type RejectSignupRequestPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup_request: SignupRequest!
}

"""
Autogenerated input type of RenameCmsFile
"""
input RenameCmsFileInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  filename: String!
  id: Int!
}

"""
Autogenerated return type of RenameCmsFile
"""
type RenameCmsFilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_file: CmsFile!
}

"""
Autogenerated input type of RestoreDroppedEvent
"""
input RestoreDroppedEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of RestoreDroppedEvent
"""
type RestoreDroppedEventPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: Event!
}

"""
Autogenerated input type of RevokeAuthorizedApplication
"""
input RevokeAuthorizedApplicationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  uid: ID!
}

"""
Autogenerated return type of RevokeAuthorizedApplication
"""
type RevokeAuthorizedApplicationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

type Room {
  id: Int!
  name: String
  runs: [Run!]!
}

input RoomInput {
  name: String
}

type RootSite {
  default_layout: CmsLayout!
  host: String!
  id: Int!
  root_page: Page!
  site_name: String!
  url: String!
}

input RootSiteInput {
  default_layout_id: Int
  root_page_id: Int
  site_name: String
}

type Run {
  confirmed_limited_signup_count: Int!
  confirmed_signup_count: Int!
  current_ability_can_signup_summary_run: Boolean!
  ends_at: Date!
  event: Event!
  id: Int!
  my_signup_requests: [SignupRequest!]!
  my_signups: [Signup!]!
  not_counted_confirmed_signup_count: Int!
  not_counted_signup_count: Int!
  room_names: [String!]!
  rooms: [Room!]!
  schedule_note: String
  signup_changes_paginated(filters: SignupChangeFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): SignupChangesPagination!
  signup_count_by_state_and_bucket_key_and_counted: Json!
  signups_paginated(filters: SignupFiltersInput, page: Int, per_page: Int, sort: [SortInput]): SignupsPagination!
  starts_at: Date!
  title_suffix: String
  waitlisted_signup_count: Int!
}

input RunInput {
  room_ids: [Int!]
  schedule_note: String
  starts_at: Date
  title_suffix: String
}

type ScheduledMoneyValue {
  timespans: [TimespanWithMoneyValue!]!
}

input ScheduledMoneyValueInput {
  timespans: [TimespanWithMoneyValueInput!]!
}

type ScheduledValue {
  timespans: [TimespanWithValue!]!
}

input ScheduledValueInput {
  timespans: [TimespanWithValueInput!]!
}

enum SchedulingUi {
  recurring
  regular
  single_run
}

type SearchResult {
  entries: [SearchResultEntry!]!
  total_entries: Int!
}

type SearchResultEntry {
  highlight: String
  model: SearchableModel!
  rank: Float!
  title: String
}

union SearchableModel = Event | EventProposal | Page | UserConProfile

"""
Autogenerated input type of SetCmsVariable
"""
input SetCmsVariableInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_variable: CmsVariableInput!
}

"""
Autogenerated return type of SetCmsVariable
"""
type SetCmsVariablePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_variable: CmsVariable!
}

"""
Autogenerated input type of SetConventionCanceled
"""
input SetConventionCanceledInput {
  canceled: Boolean!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of SetConventionCanceled
"""
type SetConventionCanceledPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  convention: Convention!
}

enum ShowSchedule {
  gms
  no
  priv
  yes
}

type Signup {
  age_restrictions_check: String!
  bucket_key: String
  choice: Int
  counted: Boolean!
  created_at: Date!
  id: Int!
  requested_bucket_key: String
  run: Run!
  state: SignupState!
  updated_at: Date!
  user_con_profile: UserConProfile!
  waitlist_position: Int
}

type SignupChange {
  action: SignupChangeAction!
  bucket_key: String
  counted: Boolean!
  created_at: Date!
  id: Int!
  previous_signup_change: SignupChange
  run: Run!
  signup: Signup!
  state: SignupState!
  updated_at: Date!
  user_con_profile: UserConProfile!
}

enum SignupChangeAction {
  accept_signup_request
  admin_create_signup
  change_registration_policy
  self_service_signup
  unknown
  vacancy_fill
  withdraw
}

input SignupChangeFiltersInput {
  action: [String!]
  event_title: String
  name: String
}

type SignupChangesPagination implements PaginationInterface {
  current_page: Int!
  entries: [SignupChange!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

type SignupCountByState {
  count: Int!
  state: SignupState!
}

input SignupFiltersInput {
  bucket: [String!]
  email: String
  name: String
  state: [String!]
}

enum SignupMode {
  """
  Attendees can request signups and signup changes but con staff must approve them
  """
  moderated

  """
  Attendees can sign themselves up for events
  """
  self_service
}

type SignupMoveResult {
  bucket_key: String
  prev_bucket_key: String
  prev_state: SignupState!
  signup: Signup!
  signup_id: Int!
  state: SignupState!
}

type SignupRequest {
  created_at: Date!
  id: Int!
  replace_signup: Signup
  requested_bucket_key: String
  result_signup: Signup
  state: SignupRequestState!
  target_run: Run!
  updated_at: Date!
  updated_by: User!
  user_con_profile: UserConProfile!
}

input SignupRequestFiltersInput {
  state: [SignupRequestState!]
}

enum SignupRequestState {
  """
  The request has been accepted and the requester has been signed up (see the result_signup field for the actual signup)
  """
  accepted

  """
  The request has not yet been reviewed by a moderator
  """
  pending

  """
  The request has been rejected and the requester has not been signed up
  """
  rejected

  """
  The requester withdrew their request before it was accepted or rejected
  """
  withdrawn
}

type SignupRequestsPagination implements PaginationInterface {
  current_page: Int!
  entries: [SignupRequest!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

enum SignupState {
  confirmed
  waitlisted
  withdrawn
}

type SignupsPagination implements PaginationInterface {
  current_page: Int!
  entries: [Signup!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

enum SiteMode {
  """
  Site behaves as a convention with multiple events
  """
  convention

  """
  Site behaves as a series of standalone events
  """
  event_series

  """
  Site behaves as a single standalone event
  """
  single_event
}

"""
Autogenerated input type of SortCmsNavigationItems
"""
input SortCmsNavigationItemsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  sort_items: [UpdateCmsNavigationItemInput!]!
}

"""
Autogenerated return type of SortCmsNavigationItems
"""
type SortCmsNavigationItemsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

input SortInput {
  desc: Boolean!
  field: String!
}

type StaffPosition {
  cc_addresses: [String!]!
  email: String
  email_aliases: [String!]!
  id: Int!
  name: String!
  permissions: [Permission!]!
  user_con_profiles: [UserConProfile!]!
  visible: Boolean
}

input StaffPositionInput {
  cc_addresses: [String!]
  email: String
  email_aliases: [String!]
  name: String
  user_con_profile_ids: [Int!]
  visible: Boolean
}

type StripeAccount {
  account_onboarding_link(base_url: String!): String!
  charges_enabled: Boolean!
  display_name: String
  email: String
  id: ID!
}

"""
Autogenerated input type of SubmitEventProposal
"""
input SubmitEventProposalInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of SubmitEventProposal
"""
type SubmitEventProposalPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_proposal: EventProposal!
}

"""
Autogenerated input type of SubmitOrder
"""
input SubmitOrderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  payment_intent_id: String
  payment_mode: PaymentMode!
  stripe_token: String
}

"""
Autogenerated return type of SubmitOrder
"""
type SubmitOrderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order: Order!
}

type TeamMember {
  display: Boolean! @deprecated(reason: "Use display_team_member instead")
  display_team_member: Boolean!
  email: String
  event: Event!
  id: Int!
  receive_con_email: Boolean!
  receive_signup_email: ReceiveSignupEmail!
  show_email: Boolean!
  user_con_profile: UserConProfile!
}

input TeamMemberInput {
  display_team_member: Boolean
  receive_con_email: Boolean
  receive_signup_email: ReceiveSignupEmail
  show_email: Boolean
}

type Ticket {
  charge_id: String @deprecated(reason: "Use order_entry for payment fields")
  convention: Convention!
  created_at: Date!
  id: Int!
  order_entry: OrderEntry
  payment_amount: Money @deprecated(reason: "Use order_entry for payment fields")
  payment_note: String @deprecated(reason: "Use order_entry for payment fields")
  provided_by_event: Event
  ticket_type: TicketType!
  updated_at: Date!
  user_con_profile: UserConProfile!
}

type TicketCountByTypeAndPaymentAmount {
  count: Int!
  payment_amount: Money!
  ticket_type: TicketType!
}

input TicketInput {
  provided_by_event_id: Int
  ticket_type_id: Int!
}

enum TicketMode {
  """
  Tickets are neither sold nor required in this convention
  """
  disabled

  """
  A valid ticket is required to sign up for events in this convention
  """
  required_for_signup
}

type TicketType {
  allows_event_signups: Boolean!
  convention: Convention!
  counts_towards_convention_maximum: Boolean!
  description: String
  id: Int!
  maximum_event_provided_tickets(event_id: Int): Int!
  name: String!
  pricing_schedule: ScheduledMoneyValue! @deprecated(reason: "Tickets are now provided through products")
  providing_products: [Product!]!
  publicly_available: Boolean! @deprecated(reason: "Tickets are now provided through products")
}

input TicketTypeInput {
  allows_event_signups: Boolean
  counts_towards_convention_maximum: Boolean
  description: String
  maximum_event_provided_tickets: Int
  name: String
  pricing_schedule: ScheduledMoneyValueInput
  publicly_available: Boolean
}

type TimespanWithMoneyValue {
  finish: Date
  start: Date
  value: Money!
}

input TimespanWithMoneyValueInput {
  finish: Date
  start: Date
  value: MoneyInput!
}

type TimespanWithValue {
  finish: Date
  start: Date
  value: String!
}

input TimespanWithValueInput {
  finish: Date
  start: Date
  string_value: String
}

enum TimezoneMode {
  """
  Display dates and times using convention’s local time zone
  """
  convention_local

  """
  Display dates and times using user’s local time zone
  """
  user_local
}

"""
Autogenerated input type of TransitionEventProposal
"""
input TransitionEventProposalInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  drop_event: Boolean
  id: Int!
  status: String!
}

"""
Autogenerated return type of TransitionEventProposal
"""
type TransitionEventProposalPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_proposal: EventProposal!
}

"""
Autogenerated input type of UpdateCmsContentGroup
"""
input UpdateCmsContentGroupInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_content_group: CmsContentGroupInput!
  grant_permissions: [PermissionInput!]
  id: Int!
  revoke_permissions: [PermissionInput!]
}

"""
Autogenerated return type of UpdateCmsContentGroup
"""
type UpdateCmsContentGroupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_content_group: CmsContentGroup!
}

"""
Autogenerated input type of UpdateCmsGraphqlQuery
"""
input UpdateCmsGraphqlQueryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  query: CmsGraphqlQueryInput!
}

"""
Autogenerated return type of UpdateCmsGraphqlQuery
"""
type UpdateCmsGraphqlQueryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  query: CmsGraphqlQuery!
}

"""
Autogenerated input type of UpdateCmsLayout
"""
input UpdateCmsLayoutInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_layout: CmsLayoutInput!
  id: Int!
}

"""
Autogenerated return type of UpdateCmsLayout
"""
type UpdateCmsLayoutPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_layout: CmsLayout!
}

"""
Autogenerated input type of UpdateCmsNavigationItem
"""
input UpdateCmsNavigationItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_navigation_item: CmsNavigationItemInput
  id: Int!
}

"""
Autogenerated return type of UpdateCmsNavigationItem
"""
type UpdateCmsNavigationItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_navigation_item: CmsNavigationItem!
}

"""
Autogenerated input type of UpdateCmsPartial
"""
input UpdateCmsPartialInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_partial: CmsPartialInput!
  id: Int!
}

"""
Autogenerated return type of UpdateCmsPartial
"""
type UpdateCmsPartialPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_partial: CmsPartial!
}

"""
Autogenerated input type of UpdateConvention
"""
input UpdateConventionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  convention: ConventionInput!
  id: Int
}

"""
Autogenerated return type of UpdateConvention
"""
type UpdateConventionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  convention: Convention!
}

"""
Autogenerated input type of UpdateCoupon
"""
input UpdateCouponInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  coupon: CouponInput!
  id: Int!
}

"""
Autogenerated return type of UpdateCoupon
"""
type UpdateCouponPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  coupon: Coupon!
}

"""
Autogenerated input type of UpdateDepartment
"""
input UpdateDepartmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  department: DepartmentInput!
  id: Int!
}

"""
Autogenerated return type of UpdateDepartment
"""
type UpdateDepartmentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  department: Department!
}

"""
Autogenerated input type of UpdateEmailRoute
"""
input UpdateEmailRouteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email_route: EmailRouteInput!
  id: Int!
}

"""
Autogenerated return type of UpdateEmailRoute
"""
type UpdateEmailRoutePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email_route: EmailRoute!
}

"""
Autogenerated input type of UpdateEventAdminNotes
"""
input UpdateEventAdminNotesInput {
  admin_notes: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of UpdateEventAdminNotes
"""
type UpdateEventAdminNotesPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: Event!
}

"""
Autogenerated input type of UpdateEventCategory
"""
input UpdateEventCategoryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_category: EventCategoryInput!
  id: Int!
}

"""
Autogenerated return type of UpdateEventCategory
"""
type UpdateEventCategoryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_category: EventCategory!
}

"""
Autogenerated input type of UpdateEvent
"""
input UpdateEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: EventInput
  id: Int
}

"""
Autogenerated return type of UpdateEvent
"""
type UpdateEventPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: Event!
}

"""
Autogenerated input type of UpdateEventProposalAdminNotes
"""
input UpdateEventProposalAdminNotesInput {
  admin_notes: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of UpdateEventProposalAdminNotes
"""
type UpdateEventProposalAdminNotesPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_proposal: EventProposal!
}

"""
Autogenerated input type of UpdateEventProposal
"""
input UpdateEventProposalInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_proposal: EventProposalInput!
  id: Int!
}

"""
Autogenerated return type of UpdateEventProposal
"""
type UpdateEventProposalPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_proposal: EventProposal!
}

"""
Autogenerated input type of UpdateForm
"""
input UpdateFormInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form: FormInput!
  id: Int!
}

"""
Autogenerated input type of UpdateFormItem
"""
input UpdateFormItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_item: FormItemInput!
  id: Int!
}

"""
Autogenerated return type of UpdateFormItem
"""
type UpdateFormItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_item: FormItem!
}

"""
Autogenerated return type of UpdateForm
"""
type UpdateFormPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form: Form!
}

"""
Autogenerated input type of UpdateFormSection
"""
input UpdateFormSectionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_section: FormSectionInput!
  id: Int!
}

"""
Autogenerated return type of UpdateFormSection
"""
type UpdateFormSectionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_section: FormSection!
}

"""
Autogenerated input type of UpdateFormWithJSON
"""
input UpdateFormWithJSONInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_json: String!
  id: Int!
}

"""
Autogenerated return type of UpdateFormWithJSON
"""
type UpdateFormWithJSONPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form: Form!
}

"""
Autogenerated input type of UpdateMaximumEventProvidedTicketsOverride
"""
input UpdateMaximumEventProvidedTicketsOverrideInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  override_value: Int!
}

"""
Autogenerated return type of UpdateMaximumEventProvidedTicketsOverride
"""
type UpdateMaximumEventProvidedTicketsOverridePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  maximum_event_provided_tickets_override: MaximumEventProvidedTicketsOverride!
}

"""
Autogenerated input type of UpdateNotificationTemplate
"""
input UpdateNotificationTemplateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_key: String!
  notification_template: NotificationTemplateInput!
}

"""
Autogenerated return type of UpdateNotificationTemplate
"""
type UpdateNotificationTemplatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  notification_template: NotificationTemplate!
}

"""
Autogenerated input type of UpdateOrderEntry
"""
input UpdateOrderEntryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  order_entry: OrderEntryInput!
}

"""
Autogenerated return type of UpdateOrderEntry
"""
type UpdateOrderEntryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order_entry: OrderEntry!
}

"""
Autogenerated input type of UpdateOrder
"""
input UpdateOrderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  order: OrderInput!
}

"""
Autogenerated return type of UpdateOrder
"""
type UpdateOrderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order: Order!
}

"""
Autogenerated input type of UpdateOrganizationRole
"""
input UpdateOrganizationRoleInput {
  add_permissions: [PermissionInput!]
  add_user_ids: [Int!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  organization_role: OrganizationRoleInput!
  remove_permission_ids: [Int!]
  remove_user_ids: [Int!]
}

"""
Autogenerated return type of UpdateOrganizationRole
"""
type UpdateOrganizationRolePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  organization_role: OrganizationRole!
}

"""
Autogenerated input type of UpdatePage
"""
input UpdatePageInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  page: PageInput!
}

"""
Autogenerated return type of UpdatePage
"""
type UpdatePagePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  page: Page!
}

"""
Autogenerated input type of UpdateProduct
"""
input UpdateProductInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  product: ProductInput!
}

"""
Autogenerated return type of UpdateProduct
"""
type UpdateProductPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  product: Product!
}

"""
Autogenerated input type of UpdateRoom
"""
input UpdateRoomInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  room: RoomInput!
}

"""
Autogenerated return type of UpdateRoom
"""
type UpdateRoomPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  room: Room!
}

"""
Autogenerated input type of UpdateRootSite
"""
input UpdateRootSiteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  root_site: RootSiteInput!
}

"""
Autogenerated return type of UpdateRootSite
"""
type UpdateRootSitePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  root_site: RootSite!
}

"""
Autogenerated input type of UpdateRun
"""
input UpdateRunInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  run: RunInput!
}

"""
Autogenerated return type of UpdateRun
"""
type UpdateRunPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  run: Run!
}

"""
Autogenerated input type of UpdateSignupBucket
"""
input UpdateSignupBucketInput {
  bucket_key: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of UpdateSignupBucket
"""
type UpdateSignupBucketPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup: Signup!
}

"""
Autogenerated input type of UpdateSignupCounted
"""
input UpdateSignupCountedInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  counted: Boolean!
  id: Int!
}

"""
Autogenerated return type of UpdateSignupCounted
"""
type UpdateSignupCountedPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup: Signup!
}

"""
Autogenerated input type of UpdateStaffPosition
"""
input UpdateStaffPositionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  staff_position: StaffPositionInput!
}

"""
Autogenerated return type of UpdateStaffPosition
"""
type UpdateStaffPositionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  staff_position: StaffPosition!
}

"""
Autogenerated input type of UpdateStaffPositionPermissions
"""
input UpdateStaffPositionPermissionsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  grant_permissions: [PermissionInput!]!
  revoke_permissions: [PermissionInput!]!
  staff_position_id: Int!
}

"""
Autogenerated return type of UpdateStaffPositionPermissions
"""
type UpdateStaffPositionPermissionsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  staff_position: StaffPosition!
}

"""
Autogenerated input type of UpdateTeamMember
"""
input UpdateTeamMemberInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  team_member: TeamMemberInput!
}

"""
Autogenerated return type of UpdateTeamMember
"""
type UpdateTeamMemberPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  team_member: TeamMember!
}

"""
Autogenerated input type of UpdateTicket
"""
input UpdateTicketInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  ticket: TicketInput!
}

"""
Autogenerated return type of UpdateTicket
"""
type UpdateTicketPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticket: Ticket!
}

"""
Autogenerated input type of UpdateTicketType
"""
input UpdateTicketTypeInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  ticket_type: TicketTypeInput!
}

"""
Autogenerated return type of UpdateTicketType
"""
type UpdateTicketTypePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticket_type: TicketType!
}

"""
Autogenerated input type of UpdateUserActivityAlert
"""
input UpdateUserActivityAlertInput {
  add_notification_destinations: [NotificationDestinationInput!]!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  remove_notification_destination_ids: [Int!]!
  user_activity_alert: UserActivityAlertInput!
}

"""
Autogenerated return type of UpdateUserActivityAlert
"""
type UpdateUserActivityAlertPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user_activity_alert: UserActivityAlert!
}

"""
Autogenerated input type of UpdateUserConProfile
"""
input UpdateUserConProfileInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  user_con_profile: UserConProfileInput!
}

"""
Autogenerated return type of UpdateUserConProfile
"""
type UpdateUserConProfilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user_con_profile: UserConProfile!
}

scalar Upload

type User {
  email: String
  event_proposals: [EventProposal!]!
  first_name: String
  id: Int!
  last_name: String
  name: String
  name_inverted: String
  privileges: [String!]
  user_con_profiles: [UserConProfile!]!
}

type UserActivityAlert {
  convention: Convention!
  email: String
  id: Int!
  notification_destinations: [NotificationDestination!]!
  partial_name: String
  trigger_on_ticket_create: Boolean!
  trigger_on_user_con_profile_create: Boolean!
  user: User
}

input UserActivityAlertInput {
  email: String
  partial_name: String
  trigger_on_ticket_create: Boolean
  trigger_on_user_con_profile_create: Boolean
  user_id: Int
}

type UserConProfile {
  ability: Ability
  accepted_clickwrap_agreement: Boolean
  address: String
  best_call_time: String @deprecated(reason: "Daytime phone, evening phone, best time to call, and preferred contact method fields are deprecated in favor of just using the mobile phone and/or email address.  For conventions that used the deprecated fields, they will remain available in form_response_attrs_json.")
  bio: String
  bio_html: String
  bio_name: String
  birth_date: Date
  can_have_bio: Boolean!
  can_override_maximum_event_provided_tickets: Boolean!
  city: String
  convention: Convention!
  country: String
  current_user_form_item_viewer_role: FormItemRole!
  current_user_form_item_writer_role: FormItemRole!
  day_phone: String @deprecated(reason: "Daytime phone, evening phone, best time to call, and preferred contact method fields are deprecated in favor of just using the mobile phone and/or email address.  For conventions that used the deprecated fields, they will remain available in form_response_attrs_json.")
  email: String
  evening_phone: String @deprecated(reason: "Daytime phone, evening phone, best time to call, and preferred contact method fields are deprecated in favor of just using the mobile phone and/or email address.  For conventions that used the deprecated fields, they will remain available in form_response_attrs_json.")
  first_name: String!
  form_response_attrs_json: Json
  form_response_attrs_json_with_rendered_markdown: Json
  gravatar_enabled: Boolean!
  gravatar_url: String!
  ical_secret: String
  id: Int!
  last_name: String!
  mobile_phone: String
  name: String!
  name_inverted: String!
  name_without_nickname: String!
  nickname: String
  order_summary: String!
  orders: [Order!]!
  preferred_contact: String @deprecated(reason: "Daytime phone, evening phone, best time to call, and preferred contact method fields are deprecated in favor of just using the mobile phone and/or email address.  For conventions that used the deprecated fields, they will remain available in form_response_attrs_json.")
  privileges: [String] @deprecated(reason: "Privileges are deprecated in favor of permissions and staff positions")
  show_nickname_in_bio: Boolean
  signup_requests: [SignupRequest!]!
  signups: [Signup!]!
  site_admin: Boolean!
  staff_positions: [StaffPosition!]!
  state: String
  team_members: [TeamMember!]!
  ticket: Ticket
  user: User
  user_id: Int!
  zipcode: String
}

input UserConProfileFiltersInput {
  attending: Boolean
  email: String
  first_name: String
  is_team_member: Boolean
  last_name: String
  name: String
  payment_amount: Float

  """
  DEPRECATED. Privileges are deprecated in favor of permissions and staff positions
  """
  privileges: [String!]
  ticket: [String!]
  ticket_type: [String!]
}

input UserConProfileInput {
  address: String
  best_call_time: String
  bio: String
  birth_date: Date
  city: String
  country: String
  day_phone: String
  evening_phone: String
  first_name: String
  form_response_attrs_json: String
  gravatar_enabled: Boolean
  last_name: String
  nickname: String
  preferred_contact: String
  show_nickname_in_bio: Boolean
  state: String
  zipcode: String
}

type UserConProfilesPagination implements PaginationInterface {
  current_page: Int!
  entries: [UserConProfile!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

input UserFiltersInput {
  email: String
  first_name: String
  last_name: String
  name: String
  privileges: [String!]
}

type UsersPagination implements PaginationInterface {
  current_page: Int!
  entries: [User!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

input WinningUserConProfileInput {
  conventionId: Int!
  userConProfileId: Int!
}

"""
Autogenerated input type of WithdrawAllUserConProfileSignups
"""
input WithdrawAllUserConProfileSignupsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user_con_profile_id: Int!
}

"""
Autogenerated return type of WithdrawAllUserConProfileSignups
"""
type WithdrawAllUserConProfileSignupsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user_con_profile: UserConProfile!
}

"""
Autogenerated input type of WithdrawMySignup
"""
input WithdrawMySignupInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  run_id: Int!
}

"""
Autogenerated return type of WithdrawMySignup
"""
type WithdrawMySignupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup: Signup!
}

"""
Autogenerated input type of WithdrawSignupRequest
"""
input WithdrawSignupRequestInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of WithdrawSignupRequest
"""
type WithdrawSignupRequestPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup_request: SignupRequest!
}

"""
Autogenerated input type of WithdrawUserSignup
"""
input WithdrawUserSignupInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  run_id: Int!
  suppress_notifications: Boolean
  user_con_profile_id: Int!
}

"""
Autogenerated return type of WithdrawUserSignup
"""
type WithdrawUserSignupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup: Signup!
}
