type Ability {
  can_become_user_con_profile(user_con_profile_id: Int!): Boolean!
  can_create_cms_content_groups: Boolean!
  can_create_cms_files: Boolean!
  can_create_cms_graphql_queries: Boolean!
  can_create_cms_layouts: Boolean!
  can_create_cms_navigation_items: Boolean!
  can_create_cms_partials: Boolean!
  can_create_cms_variables: Boolean!
  can_create_pages: Boolean!
  can_create_tickets: Boolean!
  can_create_user_con_profiles: Boolean!
  can_delete_event(event_id: Int!): Boolean!
  can_delete_event_proposal(event_proposal_id: Int!): Boolean!
  can_delete_ticket(ticket_id: Int!): Boolean!
  can_delete_user_con_profile(user_con_profile_id: Int!): Boolean!
  can_force_confirm_signup(signup_id: Int!): Boolean!
  can_list_events: Boolean!
  can_manage_any_cms_content: Boolean!
  can_manage_forms: Boolean!
  can_manage_oauth_applications: Boolean!
  can_manage_rooms: Boolean!
  can_manage_runs: Boolean!
  can_manage_signups: Boolean!
  can_manage_staff_positions: Boolean!
  can_manage_ticket_types: Boolean!
  can_override_maximum_event_provided_tickets: Boolean!
  can_read_admin_notes_on_event_proposal(event_proposal_id: Int!): Boolean!
  can_read_any_mailing_list: Boolean!
  can_read_event_proposals: Boolean!
  can_read_event_signups(event_id: Int!): Boolean!
  can_read_orders: Boolean!
  can_read_organizations: Boolean!
  can_read_reports: Boolean!
  can_read_schedule: Boolean!
  can_read_schedule_with_counts: Boolean!
  can_read_signups: Boolean!
  can_read_user_activity_alerts: Boolean!
  can_read_user_con_profiles: Boolean!
  can_read_users: Boolean!
  can_update_admin_notes_on_event_proposal(event_proposal_id: Int!): Boolean!
  can_update_bucket_signup(signup_id: Int!): Boolean!
  can_update_convention: Boolean!
  can_update_counted_signup(signup_id: Int!): Boolean!
  can_update_event(event_id: Int!): Boolean!
  can_update_event_categories: Boolean!
  can_update_event_proposal(event_proposal_id: Int!): Boolean!
  can_update_notification_templates: Boolean!
  can_update_orders: Boolean!
  can_update_privileges_user_con_profile(user_con_profile_id: Int!): Boolean! @deprecated(reason: "Privileges have been removed in favor of permissions.  This will always return false.")
  can_update_products: Boolean!
  can_update_signup(signup_id: Int!): Boolean!
  can_update_signups: Boolean!
  can_update_ticket(ticket_id: Int!): Boolean!
  can_update_user_con_profile(user_con_profile_id: Int!): Boolean!
}

"""
Autogenerated input type of AcceptClickwrapAgreement
"""
input AcceptClickwrapAgreementInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of AcceptClickwrapAgreement
"""
type AcceptClickwrapAgreementPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  my_profile: UserConProfile!
}

"""
Autogenerated input type of AcceptSignupRequest
"""
input AcceptSignupRequestInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of AcceptSignupRequest
"""
type AcceptSignupRequestPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup: Signup!
  signup_request: SignupRequest!
}

"""
Autogenerated input type of AddOrderEntryToCurrentPendingOrder
"""
input AddOrderEntryToCurrentPendingOrderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order_entry: OrderEntryInput!
}

"""
Autogenerated return type of AddOrderEntryToCurrentPendingOrder
"""
type AddOrderEntryToCurrentPendingOrderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order_entry: OrderEntry!
}

type AuthorizedApplication {
  name: String!
  scopes: [String!]!
  uid: ID!
}

"""
Autogenerated input type of CancelOrder
"""
input CancelOrderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of CancelOrder
"""
type CancelOrderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order: Order!
}

type ChoiceCount {
  choice: Int!
  count: Int!
  state: SignupState!
}

union CmsContent = CmsLayout | CmsPartial | Page

type CmsContentGroup {
  contents: [CmsContent!]!
  current_ability_can_delete: Boolean!
  current_ability_can_update: Boolean!
  id: Int!
  name: String!
  permissions: [Permission!]!
}

input CmsContentGroupInput {
  contents: [CmsContentInput!]
  name: String
}

input CmsContentInput {
  content_type: CmsContentTypeIndicator!
  id: Int!
}

enum CmsContentTypeIndicator {
  CmsLayout
  CmsPartial
  Page
}

type CmsFile {
  content_type: String!
  current_ability_can_delete: Boolean!
  filename: String!
  id: Int!
  size: Int!
  url: String!
}

type CmsGraphqlQuery {
  admin_notes: String
  current_ability_can_delete: Boolean!
  current_ability_can_update: Boolean!
  id: Int!
  identifier: String!
  query: String!
}

input CmsGraphqlQueryInput {
  admin_notes: String
  identifier: String
  query: String
}

type CmsLayout {
  admin_notes: String
  content: String
  content_html(path: String): String
  current_ability_can_delete: Boolean!
  current_ability_can_update: Boolean!
  id: Int!
  name: String
  navbar_classes: String
}

input CmsLayoutInput {
  admin_notes: String
  content: String
  name: String
  navbar_classes: String
}

type CmsNavigationItem {
  id: Int!
  navigation_items: [CmsNavigationItem]
  navigation_section: CmsNavigationItem
  page: Page
  position: Int
  title: String
}

input CmsNavigationItemInput {
  navigation_section_id: Int
  page_id: Int
  position: Int
  title: String
}

union CmsParent = Convention | RootSite

type CmsPartial {
  admin_notes: String
  content: String
  current_ability_can_delete: Boolean!
  current_ability_can_update: Boolean!
  id: Int!
  name: String
}

input CmsPartialInput {
  admin_notes: String
  content: String
  name: String
}

type CmsVariable {
  current_ability_can_delete: Boolean!
  current_ability_can_update: Boolean!
  id: Int!
  key: String!
  value_json: String!
}

input CmsVariableInput {
  key: String!
  value_json: String!
}

type ContactEmail {
  email: String!
  formatted_address: String!
  metadata_json: Json!
  name: String
}

type Convention {
  accepting_proposals: Boolean
  bio_eligible_user_con_profiles: [UserConProfile!]!
  clickwrap_agreement: String
  clickwrap_agreement_html: String
  cms_content_groups: [CmsContentGroup!]!
  cms_layouts: [CmsLayout!]
  cms_navigation_items: [CmsNavigationItem!]
  created_at: Date
  default_layout: CmsLayout
  domain: String
  ends_at: Date
  event_categories(current_ability_can_read_event_proposals: Boolean): [EventCategory!]!
  event_mailing_list_domain: String
  event_proposals_paginated(filters: EventProposalFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): EventProposalsPagination!
  events_paginated(filters: EventFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): EventsPagination!
  forms: [Form!]!
  id: Int!
  mail_privilege_names: [String!]! @deprecated(reason: "Mail privileges have gone away in favor of permissions")
  mailing_lists: MailingLists!
  masked_stripe_secret_key: String
  maximum_event_signups: ScheduledValue
  maximum_tickets: Int
  name: String
  notification_templates: [NotificationTemplate!]!
  orders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): OrdersConnection
  orders_paginated(filters: OrderFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): OrdersPagination!
  organization: Organization
  pages: [Page!]
  pre_schedule_content_html: String
  privilege_names: [String!]! @deprecated(reason: "Privileges have gone away in favor of permissions")
  products: [Product!]
  reports: ConventionReports!
  rooms: [Room!]
  root_page: Page
  show_event_list: ShowSchedule
  show_schedule: ShowSchedule
  signup_counts_by_state: [SignupCountByState!]!
  signup_mode: SignupMode!
  signup_requests_open: Boolean!
  signup_requests_paginated(filters: SignupRequestFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): SignupRequestsPagination!
  signup_spy_paginated(filters: SignupFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): SignupsPagination!
  site_mode: SiteMode!
  staff_positions: [StaffPosition!]
  starts_at: Date
  stripe_publishable_key: String
  ticket_mode: TicketMode!
  ticket_name: String!
  ticket_types: [TicketType!]
  tickets_available_for_purchase: Boolean!
  timezone_name: String
  updated_at: Date
  user_activity_alert(id: Int!): UserActivityAlert!
  user_activity_alerts: [UserActivityAlert]
  user_con_profile_form: Form!
  user_con_profiles_paginated(filters: UserConProfileFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): UserConProfilesPagination!
}

input ConventionInput {
  accepting_proposals: Boolean
  clickwrap_agreement: String
  default_layout_id: Int
  domain: String
  ends_at: Date
  event_mailing_list_domain: String
  maximum_event_signups: ScheduledValueInput
  maximum_tickets: Int
  name: String
  root_page_id: Int
  show_event_list: ShowSchedule
  show_schedule: ShowSchedule
  signup_mode: SignupMode
  signup_requests_open: Boolean
  site_mode: SiteMode
  starts_at: Date
  stripe_publishable_key: String
  stripe_secret_key: String
  ticket_mode: TicketMode
  ticket_name: String
  timezone_name: String
}

type ConventionReports {
  event_provided_tickets: [EventProvidedTicketList!]!
  events_by_choice: [EventWithChoiceCounts!]!
  ticket_count_by_type_and_payment_amount: [TicketCountByTypeAndPaymentAmount!]!
  total_revenue: Money!
}

"""
Autogenerated input type of ConvertTicketToEventProvided
"""
input ConvertTicketToEventProvidedInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_id: Int!
  ticket_type_id: Int!
  user_con_profile_id: Int!
}

"""
Autogenerated return type of ConvertTicketToEventProvided
"""
type ConvertTicketToEventProvidedPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  The ticket we deleted in order to provide a new ticket
  """
  deleted_ticket: Ticket!
  refund_status: RefundStatus!

  """
  The new ticket we just provided
  """
  ticket: Ticket!
}

"""
Autogenerated input type of CreateCmsContentGroup
"""
input CreateCmsContentGroupInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_content_group: CmsContentGroupInput!
  permissions: [PermissionInput!]
}

"""
Autogenerated return type of CreateCmsContentGroup
"""
type CreateCmsContentGroupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_content_group: CmsContentGroup!
}

"""
Autogenerated input type of CreateCmsFile
"""
input CreateCmsFileInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  file: Upload!
}

"""
Autogenerated return type of CreateCmsFile
"""
type CreateCmsFilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_file: CmsFile!
}

"""
Autogenerated input type of CreateCmsGraphqlQuery
"""
input CreateCmsGraphqlQueryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  query: CmsGraphqlQueryInput!
}

"""
Autogenerated return type of CreateCmsGraphqlQuery
"""
type CreateCmsGraphqlQueryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  query: CmsGraphqlQuery!
}

"""
Autogenerated input type of CreateCmsLayout
"""
input CreateCmsLayoutInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_layout: CmsLayoutInput!
}

"""
Autogenerated return type of CreateCmsLayout
"""
type CreateCmsLayoutPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_layout: CmsLayout!
}

"""
Autogenerated input type of CreateCmsNavigationItem
"""
input CreateCmsNavigationItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_navigation_item: CmsNavigationItemInput!
}

"""
Autogenerated return type of CreateCmsNavigationItem
"""
type CreateCmsNavigationItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_navigation_item: CmsNavigationItem!
}

"""
Autogenerated input type of CreateCmsPartial
"""
input CreateCmsPartialInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_partial: CmsPartialInput!
}

"""
Autogenerated return type of CreateCmsPartial
"""
type CreateCmsPartialPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_partial: CmsPartial!
}

"""
Autogenerated input type of CreateEventCategory
"""
input CreateEventCategoryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_category: EventCategoryInput!
}

"""
Autogenerated return type of CreateEventCategory
"""
type CreateEventCategoryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_category: EventCategory!
}

"""
Autogenerated input type of CreateEvent
"""
input CreateEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: EventInput!
}

"""
Autogenerated return type of CreateEvent
"""
type CreateEventPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: Event!
}

"""
Autogenerated input type of CreateEventProposal
"""
input CreateEventProposalInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  clone_event_proposal_id: Int
  event_category_id: Int!
}

"""
Autogenerated return type of CreateEventProposal
"""
type CreateEventProposalPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_proposal: EventProposal!
}

"""
Autogenerated input type of CreateFillerEvent
"""
input CreateFillerEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: EventInput!
  run: RunInput
}

"""
Autogenerated return type of CreateFillerEvent
"""
type CreateFillerEventPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: Event!
}

"""
Autogenerated input type of CreateForm
"""
input CreateFormInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form: FormInput!
  form_type: FormType!
}

"""
Autogenerated input type of CreateFormItem
"""
input CreateFormItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_item: FormItemInput!
  form_section_id: Int
}

"""
Autogenerated return type of CreateFormItem
"""
type CreateFormItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_item: FormItem!
}

"""
Autogenerated return type of CreateForm
"""
type CreateFormPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form: Form!
}

"""
Autogenerated input type of CreateFormSection
"""
input CreateFormSectionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_id: Int
  form_section: FormSectionInput!
}

"""
Autogenerated return type of CreateFormSection
"""
type CreateFormSectionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_section: FormSection!
}

"""
Autogenerated input type of CreateFormWithJSON
"""
input CreateFormWithJSONInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_json: String!
  form_type: FormType!
}

"""
Autogenerated return type of CreateFormWithJSON
"""
type CreateFormWithJSONPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form: Form!
}

"""
Autogenerated input type of CreateMaximumEventProvidedTicketsOverride
"""
input CreateMaximumEventProvidedTicketsOverrideInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_id: Int!
  override_value: Int!
  ticket_type_id: Int!
}

"""
Autogenerated return type of CreateMaximumEventProvidedTicketsOverride
"""
type CreateMaximumEventProvidedTicketsOverridePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  maximum_event_provided_tickets_override: MaximumEventProvidedTicketsOverride!
}

"""
Autogenerated input type of CreateMultipleRuns
"""
input CreateMultipleRunsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_id: Int!
  runs: [RunInput!]!
}

"""
Autogenerated return type of CreateMultipleRuns
"""
type CreateMultipleRunsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  runs: [Run!]!
}

"""
Autogenerated input type of CreateMySignup
"""
input CreateMySignupInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  no_requested_bucket: Boolean
  requested_bucket_key: String
  run_id: Int!
}

"""
Autogenerated return type of CreateMySignup
"""
type CreateMySignupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup: Signup!
}

"""
Autogenerated input type of CreateOrganizationRole
"""
input CreateOrganizationRoleInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  organization_id: Int!
  organization_role: OrganizationRoleInput!
  permissions: [PermissionInput!]!
  user_ids: [Int!]!
}

"""
Autogenerated return type of CreateOrganizationRole
"""
type CreateOrganizationRolePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  organization_role: OrganizationRole!
}

"""
Autogenerated input type of CreatePage
"""
input CreatePageInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  page: PageInput!
}

"""
Autogenerated return type of CreatePage
"""
type CreatePagePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  page: Page!
}

"""
Autogenerated input type of CreateProduct
"""
input CreateProductInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  product: ProductInput!
}

"""
Autogenerated return type of CreateProduct
"""
type CreateProductPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  product: Product!
}

"""
Autogenerated input type of CreateRoom
"""
input CreateRoomInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  room: RoomInput!
}

"""
Autogenerated return type of CreateRoom
"""
type CreateRoomPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  room: Room!
}

"""
Autogenerated input type of CreateRun
"""
input CreateRunInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_id: Int!
  run: RunInput!
}

"""
Autogenerated return type of CreateRun
"""
type CreateRunPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  run: Run!
}

"""
Autogenerated input type of CreateSignupRequest
"""
input CreateSignupRequestInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  replace_signup_id: Int
  requested_bucket_key: String
  target_run_id: Int!
}

"""
Autogenerated return type of CreateSignupRequest
"""
type CreateSignupRequestPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup_request: SignupRequest!
}

"""
Autogenerated input type of CreateStaffPosition
"""
input CreateStaffPositionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  staff_position: StaffPositionInput!
}

"""
Autogenerated return type of CreateStaffPosition
"""
type CreateStaffPositionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  staff_position: StaffPosition!
}

"""
Autogenerated input type of CreateTeamMember
"""
input CreateTeamMemberInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_id: Int!
  provide_ticket_type_id: Int
  team_member: TeamMemberInput!
  user_con_profile_id: Int!
}

"""
Autogenerated return type of CreateTeamMember
"""
type CreateTeamMemberPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  converted_signups: [Signup!]!
  move_results: [SignupMoveResult!]!
  team_member: TeamMember!
  ticket: Ticket
}

"""
Autogenerated input type of CreateTicket
"""
input CreateTicketInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticket: TicketInput!
  user_con_profile_id: Int!
}

"""
Autogenerated return type of CreateTicket
"""
type CreateTicketPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticket: Ticket!
}

"""
Autogenerated input type of CreateTicketType
"""
input CreateTicketTypeInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticket_type: TicketTypeInput!
}

"""
Autogenerated return type of CreateTicketType
"""
type CreateTicketTypePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticket_type: TicketType!
}

"""
Autogenerated input type of CreateUserActivityAlert
"""
input CreateUserActivityAlertInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  notification_destinations: [NotificationDestinationInput!]!
  user_activity_alert: UserActivityAlertInput!
}

"""
Autogenerated return type of CreateUserActivityAlert
"""
type CreateUserActivityAlertPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user_activity_alert: UserActivityAlert!
}

"""
Autogenerated input type of CreateUserConProfile
"""
input CreateUserConProfileInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user_con_profile: UserConProfileInput!
  user_id: Int!
}

"""
Autogenerated return type of CreateUserConProfile
"""
type CreateUserConProfilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user_con_profile: UserConProfile!
}

"""
Autogenerated input type of CreateUserSignup
"""
input CreateUserSignupInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  no_requested_bucket: Boolean
  requested_bucket_key: String
  run_id: Int!
  suppress_notifications: Boolean
  user_con_profile_id: Int!
}

"""
Autogenerated return type of CreateUserSignup
"""
type CreateUserSignupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup: Signup!
}

"""
Date in ISO8601 format
"""
scalar Date

"""
Autogenerated input type of DeleteCmsContentGroup
"""
input DeleteCmsContentGroupInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteCmsContentGroup
"""
type DeleteCmsContentGroupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_content_group: CmsContentGroup!
}

"""
Autogenerated input type of DeleteCmsFile
"""
input DeleteCmsFileInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteCmsFile
"""
type DeleteCmsFilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_file: CmsFile!
}

"""
Autogenerated input type of DeleteCmsGraphqlQuery
"""
input DeleteCmsGraphqlQueryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteCmsGraphqlQuery
"""
type DeleteCmsGraphqlQueryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  query: CmsGraphqlQuery!
}

"""
Autogenerated input type of DeleteCmsLayout
"""
input DeleteCmsLayoutInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteCmsLayout
"""
type DeleteCmsLayoutPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_layout: CmsLayout!
}

"""
Autogenerated input type of DeleteCmsNavigationItem
"""
input DeleteCmsNavigationItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteCmsNavigationItem
"""
type DeleteCmsNavigationItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_navigation_item: CmsNavigationItem!
}

"""
Autogenerated input type of DeleteCmsPartial
"""
input DeleteCmsPartialInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteCmsPartial
"""
type DeleteCmsPartialPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_partial: CmsPartial!
}

"""
Autogenerated input type of DeleteCmsVariable
"""
input DeleteCmsVariableInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  key: String!
}

"""
Autogenerated return type of DeleteCmsVariable
"""
type DeleteCmsVariablePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_variable: CmsVariable!
}

"""
Autogenerated input type of DeleteEventCategory
"""
input DeleteEventCategoryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteEventCategory
"""
type DeleteEventCategoryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_category: EventCategory!
}

"""
Autogenerated input type of DeleteEventProposal
"""
input DeleteEventProposalInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteEventProposal
"""
type DeleteEventProposalPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_proposal: EventProposal!
}

"""
Autogenerated input type of DeleteForm
"""
input DeleteFormInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated input type of DeleteFormItem
"""
input DeleteFormItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteFormItem
"""
type DeleteFormItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DeleteForm
"""
type DeleteFormPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form: Form!
}

"""
Autogenerated input type of DeleteFormSection
"""
input DeleteFormSectionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteFormSection
"""
type DeleteFormSectionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of DeleteMaximumEventProvidedTicketsOverride
"""
input DeleteMaximumEventProvidedTicketsOverrideInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteMaximumEventProvidedTicketsOverride
"""
type DeleteMaximumEventProvidedTicketsOverridePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  maximum_event_provided_tickets_override: MaximumEventProvidedTicketsOverride!
}

"""
Autogenerated input type of DeleteOrderEntry
"""
input DeleteOrderEntryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteOrderEntry
"""
type DeleteOrderEntryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order_entry: OrderEntry!
}

"""
Autogenerated input type of DeleteOrganizationRole
"""
input DeleteOrganizationRoleInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteOrganizationRole
"""
type DeleteOrganizationRolePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of DeletePage
"""
input DeletePageInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeletePage
"""
type DeletePagePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  page: Page!
}

"""
Autogenerated input type of DeleteProduct
"""
input DeleteProductInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteProduct
"""
type DeleteProductPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  product: Product!
}

"""
Autogenerated input type of DeleteRoom
"""
input DeleteRoomInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteRoom
"""
type DeleteRoomPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  room: Room!
}

"""
Autogenerated input type of DeleteRun
"""
input DeleteRunInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteRun
"""
type DeleteRunPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  run: Run!
}

"""
Autogenerated input type of DeleteStaffPosition
"""
input DeleteStaffPositionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteStaffPosition
"""
type DeleteStaffPositionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  staff_position: StaffPosition!
}

"""
Autogenerated input type of DeleteTeamMember
"""
input DeleteTeamMemberInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteTeamMember
"""
type DeleteTeamMemberPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  team_member: TeamMember!
}

"""
Autogenerated input type of DeleteTicket
"""
input DeleteTicketInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  refund: Boolean
}

"""
Autogenerated return type of DeleteTicket
"""
type DeleteTicketPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticket: Ticket!
}

"""
Autogenerated input type of DeleteTicketType
"""
input DeleteTicketTypeInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteTicketType
"""
type DeleteTicketTypePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticket_type: TicketType!
}

"""
Autogenerated input type of DeleteUserActivityAlert
"""
input DeleteUserActivityAlertInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteUserActivityAlert
"""
type DeleteUserActivityAlertPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user_activity_alert: UserActivityAlert!
}

"""
Autogenerated input type of DeleteUserConProfile
"""
input DeleteUserConProfileInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteUserConProfile
"""
type DeleteUserConProfilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user_con_profile: UserConProfile!
}

"""
Autogenerated input type of DropEvent
"""
input DropEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DropEvent
"""
type DropEventPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: Event!
}

type Event {
  admin_notes: String
  age_restrictions: String
  author: String
  can_play_concurrently: Boolean
  can_provide_tickets: Boolean! @deprecated(reason: "Plaese use event_category.can_provide_tickets instead")
  category: String! @deprecated(reason: "Please use event_category instead")
  con_mail_destination: String
  content_warnings: String
  created_at: Date
  description: String
  description_html: String
  email: String
  event_category: EventCategory!
  form: Form
  form_response_attrs_json: Json
  form_response_attrs_json_with_rendered_markdown: Json
  form_response_changes: [FormResponseChange!]!
  id: Int!
  length_seconds: Int
  maximum_event_provided_tickets_overrides: [MaximumEventProvidedTicketsOverride!]!
  my_rating: Int
  organization: String
  participant_communications: String
  private_signup_list: Boolean
  provided_tickets: [Ticket!]!
  registration_policy: RegistrationPolicy
  run(id: Int!): Run!
  runs(excludeConflicts: Boolean, finish: Date, start: Date): [Run!]!
  short_blurb: String
  short_blurb_html: String
  slots_limited: Boolean
  status: String
  team_member_name: String! @deprecated(reason: "Please use event_category.team_member_name instead")
  team_members: [TeamMember!]!
  title: String
  total_slots: Int
  url: String
}

type EventCategory {
  can_provide_tickets: Boolean!
  convention: Convention!
  default_color: String
  event_form: Form!
  event_proposal_form: Form
  events_paginated(filters: EventFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): EventsPagination!
  full_color: String
  id: Int!
  name: String!
  proposable: Boolean!
  scheduling_ui: SchedulingUi!
  signed_up_color: String
  team_member_name: String!
}

input EventCategoryInput {
  can_provide_tickets: Boolean
  default_color: String
  event_form_id: Int
  event_proposal_form_id: Int
  full_color: String
  name: String
  scheduling_ui: SchedulingUi
  signed_up_color: String
  team_member_name: String
}

input EventFiltersInput {
  category: [Int]
  my_rating: [Int!]
  title: String
  title_prefix: String
}

input EventInput {
  event_category_id: Int
  form_response_attrs_json: String
}

type EventProposal {
  admin_notes: String
  convention: Convention!
  created_at: Date!
  event: Event
  event_category: EventCategory!
  form_response_attrs_json: String
  form_response_changes: [FormResponseChange!]!
  id: Int!
  length_seconds: Int
  owner: UserConProfile!
  registration_policy: RegistrationPolicy
  status: String!
  submitted_at: Date!
  title: String
  updated_at: Date!
}

input EventProposalFiltersInput {
  event_category: [Int]
  owner: String
  status: [String]
  title: String
}

input EventProposalInput {
  form_response_attrs_json: String
}

type EventProposalsPagination implements PaginationInterface {
  current_page: Int!
  entries: [EventProposal!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

type EventProvidedTicketList {
  provided_by_event: Event!
  tickets: [Ticket!]!
}

type EventWithChoiceCounts {
  choice_counts: [ChoiceCount!]!
  event: Event!
}

type EventsPagination implements PaginationInterface {
  current_page: Int!
  entries: [Event!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

"""
Autogenerated input type of ForceConfirmSignup
"""
input ForceConfirmSignupInput {
  bucket_key: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of ForceConfirmSignup
"""
type ForceConfirmSignupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup: Signup!
}

type Form {
  event_categories: [EventCategory!]!
  export_json: Json!
  form_api_json: Json!
  form_sections: [FormSection!]!
  form_type: FormType!
  id: Int!
  proposal_event_categories: [EventCategory!]!
  title: String!
  user_con_profile_conventions: [Convention!]!
}

input FormInput {
  title: String
}

type FormItem {
  admin_description: String
  default_value: Json
  form_section: FormSection!
  id: Int!
  identifier: String
  item_type: String
  position: Int
  properties: Json
  public_description: String
  rendered_properties: Json
}

input FormItemInput {
  admin_description: String
  default_value: Json
  identifier: String
  item_type: String
  properties: Json
  public_description: String
}

type FormResponseChange {
  compacted: Boolean!
  created_at: Date!
  field_identifier: String!
  new_value: Json
  notified_at: Date
  previous_value: Json
  updated_at: Date!
  user_con_profile: UserConProfile!
}

type FormSection {
  form: Form!
  form_items: [FormItem!]!
  id: Int!
  position: Int
  title: String
}

input FormSectionInput {
  title: String
}

enum FormType {
  """
  Event form
  """
  event

  """
  Event proposal form
  """
  event_proposal

  """
  User profile form
  """
  user_con_profile
}

"""
An arbitrary object, serialized as JSON
"""
scalar Json

type LiquidAssign {
  cms_variable_value_json: String
  drop_class_name: String!
  name: String!
}

type MailingLists {
  event_proposers: MailingListsResult!
  team_members: MailingListsResult!
  ticketed_attendees: MailingListsResult!
  users_with_pending_bio: MailingListsResult!
  waitlists: [MailingListsWaitlistsResult!]!
  whos_free(finish: Date!, start: Date!): MailingListsResult!
}

type MailingListsResult {
  emails: [ContactEmail!]!
  metadata_fields: [String!]!
}

type MailingListsWaitlistsResult {
  emails: [ContactEmail!]!
  metadata_fields: [String!]!
  run: Run!
}

"""
Autogenerated input type of MarkOrderPaid
"""
input MarkOrderPaidInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of MarkOrderPaid
"""
type MarkOrderPaidPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order: Order!
}

type MaximumEventProvidedTicketsOverride {
  event: Event!
  id: Int!
  override_value: Int!
  ticket_type: TicketType!
}

"""
Autogenerated input type of MergeUsers
"""
input MergeUsersInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  userIds: [Int!]!
  winningUserConProfiles: [WinningUserConProfileInput!]!
  winningUserId: Int!
}

"""
Autogenerated return type of MergeUsers
"""
type MergeUsersPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}

type Money {
  currency_code: String!
  fractional: Int!
}

input MoneyInput {
  currency_code: String!
  fractional: Int!
}

"""
Autogenerated input type of MoveFormItem
"""
input MoveFormItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  destination_index: Int
  form_section_id: Int!
  id: Int!
}

"""
Autogenerated return type of MoveFormItem
"""
type MoveFormItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_item: FormItem!
  form_section: FormSection!
}

"""
Autogenerated input type of MoveFormSection
"""
input MoveFormSectionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  destination_index: Int!
  id: Int!
}

"""
Autogenerated return type of MoveFormSection
"""
type MoveFormSectionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form: Form!
  form_section: FormSection!
}

type Mutation {
  acceptClickwrapAgreement(input: AcceptClickwrapAgreementInput!): AcceptClickwrapAgreementPayload
  acceptSignupRequest(input: AcceptSignupRequestInput!): AcceptSignupRequestPayload
  addOrderEntryToCurrentPendingOrder(input: AddOrderEntryToCurrentPendingOrderInput!): AddOrderEntryToCurrentPendingOrderPayload
  cancelOrder(input: CancelOrderInput!): CancelOrderPayload
  convertTicketToEventProvided(input: ConvertTicketToEventProvidedInput!): ConvertTicketToEventProvidedPayload
  createCmsContentGroup(input: CreateCmsContentGroupInput!): CreateCmsContentGroupPayload
  createCmsFile(input: CreateCmsFileInput!): CreateCmsFilePayload
  createCmsGraphqlQuery(input: CreateCmsGraphqlQueryInput!): CreateCmsGraphqlQueryPayload
  createCmsLayout(input: CreateCmsLayoutInput!): CreateCmsLayoutPayload
  createCmsNavigationItem(input: CreateCmsNavigationItemInput!): CreateCmsNavigationItemPayload
  createCmsPartial(input: CreateCmsPartialInput!): CreateCmsPartialPayload
  createEvent(input: CreateEventInput!): CreateEventPayload
  createEventCategory(input: CreateEventCategoryInput!): CreateEventCategoryPayload
  createEventProposal(input: CreateEventProposalInput!): CreateEventProposalPayload
  createFillerEvent(input: CreateFillerEventInput!): CreateFillerEventPayload
  createForm(input: CreateFormInput!): CreateFormPayload
  createFormItem(input: CreateFormItemInput!): CreateFormItemPayload
  createFormSection(input: CreateFormSectionInput!): CreateFormSectionPayload
  createFormWithJSON(input: CreateFormWithJSONInput!): CreateFormWithJSONPayload
  createMaximumEventProvidedTicketsOverride(input: CreateMaximumEventProvidedTicketsOverrideInput!): CreateMaximumEventProvidedTicketsOverridePayload
  createMultipleRuns(input: CreateMultipleRunsInput!): CreateMultipleRunsPayload
  createMySignup(input: CreateMySignupInput!): CreateMySignupPayload
  createOrganizationRole(input: CreateOrganizationRoleInput!): CreateOrganizationRolePayload
  createPage(input: CreatePageInput!): CreatePagePayload
  createProduct(input: CreateProductInput!): CreateProductPayload
  createRoom(input: CreateRoomInput!): CreateRoomPayload
  createRun(input: CreateRunInput!): CreateRunPayload
  createSignupRequest(input: CreateSignupRequestInput!): CreateSignupRequestPayload
  createStaffPosition(input: CreateStaffPositionInput!): CreateStaffPositionPayload
  createTeamMember(input: CreateTeamMemberInput!): CreateTeamMemberPayload
  createTicket(input: CreateTicketInput!): CreateTicketPayload
  createTicketType(input: CreateTicketTypeInput!): CreateTicketTypePayload
  createUserActivityAlert(input: CreateUserActivityAlertInput!): CreateUserActivityAlertPayload
  createUserConProfile(input: CreateUserConProfileInput!): CreateUserConProfilePayload
  createUserSignup(input: CreateUserSignupInput!): CreateUserSignupPayload
  deleteCmsContentGroup(input: DeleteCmsContentGroupInput!): DeleteCmsContentGroupPayload
  deleteCmsFile(input: DeleteCmsFileInput!): DeleteCmsFilePayload
  deleteCmsGraphqlQuery(input: DeleteCmsGraphqlQueryInput!): DeleteCmsGraphqlQueryPayload
  deleteCmsLayout(input: DeleteCmsLayoutInput!): DeleteCmsLayoutPayload
  deleteCmsNavigationItem(input: DeleteCmsNavigationItemInput!): DeleteCmsNavigationItemPayload
  deleteCmsPartial(input: DeleteCmsPartialInput!): DeleteCmsPartialPayload
  deleteCmsVariable(input: DeleteCmsVariableInput!): DeleteCmsVariablePayload
  deleteEventCategory(input: DeleteEventCategoryInput!): DeleteEventCategoryPayload
  deleteEventProposal(input: DeleteEventProposalInput!): DeleteEventProposalPayload
  deleteForm(input: DeleteFormInput!): DeleteFormPayload
  deleteFormItem(input: DeleteFormItemInput!): DeleteFormItemPayload
  deleteFormSection(input: DeleteFormSectionInput!): DeleteFormSectionPayload
  deleteMaximumEventProvidedTicketsOverride(input: DeleteMaximumEventProvidedTicketsOverrideInput!): DeleteMaximumEventProvidedTicketsOverridePayload
  deleteOrderEntry(input: DeleteOrderEntryInput!): DeleteOrderEntryPayload
  deleteOrganizationRole(input: DeleteOrganizationRoleInput!): DeleteOrganizationRolePayload
  deletePage(input: DeletePageInput!): DeletePagePayload
  deleteProduct(input: DeleteProductInput!): DeleteProductPayload
  deleteRoom(input: DeleteRoomInput!): DeleteRoomPayload
  deleteRun(input: DeleteRunInput!): DeleteRunPayload
  deleteStaffPosition(input: DeleteStaffPositionInput!): DeleteStaffPositionPayload
  deleteTeamMember(input: DeleteTeamMemberInput!): DeleteTeamMemberPayload
  deleteTicket(input: DeleteTicketInput!): DeleteTicketPayload
  deleteTicketType(input: DeleteTicketTypeInput!): DeleteTicketTypePayload
  deleteUserActivityAlert(input: DeleteUserActivityAlertInput!): DeleteUserActivityAlertPayload
  deleteUserConProfile(input: DeleteUserConProfileInput!): DeleteUserConProfilePayload
  dropEvent(input: DropEventInput!): DropEventPayload
  forceConfirmSignup(input: ForceConfirmSignupInput!): ForceConfirmSignupPayload
  markOrderPaid(input: MarkOrderPaidInput!): MarkOrderPaidPayload
  mergeUsers(input: MergeUsersInput!): MergeUsersPayload
  moveFormItem(input: MoveFormItemInput!): MoveFormItemPayload
  moveFormSection(input: MoveFormSectionInput!): MoveFormSectionPayload
  provideEventTicket(input: ProvideEventTicketInput!): ProvideEventTicketPayload
  purchaseTicket(input: PurchaseTicketInput!): PurchaseTicketPayload
  rateEvent(input: RateEventInput!): RateEventPayload
  rejectSignupRequest(input: RejectSignupRequestInput!): RejectSignupRequestPayload
  renameCmsFile(input: RenameCmsFileInput!): RenameCmsFilePayload
  restoreDroppedEvent(input: RestoreDroppedEventInput!): RestoreDroppedEventPayload
  revokeAuthorizedApplication(input: RevokeAuthorizedApplicationInput!): RevokeAuthorizedApplicationPayload
  setCmsVariable(input: SetCmsVariableInput!): SetCmsVariablePayload
  sortCmsNavigationItems(input: SortCmsNavigationItemsInput!): SortCmsNavigationItemsPayload
  submitEventProposal(input: SubmitEventProposalInput!): SubmitEventProposalPayload
  submitOrder(input: SubmitOrderInput!): SubmitOrderPayload
  transitionEventProposal(input: TransitionEventProposalInput!): TransitionEventProposalPayload
  updateCmsContentGroup(input: UpdateCmsContentGroupInput!): UpdateCmsContentGroupPayload
  updateCmsGraphqlQuery(input: UpdateCmsGraphqlQueryInput!): UpdateCmsGraphqlQueryPayload
  updateCmsLayout(input: UpdateCmsLayoutInput!): UpdateCmsLayoutPayload
  updateCmsNavigationItem(input: UpdateCmsNavigationItemInput!): UpdateCmsNavigationItemPayload
  updateCmsPartial(input: UpdateCmsPartialInput!): UpdateCmsPartialPayload
  updateConvention(input: UpdateConventionInput!): UpdateConventionPayload
  updateEvent(input: UpdateEventInput!): UpdateEventPayload
  updateEventAdminNotes(input: UpdateEventAdminNotesInput!): UpdateEventAdminNotesPayload
  updateEventCategory(input: UpdateEventCategoryInput!): UpdateEventCategoryPayload
  updateEventProposal(input: UpdateEventProposalInput!): UpdateEventProposalPayload
  updateEventProposalAdminNotes(input: UpdateEventProposalAdminNotesInput!): UpdateEventProposalAdminNotesPayload
  updateForm(input: UpdateFormInput!): UpdateFormPayload
  updateFormItem(input: UpdateFormItemInput!): UpdateFormItemPayload
  updateFormSection(input: UpdateFormSectionInput!): UpdateFormSectionPayload
  updateFormWithJSON(input: UpdateFormWithJSONInput!): UpdateFormWithJSONPayload
  updateMaximumEventProvidedTicketsOverride(input: UpdateMaximumEventProvidedTicketsOverrideInput!): UpdateMaximumEventProvidedTicketsOverridePayload
  updateNotificationTemplate(input: UpdateNotificationTemplateInput!): UpdateNotificationTemplatePayload
  updateOrder(input: UpdateOrderInput!): UpdateOrderPayload
  updateOrderEntry(input: UpdateOrderEntryInput!): UpdateOrderEntryPayload
  updateOrganizationRole(input: UpdateOrganizationRoleInput!): UpdateOrganizationRolePayload
  updatePage(input: UpdatePageInput!): UpdatePagePayload
  updateProduct(input: UpdateProductInput!): UpdateProductPayload
  updateRoom(input: UpdateRoomInput!): UpdateRoomPayload
  updateRootSite(input: UpdateRootSiteInput!): UpdateRootSitePayload
  updateRun(input: UpdateRunInput!): UpdateRunPayload
  updateSignupBucket(input: UpdateSignupBucketInput!): UpdateSignupBucketPayload
  updateSignupCounted(input: UpdateSignupCountedInput!): UpdateSignupCountedPayload
  updateStaffPosition(input: UpdateStaffPositionInput!): UpdateStaffPositionPayload
  updateStaffPositionPermissions(input: UpdateStaffPositionPermissionsInput!): UpdateStaffPositionPermissionsPayload
  updateTeamMember(input: UpdateTeamMemberInput!): UpdateTeamMemberPayload
  updateTicket(input: UpdateTicketInput!): UpdateTicketPayload
  updateTicketType(input: UpdateTicketTypeInput!): UpdateTicketTypePayload
  updateUserActivityAlert(input: UpdateUserActivityAlertInput!): UpdateUserActivityAlertPayload
  updateUserConProfile(input: UpdateUserConProfileInput!): UpdateUserConProfilePayload
  withdrawAllUserConProfileSignups(input: WithdrawAllUserConProfileSignupsInput!): WithdrawAllUserConProfileSignupsPayload
  withdrawMySignup(input: WithdrawMySignupInput!): WithdrawMySignupPayload
  withdrawSignupRequest(input: WithdrawSignupRequestInput!): WithdrawSignupRequestPayload
  withdrawUserSignup(input: WithdrawUserSignupInput!): WithdrawUserSignupPayload
}

type NotificationDestination {
  id: Int!
  source: NotificationSource!
  staff_position: StaffPosition
  user_con_profile: UserConProfile
}

input NotificationDestinationInput {
  staff_position_id: Int
  user_con_profile_id: Int
}

union NotificationSource = UserActivityAlert

type NotificationTemplate {
  body_html: String
  body_text: String
  event_key: String!
  id: Int!
  subject: String
}

input NotificationTemplateInput {
  body_html: String
  body_text: String
  subject: String
}

type Order {
  charge_id: String
  id: Int
  order_entries: [OrderEntry]!
  paid_at: Date
  payment_amount: Money
  payment_note: String
  status: String!
  submitted_at: Date
  total_price: Money!
  user_con_profile: UserConProfile!
}

"""
An edge in a connection.
"""
type OrderEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Order
}

type OrderEntry {
  describe_products: String!
  id: Int
  order: Order!
  price: Money!
  price_per_item: Money!
  product: Product!
  product_variant: ProductVariant
  quantity: Int!
}

input OrderEntryInput {
  product_id: Int
  product_variant_id: Int
  quantity: Int
}

input OrderFiltersInput {
  status: String
  user_name: String
}

input OrderInput {
  payment_note: String
}

type OrderQuantityByStatus {
  quantity: Int!
  status: String!
}

"""
The connection type for Order.
"""
type OrdersConnection {
  """
  A list of edges.
  """
  edges: [OrderEdge]

  """
  A list of nodes.
  """
  nodes: [Order]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

type OrdersPagination implements PaginationInterface {
  current_page: Int!
  entries: [Order!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

type Organization {
  conventions: [Convention!]!
  current_ability_can_manage_access: Boolean!
  id: Int!
  name: String!
  organization_roles: [OrganizationRole!]!
}

type OrganizationRole {
  id: Int!
  name: String!
  organization: Organization!
  permissions: [Permission!]!
  users: [User!]!
}

input OrganizationRoleInput {
  name: String
}

type Page {
  admin_notes: String
  cms_layout: CmsLayout
  content: String
  content_html: String!
  current_ability_can_delete: Boolean!
  current_ability_can_update: Boolean!
  id: Int!
  name: String
  skip_clickwrap_agreement: Boolean
  slug: String
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

input PageInput {
  admin_notes: String
  cms_layout_id: Int
  content: String
  name: String
  skip_clickwrap_agreement: Boolean
  slug: String
}

interface PaginationInterface {
  current_page: Int!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

enum PaymentMode {
  later
  now
}

type Permission {
  id: Int!
  model: PermissionedModel!
  permission: String!
  role: PermissionedRole!
}

input PermissionInput {
  model_id: Int
  model_type: PermissionedModelTypeIndicator
  permission: String!
  role_id: Int
  role_type: PermissionedRoleTypeIndicator
}

union PermissionedModel = CmsContentGroup | Convention | EventCategory

enum PermissionedModelTypeIndicator {
  CmsContentGroup
  Convention
  EventCategory
}

union PermissionedRole = OrganizationRole | StaffPosition

enum PermissionedRoleTypeIndicator {
  OrganizationRole
  StaffPosition
}

type Product {
  available: Boolean!
  description: String
  description_html: String
  id: Int
  image_url: String
  name: String!
  order_quantities_by_status: [OrderQuantityByStatus!]!
  payment_options: [String]!
  price: Money!
  product_variants: [ProductVariant!]!
}

input ProductInput {
  available: Boolean
  delete_variant_ids: [Int!]
  description: String
  image: Upload
  name: String
  payment_options: [String!]
  price: MoneyInput
  product_variants: [ProductVariantInput!]
}

type ProductVariant {
  description: String
  description_html: String
  id: Int
  image_url: String
  name: String!
  order_quantities_by_status: [OrderQuantityByStatus!]!
  override_price: Money
  position: Int
  product: Product!
}

input ProductVariantInput {
  description: String
  id: Int
  image: Upload
  name: String
  override_price: MoneyInput
}

"""
Autogenerated input type of ProvideEventTicket
"""
input ProvideEventTicketInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_id: Int!
  ticket_type_id: Int!
  user_con_profile_id: Int!
}

"""
Autogenerated return type of ProvideEventTicket
"""
type ProvideEventTicketPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticket: Ticket!
}

"""
Autogenerated input type of PurchaseTicket
"""
input PurchaseTicketInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  stripe_token: String!
  ticket_type_id: Int!
}

"""
Autogenerated return type of PurchaseTicket
"""
type PurchaseTicketPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticket: Ticket!
}

type Query {
  accountFormContentHtml: String
  assumedIdentityFromProfile: UserConProfile
  cmsContentGroup(id: Int!): CmsContentGroup!
  cmsContentGroups: [CmsContentGroup!]!
  cmsFiles: [CmsFile!]
  cmsGraphqlQueries: [CmsGraphqlQuery!]
  cmsLayouts: [CmsLayout!]!
  cmsNavigationItems: [CmsNavigationItem!]!
  cmsPage(id: Int, rootPage: Boolean, slug: String): Page!
  cmsPages: [Page!]!
  cmsParent: CmsParent!
  cmsPartials: [CmsPartial!]!
  cmsVariables: [CmsVariable!]
  convention(id: Int): Convention
  conventions: [Convention!]!
  currentAbility: Ability!
  currentPendingOrder: Order
  currentUser: User
  effectiveCmsLayout(path: String!): CmsLayout!
  event(id: Int!): Event
  eventProposal(id: Int!): EventProposal
  events(extendedCounts: Boolean, finish: Date, includeDropped: Boolean, start: Date): [Event]
  form(id: Int!): Form
  liquidAssigns: [LiquidAssign!]
  myAuthorizedApplications: [AuthorizedApplication!]!
  myProfile: UserConProfile
  my_signups: [Signup!]
  notifierLiquidAssigns(eventKey: String!): [LiquidAssign!]
  oauthPreAuth(queryParams: Json!): Json!
  organizations: [Organization!]!
  previewFormItem(formItem: FormItemInput!, formSectionId: Int!): FormItem!
  previewLiquid(content: String!): String!
  previewMarkdown(markdown: String!): String!
  previewNotifierLiquid(content: String!, eventKey: String!): String!
  product(id: Int!): Product!
  rootSite: RootSite!
  searchCmsContent(name: String): [CmsContent!]!
  signup(id: Int!): Signup!
  staffPosition(id: Int!): StaffPosition
  user(id: Int!): User!
  userConProfile(id: Int!): UserConProfile
  users(ids: [Int!]!): [User!]!
  users_paginated(filters: UserFiltersInput, page: Int, per_page: Int, sort: [SortInput!]): UsersPagination!
}

"""
Autogenerated input type of RateEvent
"""
input RateEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_id: Int!
  rating: Int!
}

"""
Autogenerated return type of RateEvent
"""
type RateEventPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: Event!
}

enum ReceiveSignupEmail {
  """
  Receive email for all signup activity
  """
  ALL_SIGNUPS

  """
  Do not receive signup email
  """
  NO

  """
  Receive email for signup activity affecting confirmed signups
  """
  NON_WAITLIST_SIGNUPS
}

enum RefundStatus {
  """
  A refund was requested, but the charge had already been refunded
  """
  ALREADY_REFUNDED

  """
  No refund was attempted
  """
  NOT_REFUNDED

  """
  A refund was successfully provided
  """
  REFUNDED
}

type RegistrationPolicy {
  buckets: [RegistrationPolicyBucket!]!
  minimum_slots: Int
  minimum_slots_including_not_counted: Int
  only_uncounted: Boolean
  preferred_slots: Int
  preferred_slots_including_not_counted: Int
  prevent_no_preference_signups: Boolean!
  slots_limited: Boolean
  total_slots: Int
  total_slots_including_not_counted: Int
}

type RegistrationPolicyBucket {
  anything: Boolean!
  description: String
  expose_attendees: Boolean!
  key: String!
  minimum_slots: Int
  name: String
  not_counted: Boolean!
  preferred_slots: Int
  slots_limited: Boolean!
  total_slots: Int
}

"""
Autogenerated input type of RejectSignupRequest
"""
input RejectSignupRequestInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of RejectSignupRequest
"""
type RejectSignupRequestPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup_request: SignupRequest!
}

"""
Autogenerated input type of RenameCmsFile
"""
input RenameCmsFileInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  filename: String!
  id: Int!
}

"""
Autogenerated return type of RenameCmsFile
"""
type RenameCmsFilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_file: CmsFile!
}

"""
Autogenerated input type of RestoreDroppedEvent
"""
input RestoreDroppedEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of RestoreDroppedEvent
"""
type RestoreDroppedEventPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: Event!
}

"""
Autogenerated input type of RevokeAuthorizedApplication
"""
input RevokeAuthorizedApplicationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  uid: ID!
}

"""
Autogenerated return type of RevokeAuthorizedApplication
"""
type RevokeAuthorizedApplicationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

type Room {
  id: Int!
  name: String
  runs: [Run!]!
}

input RoomInput {
  name: String
}

type RootSite {
  default_layout: CmsLayout!
  id: ID!
  root_page: Page!
  site_name: String!
}

input RootSiteInput {
  default_layout_id: Int
  root_page_id: Int
  site_name: String
}

type Run {
  confirmed_limited_signup_count: Int
  confirmed_signup_count: Int
  current_ability_can_signup_summary_run: Boolean!
  ends_at: Date
  event: Event
  id: Int!
  my_signup_requests: [SignupRequest!]!
  my_signups: [Signup]
  not_counted_confirmed_signup_count: Int
  not_counted_signup_count: Int
  room_names: [String]
  rooms: [Room]
  schedule_note: String
  signup_count_by_state_and_bucket_key_and_counted: Json!
  signups_paginated(filters: SignupFiltersInput, page: Int, per_page: Int, sort: [SortInput]): SignupsPagination!
  starts_at: Date
  title_suffix: String
  waitlisted_signup_count: Int
}

input RunInput {
  room_ids: [Int!]
  schedule_note: String
  starts_at: Date
  title_suffix: String
}

type ScheduledMoneyValue {
  timespans: [TimespanWithMoneyValue!]!
}

input ScheduledMoneyValueInput {
  timespans: [TimespanWithMoneyValueInput!]!
}

type ScheduledValue {
  timespans: [TimespanWithValue!]!
}

input ScheduledValueInput {
  timespans: [TimespanWithValueInput!]!
}

enum SchedulingUi {
  recurring
  regular
  single_run
}

"""
Autogenerated input type of SetCmsVariable
"""
input SetCmsVariableInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_variable: CmsVariableInput!
}

"""
Autogenerated return type of SetCmsVariable
"""
type SetCmsVariablePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_variable: CmsVariable!
}

enum ShowSchedule {
  gms
  no
  priv
  yes
}

type Signup {
  age_restrictions_check: String!
  bucket_key: String
  choice: Int
  counted: Boolean!
  created_at: Date!
  id: Int!
  requested_bucket_key: String
  run: Run!
  state: SignupState!
  updated_at: Date!
  user_con_profile: UserConProfile!
  waitlist_position: Int
}

type SignupCountByState {
  count: Int!
  state: SignupState!
}

input SignupFiltersInput {
  bucket: [String!]
  email: String
  name: String
  state: [String!]
}

enum SignupMode {
  """
  Attendees can request signups and signup changes but con staff must approve them
  """
  moderated

  """
  Attendees can sign themselves up for events
  """
  self_service
}

type SignupMoveResult {
  bucket_key: String
  prev_bucket_key: String
  prev_state: SignupState!
  signup: Signup!
  signup_id: Int!
  state: SignupState!
}

type SignupRequest {
  created_at: Date!
  id: Int!
  replace_signup: Signup
  requested_bucket_key: String
  result_signup: Signup
  state: SignupRequestState!
  target_run: Run!
  updated_at: Date!
  updated_by: User!
  user_con_profile: UserConProfile!
}

input SignupRequestFiltersInput {
  state: [SignupRequestState!]
}

enum SignupRequestState {
  """
  The request has been accepted and the requester has been signed up (see the result_signup field for the actual signup)
  """
  accepted

  """
  The request has not yet been reviewed by a moderator
  """
  pending

  """
  The request has been rejected and the requester has not been signed up
  """
  rejected

  """
  The requester withdrew their request before it was accepted or rejected
  """
  withdrawn
}

type SignupRequestsPagination implements PaginationInterface {
  current_page: Int!
  entries: [SignupRequest!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

enum SignupState {
  confirmed
  waitlisted
  withdrawn
}

type SignupsPagination implements PaginationInterface {
  current_page: Int!
  entries: [Signup!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

enum SiteMode {
  """
  Site behaves as a convention with multiple events
  """
  convention

  """
  Site behaves as a single standalone event
  """
  single_event
}

"""
Autogenerated input type of SortCmsNavigationItems
"""
input SortCmsNavigationItemsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  sort_items: [UpdateCmsNavigationItemInput!]!
}

"""
Autogenerated return type of SortCmsNavigationItems
"""
type SortCmsNavigationItemsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

input SortInput {
  desc: Boolean!
  field: String!
}

type StaffPosition {
  email: String
  id: Int!
  name: String
  permissions: [Permission!]!
  user_con_profiles: [UserConProfile!]
  visible: Boolean
}

input StaffPositionInput {
  email: String
  name: String
  user_con_profile_ids: [Int!]
  visible: Boolean
}

"""
Autogenerated input type of SubmitEventProposal
"""
input SubmitEventProposalInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of SubmitEventProposal
"""
type SubmitEventProposalPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_proposal: EventProposal!
}

"""
Autogenerated input type of SubmitOrder
"""
input SubmitOrderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  payment_mode: PaymentMode!
  stripe_token: String
}

"""
Autogenerated return type of SubmitOrder
"""
type SubmitOrderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order: Order!
}

type TeamMember {
  display: Boolean! @deprecated(reason: "Use display_team_member instead")
  display_team_member: Boolean!
  email: String
  event: Event!
  id: Int!
  receive_con_email: Boolean!
  receive_signup_email: ReceiveSignupEmail!
  show_email: Boolean!
  user_con_profile: UserConProfile!
}

input TeamMemberInput {
  display_team_member: Boolean
  receive_con_email: Boolean
  receive_signup_email: ReceiveSignupEmail
  show_email: Boolean
}

type Ticket {
  charge_id: String
  convention: Convention!
  created_at: Date!
  id: Int!
  payment_amount: Money
  payment_note: String
  provided_by_event: Event
  ticket_type: TicketType!
  updated_at: Date!
  user_con_profile: UserConProfile!
}

type TicketCountByTypeAndPaymentAmount {
  count: Int!
  payment_amount: Money!
  ticket_type: TicketType!
}

input TicketInput {
  payment_amount: MoneyInput
  payment_note: String
  provided_by_event_id: Int
  ticket_type_id: Int!
}

enum TicketMode {
  """
  Tickets are neither sold nor required in this convention
  """
  disabled

  """
  A valid ticket is required to sign up for events in this convention
  """
  required_for_signup
}

type TicketType {
  allows_event_signups: Boolean!
  convention: Convention!
  counts_towards_convention_maximum: Boolean!
  description: String
  id: Int!
  maximum_event_provided_tickets(event_id: Int): Int!
  name: String
  pricing_schedule: ScheduledMoneyValue
  publicly_available: Boolean!
}

input TicketTypeInput {
  allows_event_signups: Boolean
  counts_towards_convention_maximum: Boolean
  description: String
  maximum_event_provided_tickets: Int
  name: String
  pricing_schedule: ScheduledMoneyValueInput
  publicly_available: Boolean
}

type TimespanWithMoneyValue {
  finish: Date
  start: Date
  value: Money!
}

input TimespanWithMoneyValueInput {
  finish: Date
  start: Date
  value: MoneyInput!
}

type TimespanWithValue {
  finish: Date
  start: Date
  value: String!
}

input TimespanWithValueInput {
  finish: Date
  start: Date
  string_value: String
}

"""
Autogenerated input type of TransitionEventProposal
"""
input TransitionEventProposalInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  drop_event: Boolean
  id: Int!
  status: String!
}

"""
Autogenerated return type of TransitionEventProposal
"""
type TransitionEventProposalPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_proposal: EventProposal!
}

"""
Autogenerated input type of UpdateCmsContentGroup
"""
input UpdateCmsContentGroupInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_content_group: CmsContentGroupInput!
  grant_permissions: [PermissionInput!]
  id: Int!
  revoke_permissions: [PermissionInput!]
}

"""
Autogenerated return type of UpdateCmsContentGroup
"""
type UpdateCmsContentGroupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_content_group: CmsContentGroup!
}

"""
Autogenerated input type of UpdateCmsGraphqlQuery
"""
input UpdateCmsGraphqlQueryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  query: CmsGraphqlQueryInput!
}

"""
Autogenerated return type of UpdateCmsGraphqlQuery
"""
type UpdateCmsGraphqlQueryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  query: CmsGraphqlQuery!
}

"""
Autogenerated input type of UpdateCmsLayout
"""
input UpdateCmsLayoutInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_layout: CmsLayoutInput!
  id: Int!
}

"""
Autogenerated return type of UpdateCmsLayout
"""
type UpdateCmsLayoutPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_layout: CmsLayout!
}

"""
Autogenerated input type of UpdateCmsNavigationItem
"""
input UpdateCmsNavigationItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_navigation_item: CmsNavigationItemInput
  id: Int!
}

"""
Autogenerated return type of UpdateCmsNavigationItem
"""
type UpdateCmsNavigationItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_navigation_item: CmsNavigationItem!
}

"""
Autogenerated input type of UpdateCmsPartial
"""
input UpdateCmsPartialInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_partial: CmsPartialInput!
  id: Int!
}

"""
Autogenerated return type of UpdateCmsPartial
"""
type UpdateCmsPartialPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cms_partial: CmsPartial!
}

"""
Autogenerated input type of UpdateConvention
"""
input UpdateConventionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  convention: ConventionInput!
  id: Int
}

"""
Autogenerated return type of UpdateConvention
"""
type UpdateConventionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  convention: Convention!
}

"""
Autogenerated input type of UpdateEventAdminNotes
"""
input UpdateEventAdminNotesInput {
  admin_notes: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of UpdateEventAdminNotes
"""
type UpdateEventAdminNotesPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: Event!
}

"""
Autogenerated input type of UpdateEventCategory
"""
input UpdateEventCategoryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_category: EventCategoryInput!
  id: Int!
}

"""
Autogenerated return type of UpdateEventCategory
"""
type UpdateEventCategoryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_category: EventCategory!
}

"""
Autogenerated input type of UpdateEvent
"""
input UpdateEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: EventInput
  id: Int
}

"""
Autogenerated return type of UpdateEvent
"""
type UpdateEventPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event: Event!
}

"""
Autogenerated input type of UpdateEventProposalAdminNotes
"""
input UpdateEventProposalAdminNotesInput {
  admin_notes: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of UpdateEventProposalAdminNotes
"""
type UpdateEventProposalAdminNotesPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_proposal: EventProposal!
}

"""
Autogenerated input type of UpdateEventProposal
"""
input UpdateEventProposalInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_proposal: EventProposalInput!
  id: Int!
}

"""
Autogenerated return type of UpdateEventProposal
"""
type UpdateEventProposalPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_proposal: EventProposal!
}

"""
Autogenerated input type of UpdateForm
"""
input UpdateFormInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form: FormInput!
  id: Int!
}

"""
Autogenerated input type of UpdateFormItem
"""
input UpdateFormItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_item: FormItemInput!
  id: Int!
}

"""
Autogenerated return type of UpdateFormItem
"""
type UpdateFormItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_item: FormItem!
}

"""
Autogenerated return type of UpdateForm
"""
type UpdateFormPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form: Form!
}

"""
Autogenerated input type of UpdateFormSection
"""
input UpdateFormSectionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_section: FormSectionInput!
  id: Int!
}

"""
Autogenerated return type of UpdateFormSection
"""
type UpdateFormSectionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_section: FormSection!
}

"""
Autogenerated input type of UpdateFormWithJSON
"""
input UpdateFormWithJSONInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form_json: String!
  id: Int!
}

"""
Autogenerated return type of UpdateFormWithJSON
"""
type UpdateFormWithJSONPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  form: Form!
}

"""
Autogenerated input type of UpdateMaximumEventProvidedTicketsOverride
"""
input UpdateMaximumEventProvidedTicketsOverrideInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  override_value: Int!
}

"""
Autogenerated return type of UpdateMaximumEventProvidedTicketsOverride
"""
type UpdateMaximumEventProvidedTicketsOverridePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  maximum_event_provided_tickets_override: MaximumEventProvidedTicketsOverride!
}

"""
Autogenerated input type of UpdateNotificationTemplate
"""
input UpdateNotificationTemplateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  event_key: String!
  notification_template: NotificationTemplateInput!
}

"""
Autogenerated return type of UpdateNotificationTemplate
"""
type UpdateNotificationTemplatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  notification_template: NotificationTemplate!
}

"""
Autogenerated input type of UpdateOrderEntry
"""
input UpdateOrderEntryInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  order_entry: OrderEntryInput!
}

"""
Autogenerated return type of UpdateOrderEntry
"""
type UpdateOrderEntryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order_entry: OrderEntry!
}

"""
Autogenerated input type of UpdateOrder
"""
input UpdateOrderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  order: OrderInput!
}

"""
Autogenerated return type of UpdateOrder
"""
type UpdateOrderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order: Order!
}

"""
Autogenerated input type of UpdateOrganizationRole
"""
input UpdateOrganizationRoleInput {
  add_permissions: [PermissionInput!]
  add_user_ids: [Int!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  organization_role: OrganizationRoleInput!
  remove_permission_ids: [Int!]
  remove_user_ids: [Int!]
}

"""
Autogenerated return type of UpdateOrganizationRole
"""
type UpdateOrganizationRolePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  organization_role: OrganizationRole!
}

"""
Autogenerated input type of UpdatePage
"""
input UpdatePageInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  page: PageInput!
}

"""
Autogenerated return type of UpdatePage
"""
type UpdatePagePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  page: Page!
}

"""
Autogenerated input type of UpdateProduct
"""
input UpdateProductInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  product: ProductInput!
}

"""
Autogenerated return type of UpdateProduct
"""
type UpdateProductPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  product: Product!
}

"""
Autogenerated input type of UpdateRoom
"""
input UpdateRoomInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  room: RoomInput!
}

"""
Autogenerated return type of UpdateRoom
"""
type UpdateRoomPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  room: Room!
}

"""
Autogenerated input type of UpdateRootSite
"""
input UpdateRootSiteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  root_site: RootSiteInput!
}

"""
Autogenerated return type of UpdateRootSite
"""
type UpdateRootSitePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  root_site: RootSite!
}

"""
Autogenerated input type of UpdateRun
"""
input UpdateRunInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  run: RunInput!
}

"""
Autogenerated return type of UpdateRun
"""
type UpdateRunPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  run: Run!
}

"""
Autogenerated input type of UpdateSignupBucket
"""
input UpdateSignupBucketInput {
  bucket_key: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of UpdateSignupBucket
"""
type UpdateSignupBucketPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup: Signup!
}

"""
Autogenerated input type of UpdateSignupCounted
"""
input UpdateSignupCountedInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  counted: Boolean!
  id: Int!
}

"""
Autogenerated return type of UpdateSignupCounted
"""
type UpdateSignupCountedPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup: Signup!
}

"""
Autogenerated input type of UpdateStaffPosition
"""
input UpdateStaffPositionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  staff_position: StaffPositionInput!
}

"""
Autogenerated return type of UpdateStaffPosition
"""
type UpdateStaffPositionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  staff_position: StaffPosition!
}

"""
Autogenerated input type of UpdateStaffPositionPermissions
"""
input UpdateStaffPositionPermissionsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  grant_permissions: [PermissionInput!]!
  revoke_permissions: [PermissionInput!]!
  staff_position_id: Int!
}

"""
Autogenerated return type of UpdateStaffPositionPermissions
"""
type UpdateStaffPositionPermissionsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  staff_position: StaffPosition!
}

"""
Autogenerated input type of UpdateTeamMember
"""
input UpdateTeamMemberInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  team_member: TeamMemberInput!
}

"""
Autogenerated return type of UpdateTeamMember
"""
type UpdateTeamMemberPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  team_member: TeamMember!
}

"""
Autogenerated input type of UpdateTicket
"""
input UpdateTicketInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  ticket: TicketInput!
}

"""
Autogenerated return type of UpdateTicket
"""
type UpdateTicketPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticket: Ticket!
}

"""
Autogenerated input type of UpdateTicketType
"""
input UpdateTicketTypeInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  ticket_type: TicketTypeInput!
}

"""
Autogenerated return type of UpdateTicketType
"""
type UpdateTicketTypePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticket_type: TicketType!
}

"""
Autogenerated input type of UpdateUserActivityAlert
"""
input UpdateUserActivityAlertInput {
  add_notification_destinations: [NotificationDestinationInput!]!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  remove_notification_destination_ids: [Int!]!
  user_activity_alert: UserActivityAlertInput!
}

"""
Autogenerated return type of UpdateUserActivityAlert
"""
type UpdateUserActivityAlertPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user_activity_alert: UserActivityAlert!
}

"""
Autogenerated input type of UpdateUserConProfile
"""
input UpdateUserConProfileInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  user_con_profile: UserConProfileInput!
}

"""
Autogenerated return type of UpdateUserConProfile
"""
type UpdateUserConProfilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user_con_profile: UserConProfile!
}

scalar Upload

type User {
  email: String
  event_proposals: [EventProposal!]!
  first_name: String
  id: Int!
  last_name: String
  name: String
  name_inverted: String
  privileges: [String]
  user_con_profiles: [UserConProfile!]!
}

type UserActivityAlert {
  convention: Convention!
  email: String
  id: Int!
  notification_destinations: [NotificationDestination!]!
  partial_name: String
  trigger_on_ticket_create: Boolean!
  trigger_on_user_con_profile_create: Boolean!
  user: User
}

input UserActivityAlertInput {
  email: String
  partial_name: String
  trigger_on_ticket_create: Boolean
  trigger_on_user_con_profile_create: Boolean
  user_id: Int
}

type UserConProfile {
  ability: Ability
  accepted_clickwrap_agreement: Boolean
  address: String
  best_call_time: String
  bio: String
  bio_html: String
  bio_name: String
  birth_date: Date
  can_have_bio: Boolean!
  can_override_maximum_event_provided_tickets: Boolean!
  city: String
  convention: Convention
  country: String
  day_phone: String
  email: String
  evening_phone: String
  first_name: String
  form_response_attrs_json: String
  gravatar_enabled: Boolean!
  gravatar_url: String!
  id: Int!
  last_name: String
  name: String
  name_inverted: String
  name_without_nickname: String
  nickname: String
  order_summary: String!
  orders: [Order]!
  preferred_contact: String
  privileges: [String] @deprecated(reason: "Privileges are deprecated in favor of permissions and staff positions")
  show_nickname_in_bio: Boolean
  signup_requests: [SignupRequest!]!
  signups: [Signup!]!
  staff_positions: [StaffPosition!]!
  state: String
  team_members: [TeamMember!]!
  ticket: Ticket
  user: User
  user_id: Int!
  zipcode: String
}

input UserConProfileFiltersInput {
  attending: Boolean
  email: String
  first_name: String
  is_team_member: Boolean
  last_name: String
  name: String
  payment_amount: Float

  """
  DEPRECATED. Privileges are deprecated in favor of permissions and staff positions
  """
  privileges: [String!]
  ticket: [String!]
  ticket_type: [String!]
}

input UserConProfileInput {
  address: String
  best_call_time: String
  bio: String
  birth_date: Date
  city: String
  country: String
  day_phone: String
  evening_phone: String
  first_name: String
  form_response_attrs_json: String
  gravatar_enabled: Boolean
  last_name: String
  nickname: String
  preferred_contact: String
  show_nickname_in_bio: Boolean
  state: String
  zipcode: String
}

type UserConProfilesPagination implements PaginationInterface {
  current_page: Int!
  entries: [UserConProfile!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

input UserFiltersInput {
  email: String
  first_name: String
  last_name: String
  name: String
  privileges: [String!]
}

type UsersPagination implements PaginationInterface {
  current_page: Int!
  entries: [User!]!
  per_page: Int!
  total_entries: Int!
  total_pages: Int!
}

input WinningUserConProfileInput {
  conventionId: Int!
  userConProfileId: Int!
}

"""
Autogenerated input type of WithdrawAllUserConProfileSignups
"""
input WithdrawAllUserConProfileSignupsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user_con_profile_id: Int!
}

"""
Autogenerated return type of WithdrawAllUserConProfileSignups
"""
type WithdrawAllUserConProfileSignupsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user_con_profile: UserConProfile!
}

"""
Autogenerated input type of WithdrawMySignup
"""
input WithdrawMySignupInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  run_id: Int!
}

"""
Autogenerated return type of WithdrawMySignup
"""
type WithdrawMySignupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup: Signup!
}

"""
Autogenerated input type of WithdrawSignupRequest
"""
input WithdrawSignupRequestInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of WithdrawSignupRequest
"""
type WithdrawSignupRequestPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup_request: SignupRequest!
}

"""
Autogenerated input type of WithdrawUserSignup
"""
input WithdrawUserSignupInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  run_id: Int!
  suppress_notifications: Boolean
  user_con_profile_id: Int!
}

"""
Autogenerated return type of WithdrawUserSignup
"""
type WithdrawUserSignupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  signup: Signup!
}