#!/usr/bin/env bash

set -e

PG_OPTIONS=""

if [[ -n $USE_DOCKER_COMPOSE ]]
then
  echo 'postgres:*:*:postgres:postgres' > ~/.pgpass
  chmod 0600 ~/.pgpass
  PG_OPTIONS="-h postgres"
fi

echo 'Loading database into local Postgres'
dropdb $PG_OPTIONS -U postgres -w --if-exists intercode_production_tmp
createdb $PG_OPTIONS -U postgres -w intercode_production_tmp
pg_restore $PG_OPTIONS -c --if-exists -U postgres -w --no-owner -j4 -d intercode_production_tmp "$1"

echo 'Changing convention domains and names for development'
echo "UPDATE staff_positions SET email = regexp_replace(email, '@.*', '@' || regexp_replace(lower(conventions.name), '[^a-z0-9]', '', 'g') || '.intercode.test') FROM conventions WHERE staff_positions.convention_id = conventions.id;" | psql $PG_OPTIONS -U postgres -w intercode_production_tmp
echo "UPDATE conventions SET domain = regexp_replace(lower(name), '[^a-z0-9]', '', 'g') || '.intercode.test', name = name || ' [dev]';" | psql $PG_OPTIONS -U postgres -w intercode_production_tmp

echo 'Changing Stripe keys for development'
echo "UPDATE conventions SET stripe_publishable_key = 'pk_test_uD3hl7sRFOjcbdSG6KaH9olQ', stripe_secret_key = 'sk_test_VRD1WlpRoaPdwhmzRTIoqRrr';" | psql $PG_OPTIONS -U postgres -w intercode_production_tmp

echo 'Dropping intercode_development database'
dropdb --if-exists $PG_OPTIONS -U postgres -w intercode_development

echo 'Recreating intercode_development from production data'
createdb $PG_OPTIONS -U postgres -w -T intercode_production_tmp intercode_development

echo 'Dropping tmp database'
dropdb $PG_OPTIONS -U postgres -w intercode_production_tmp
